{"version":3,"sources":["themes/theme.ts","pages/Login/useStyles.ts","helpers/APICalls/login.ts","pages/Login/LoginForm/useStyles.ts","helpers/APICalls/google.ts","pages/Login/LoginForm/LoginForm.tsx","components/AuthHeader/useStyles.ts","helpers/APICalls/loginWithCookies.ts","helpers/APICalls/logout.ts","context/useAuthContext.tsx","components/AvatarDisplay/AvatarDisplay.tsx","components/AuthMenu/useStyles.ts","components/AuthMenu/AuthMenu.tsx","components/NotificationPopUp/useStyles.ts","helpers/APICalls/notification.ts","context/useSocketContext.tsx","context/notificationContext.tsx","components/NotificationPopUp/NotificationPopUp.tsx","components/AuthHeader/AuthHeader.tsx","context/useSnackbarContext.tsx","pages/Login/Login.tsx","pages/SubmitDesign/useStyles.ts","helpers/APICalls/submission.ts","helpers/APICalls/contest.ts","pages/SubmitDesign/SubmitDesign.tsx","pages/SignUp/useStyles.ts","helpers/APICalls/register.ts","pages/SignUp/SignUpForm/useStyles.ts","pages/SignUp/SignUpForm/SignUpForm.tsx","pages/SignUp/SignUp.tsx","pages/Profile/useStyles.ts","components/TourContent/useStyles.ts","context/tourContext.tsx","components/TourContent/TourContent.tsx","components/ContestList/useStyles.ts","components/ContestListContent/useStyles.ts","components/ContestListContent/ContestListContent.tsx","components/WinnerListContent/useStyles.ts","components/WinnerListContent/WinnerListContent.tsx","components/ImageModal/useStyles.ts","components/ImageModal/ImageModal.tsx","Images/lionTattoo.png","components/ContestList/ContestList.tsx","helpers/APICalls/winner.ts","helpers/APICalls/profile.ts","pages/Profile/Profile.tsx","components/TablePagination/useStyles.ts","components/TablePagination/TablePagination.tsx","components/ContestTable/useStyles.ts","components/SectionHeader/useStyles.ts","components/SectionHeader/SectionHeader.tsx","components/ContestTable/ContestTable.tsx","components/Image/useStyles.ts","components/Image/Image.tsx","components/WinnerCard/useStyles.ts","components/WinnerCard/WinnerCard.tsx","components/Section/useStyles.ts","components/Section/Section.tsx","components/SplashReviews/useStyles.ts","helpers/APICalls/review.ts","components/ReviewCarousel/useStyles.ts","components/ReviewCarousel/ReviewCarousel.tsx","components/SplashReviews/SplashReviews.tsx","components/SectionAlternate/useStyles.ts","components/SectionAlternate/SectionAlternate.tsx","components/Hero/useStyles.ts","components/Hero/HeroShaped/useStyles.ts","components/Hero/HeroShaped/HeroShaped.tsx","Images/heroImg.jpg","components/Hero/Hero.tsx","pages/Discovery/useStyles.ts","pages/Discovery/Discovery.tsx","pages/CreateContest/CreateContestForm/useStyles.ts","pages/CreateContest/CreateContestForm/CreateContestForm.tsx","pages/CreateContest/useStyles.ts","pages/CreateContest/CreateContest.tsx","pages/AboutArtist/useStyles.tsx","components/AboutArtistTab/useStyles.ts","components/ArtistCarousel/useStyles.ts","components/ArtistCarousel/ArtistCarousel.tsx","components/AboutArtistTab/AboutArtistTab.tsx","helpers/APICalls/personalInfo.ts","components/ReviewTab/ReviewTabForm/useStyles.ts","components/ReviewTab/ReviewTabForm/ReviewTabForm.tsx","components/ReviewTab/useStyles.ts","components/ReviewTab/ReviewTab.tsx","pages/AboutArtist/AboutArtist.tsx","helpers/APICalls/stripe.ts","components/Payment/useStyles.ts","components/Payment/Payment.tsx","components/PersonalInfo/PersonalInfoForm/useStyles.ts","components/PersonalInfo/PersonalInfoForm/PersonalInfoForm.tsx","components/PersonalInfo/useStyles.ts","components/PersonalInfo/PersonalInfo.tsx","components/Password/PasswordForm/useStyles.ts","components/Password/PasswordForm/PasswordForm.tsx","helpers/APICalls/password.ts","components/Password/useStyles.ts","components/Password/Password.tsx","pages/Notifications/useStyles.ts","pages/Notifications/Notifications.tsx","pages/Settings/useStyles.ts","pages/Settings/Settings.tsx","pages/Contest/useStyles.ts","components/SubmittedDesigns/useStyles.ts","components/SubmittedDesigns/SubmittedDesigns.tsx","pages/Contest/Contest.tsx","pages/ForgotPassword/ForgotPasswordForm/useStyles.ts","pages/ForgotPassword/ForgotPasswordForm/ForgotPasswordForm.tsx","pages/ForgotPassword/useStyles.ts","pages/ForgotPassword/ForgotPassword.tsx","pages/ResetPassword/ResetPasswordForm/useStyles.ts","pages/ResetPassword/ResetPasswordForm/ResetPasswordForm.tsx","pages/ResetPassword/useStyles.ts","pages/ResetPassword/ResetPassword.tsx","pages/Dashboard/useStyles.ts","components/ChatSideBanner/useStyles.ts","components/Search/useStyles.ts","helpers/APICalls/searchUsers.ts","helpers/APICalls/conversations.ts","context/conversationContext.tsx","components/Search/Search.tsx","components/ConvoCard/useStyles.ts","components/ConvoContent/useStyles.ts","components/ConvoContent/ConvoContent.tsx","components/ConvoCard/ConvoCard.tsx","components/ChatSideBanner/ChatSideBanner.tsx","components/ActiveChat/useStyles.ts","components/MessageHeader/useStyles.ts","components/MessageHeader/MessageHeader.tsx","components/MessageInput/useStyles.ts","components/MessageInput/MessageInput.tsx","components/SenderBubble/useStyles.ts","components/SenderBubble/SenderBubble.tsx","components/OtherUserBubble/useStyles.ts","components/OtherUserBubble/OtherUserBubble.tsx","components/Messages/useStyles.ts","components/Messages/Messages.tsx","components/ActiveChat/ActiveChat.tsx","components/ChatDrawer/useStyles.ts","components/ChatDrawer/ChatDrawer.tsx","pages/Dashboard/Dashboard.tsx","App.tsx","serviceWorker.js","index.js"],"names":["theme","createTheme","typography","fontFamily","fontSize","button","textTransform","fontWeight","palette","common","black","white","primary","main","secondary","shape","borderRadius","useStyles","makeStyles","root","minHeight","borderBottom","display","justifyContent","navbar","backgroundColor","color","loginContainer","margin","authWrapper","alignItems","flexDirection","paddingTop","welcome","paddingBottom","login","email","password","a","fetchOptions","method","headers","body","JSON","stringify","credentials","fetch","then","res","json","catch","error","message","form","width","marginTop","spacing","textField","border","label","paddingLeft","inputs","height","padding","forgot","paddingRight","submit","reset","textDecoration","loginGoogle","tokenId","Login","handleSubmit","handleDemoSubmit","classes","responseSuccessGoogle","response","tokenObj","id_token","location","reload","responseErrorGoogle","Error","initialValues","validationSchema","Yup","required","max","min","onSubmit","handleChange","values","touched","errors","isSubmitting","className","noValidate","Box","mt","mb","Typography","TextField","id","placeholder","fullWidth","InputProps","input","name","autoComplete","autoFocus","helperText","Boolean","value","onChange","type","to","textAlign","Button","size","variant","CircularProgress","style","onClick","clientId","buttonText","onSuccess","onFailure","cookiePolicy","authHeader","flexWrap","breakpoints","down","tattooArt","marginLeft","letterSpacing","linkContainer","navLink","cursor","loginButton","marginRight","createContestBtn","loginWithCookies","logout","AuthContext","createContext","loggedInUser","undefined","updateLoginContext","AuthProvider","children","useState","setLoggedInUser","history","useHistory","path","useLocation","pathname","useCallback","data","user","push","logoutAPI","console","useEffect","success","includes","checkLoginWithCookies","Provider","useAuth","useContext","AvatarDisplay","Avatar","alt","src","profilePic","container","account","link","menuItem","AuthMenu","anchorEl","setAnchorEl","open","handleClose","event","currentTarget","IconButton","aria-label","aria-controls","aria-haspopup","Menu","keepMounted","onClose","anchorOrigin","vertical","horizontal","getContentAnchorEl","MenuItem","state","authHeaderText","poptitle","time","marginBottom","avatar","seeAll","popUpBox","top","notificationContainer","badge","createNotification","notification","err","getNotification","updateNotification","eNotification","opened","_id","deleteNotification","status","SocketContext","socket","initSocket","socketNotification","SocketProvider","setSocket","setSocketNotification","setMessage","log","io","withCredentials","on","useSocket","NotificationContext","notifications","setNotifications","NotificationProvider","allNotifications","getAll","updatedNotification","length","sort","b","Date","createdAt","valueOf","GlobalCss","withStyles","background","NotificationPopUp","filterNotification","filter","hoursCalculator","createdDate","diffTime","Math","abs","diffDays","ceil","diffHours","diffMinutes","diffSeconds","aria-describedby","map","Badge","badgeContent","Popover","transformOrigin","Grid","direction","item","contestId","align","AuthHeader","linkTo","btnText","p","minWidth","loggedIn","SnackBarContext","updateSnackBarMessage","SnackBarProvider","setOpen","snackbarHandleClose","reason","Snackbar","autoHideDuration","action","useSnackBar","component","CssBaseline","xs","sm","md","elevation","Paper","square","maxWidth","alignSelf","setSubmitting","paperContainer","previewPic","uploadBox","header","icon","fileInputLabel","fileInput","chooseFile","mutedText","uploadBtn","uploadSubmissionPic","file","createSubmission","images","getContestSubmissions","fetchData","getartistSubmission","artistId","uploadContestPic","getAllContests","date","howMany","page","getNumContests","getContestByUser","getContestById","addContest","contest","axios","post","chooseWinner","winningPic","submissionId","SubmitDesign","allPics","setAllPics","loading","setLoading","params","useParams","submitNewPic","e","target","files","formData","FormData","i","append","newPic","submitAllPics","toUser","notificationBody","userId","username","emit","pic","htmlFor","accept","multiple","disabled","register","SignUpForm","Register","grid","tab","buttonBox","toolbar","tabs","textColorPrimary","wrapper","TourContext","ok","TourProvider","useTourContext","TourContent","steps","dontOpen","stepsWithContent","step","content","words","Card","showNumber","isOpen","onRequestClose","list","overflow","contestInfo","contestContainer","noneAvailable","description","ContestListContent","ListItemText","title","Container","Link","prizeAmount","listItem","text","WinnerListContent","winner","overflowY","maxHeight","close","opacity","artistLink","artistName","image","modal","ImageModal","artistPic","setIsOpen","Modal","alignContent","ContestList","userContests","List","ListItem","LionTattoo","winningArtist","getWinnersByUser","getSomeWinners","num","updateProfile","Profile","setValue","contests","setContests","winners","setWinners","newProfilePic","setNewProfilePic","selector","newTheme","usersWinners","getUserContests","getWinners","Panel","props","role","index","preventDefault","Toolbar","ThemeProvider","Tabs","valueChange","textColor","Tab","data-tour","active","pagination","MyTablePagination","rowsPerPage","handleChangePage","handleChangeRowsPerPage","numContests","TablePagination","count","onPageChange","onRowsPerPageChange","borderBottomWidth","borderBottomStyle","muiPicker","paper","tableHead","tableRow","buttonReset","up","disableGutter","cta","SectionHeader","titleVariant","subtitleVariant","subtitle","subtitleColor","overline","fadeUp","ctaGroup","titleClasses","justifyGrid","data-aos","clsx","wrap","ContestTable","allContestsLength","setNumContests","sortType","setPage","setRowsPerPage","dateFilter","setDateFilter","moment","utc","_d","format","fetchCall","rows","allContests","newPage","handleChangeDate","utils","MomentUtils","inputVariant","keyboardIcon","autoOk","TableContainer","Table","stickyHeader","TableHead","TableRow","TableCell","sortParam","sortByHeader","TableBody","hover","tabIndex","deadlineDate","local","dBlock","Image","srcSet","lazy","lazyProps","rest","effect","winnerItem","position","transform","transitionDuration","objectFit","winnerInfoWrapper","left","right","bottom","backgroundImage","winnerTitle","winnerSubtitle","WinnerCard","disablePadding","narrow","Section","swiperContainer","getReviews","getAllReviews","createReviews","review","flexGrow","rating","reviewText","AutoPlaySwipeableViews","autoPlay","SwipeableViews","ReviewCarousel","reviews","useTheme","activeStep","setActiveStep","maxSteps","axis","onChangeIndex","enableMouseEvents","pt","reviewerId","Rating","readOnly","MobileStepper","nextButton","prevActiveStep","backButton","SplashReviews","setReviews","inner","innerNarrowed","SectionAlternate","backgroundSize","cover","zIndex","sectionHeader","hero","heroLeftSide","heroRightSide","flex","heroCover","heroImageContainer","heroImage","shapeOutside","clipPath","HeroShaped","leftSide","rightSide","Divider","Hero","HeroImg","winnerCard","winnerWrapper","table","Discovery","winnersData","updateDelay","scrollDuration","animationIn","animationOut","isVisible","box","imageList","overflowX","img","checked","sub","CreateContestForm","zone","setZone","setImages","integer","positive","newDate","tz","setFieldValue","multiline","startAdornment","InputAdornment","select","ImageList","rowHeight","cols","ImageListItem","$","hasClass","CreateContest","activity","heading","WebkitTextStroke","contentMarginsLeft","contentMarginsTop","about","ArtistCarousel","submission","created_at","fromNow","AboutArtistTab","info","pb","firstName","middleInit","lastName","phone","postPersonalInfo","getPersonalInfo","stars","ReviewTabForm","VALIDATION_SCHEMA","formPaper","readAll","ReviewTab","setChecked","result","updatedRev","getReviewsForArtist","Switch","inputProps","AboutArtist","setInfo","setSubmission","artistInfo","artistSubmission","getInfo","addCardToCustomer","cardId","stripeId","formGrid","cardNum","cardExpiry","cardCvc","Payment","stripe","useStripe","elements","useElements","cardElement","getElement","CardNumberElement","createPaymentMethod","card","billing_details","paymentMethod","options","iconStyle","base","iconColor","invalid","complete","flex-direction","PersonalInfo","matches","dateOfBirth","gender","Select","maxwidth","fields","ChangePasswordForm","confirmPassword","when","is","val","oneOf","forgotPassword","resetPassword","token","patch","changePassword","Password","hasSubmitted","setHasSubmitted","setError","boxShadow","prev","only","delete","Notifications","handleDelete","filteredNotifications","divider","indicator","paymentDetails","tabPanel","drawer","expandBtn","stripeKey","loadStripe","TabPanel","other","hidden","aria-labelledby","tabProps","Settings","expanded","setExpanded","Hidden","smUp","Drawer","anchor","orientation","indicatorColor","TabIndicatorProps","xsDown","backIcon","contestTitle","prize","descriptionHeader","imageWrapper","greyText","designGrid","by","titleBar","SubmittedDesigns","ImageListItemBar","titleWrap","ContestPage","contestSubmissions","setContestSubmissions","setContest","submissions","getUserContestSubmissions","getContest","ownerProfilePic","ownerName","gap","ForgotPasswordForm","Reset","ResetPasswordForm","drawerWrapper","chatWrapper","chatSideBanner","convosContainer","userPanel","chatTitle","chatSummaryContainer","newChatBtn","noChatToSelectText","search","lineHeight","searchRoot","searchInput","searchIcon","pointerEvents","searchUsers","getAllConvos","getOneConvo","friendId","sendMessage","ConversationContext","convo","setFriendId","recipient","setConvo","ConversationProvider","setRecipient","useConvoContext","Search","setOptions","useDebounce","debouncedSearch","saveOptions","users","searchAndSaveUsers","Autocomplete","onOpen","getOptionSelected","option","getOptionLabel","handleFriendChange","onInputChange","inputValue","noOptionsText","freeSolo","renderInput","InputBase","ref","borderTop","online","sidebar","lastMessage","chip","ConvoContent","unread","setUnread","slice","Chip","ConvoCard","closeDrawer","recipients","person","otherUser","lastMessageDate","updatedAt","overlap","toString","ChatSideBanner","convos","setSearch","newChatUser","setNewChatUser","newInputValue","activeChat","chatContainer","statusText","statusDot","offline","ellipsis","StyledBadge","animation","MessageHeader","inputContainer","MessageInput","otherUserId","otherUsername","displayMessage","inputRef","useRef","current","FormControl","hiddenLabel","bubble","SenderBubble","usernameDate","OtherUserBubble","otherPhoto","Messages","scrollIntoView","senderId","latest","senderPic","imageAlt","senderName","Dashboard","setOtherUser","messageCount","setMessageCount","recipientId","recipientName","recipientPic","updatedMessage","createMessage","receiver","newMessage","conversationId","con","ChatDrawer","setConvos","lg","smDown","mdUp","App","exact","Signup","Contest","ForgotPassword","ResetPassword","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.08104404.chunk.js","sourcesContent":["import { createTheme } from '@material-ui/core';\n\nexport const theme = createTheme({\n  typography: {\n    fontFamily: '\"Spartan\", sans-serif',\n    fontSize: 12,\n    button: {\n      textTransform: 'none',\n      fontWeight: 700,\n    },\n  },\n  palette: {\n    common: { black: '#000', white: '#fff' },\n    primary: { main: '#000' },\n    secondary: { main: '#DCDCDC' },\n  },\n  shape: {\n    borderRadius: 5,\n  },\n});\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    minHeight: '100vh',\n    '& .MuiInput-underline:before': {\n      borderBottom: '1.2px solid rgba(0, 0, 0, 0.2)',\n    },\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  navbar: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    backgroundColor: 'black',\n    color: 'white',\n  },\n  loginContainer: {\n    margin: '5vh 0',\n  },\n  authWrapper: {\n    display: 'flex',\n    alignItems: 'flex-start',\n    justifyContent: 'space-between',\n    flexDirection: 'column',\n    // minHeight: '100vh',\n    paddingTop: 23,\n  },\n  welcome: {\n    fontSize: '3em',\n    paddingBottom: 20,\n    color: '#000000',\n    fontWeight: 900,\n    fontFamily: \"'Open Sans'\",\n  },\n}));\n\nexport default useStyles;\n","import { AuthApiData } from '../../interface/AuthApiData';\nimport { FetchOptions } from '../../interface/FetchOptions';\n\nconst login = async (email: string, password: string): Promise<AuthApiData> => {\n  const fetchOptions: FetchOptions = {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ email, password }),\n    credentials: 'include',\n  };\n  return await fetch(`/api/auth/login`, fetchOptions)\n    .then((res) => res.json())\n    .catch(() => ({\n      error: { message: 'Unable to connect to server. Please try again' },\n    }));\n};\n\n\n\nexport default login;\n","import { makeStyles } from '@material-ui/core/styles';\nimport { visitEachChild } from 'typescript';\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-around',\n  },\n  textField: {\n    margin: 0,\n    border: '0.5 solid rgba(0, 0, 0, .1)',\n  },\n  label: {\n    fontSize: '1em',\n    color: 'rgb(0,0,0,0.7)',\n    paddingLeft: '5px',\n  },\n  inputs: {\n    margin: '.4rem 0',\n    height: '2rem',\n    padding: '5px',\n  },\n  forgot: {\n    paddingRight: 10,\n    color: '#3a8dff',\n  },\n  submit: {\n    margin: theme.spacing(3, 2, 2),\n    padding: 10,\n    width: 160,\n    height: 56,\n    borderRadius: 0,\n    marginTop: 49,\n    fontSize: 16,\n    backgroundColor: '#000',\n    fontWeight: 'bold',\n  },\n  reset: {\n    textDecoration: 'none',\n    color: 'rgb(6,69,173)',\n    \"&:hover\": {\n      textDecoration: 'underline',\n    }\n  },\n}));\n\nexport default useStyles;\n","import { AuthApiData } from '../../interface/AuthApiData';\nimport { FetchOptions } from '../../interface/FetchOptions';\n\nconst loginGoogle = async (tokenId: string): Promise<string> => {\n  const fetchOptions: FetchOptions = {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ tokenId }),\n    credentials: 'include',\n  };\n  return await fetch(`/api/auth/google-login`, fetchOptions)\n    .then((res) => res.json())\n    .catch(() => ({\n      error: { message: 'Unable to connect to server. Please try again' },\n    }));\n};\n\n\n\nexport default loginGoogle;\n","import Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Box from '@material-ui/core/Box';\nimport { Formik, FormikHelpers } from 'formik';\nimport * as Yup from 'yup';\nimport Typography from '@material-ui/core/Typography';\nimport useStyles from './useStyles';\nimport { CircularProgress } from '@material-ui/core';\nimport { GoogleLogin } from 'react-google-login';\nimport loginGoogle from '../../../helpers/APICalls/google';\nimport { Link } from 'react-router-dom';\n\ninterface Props {\n  handleSubmit: (\n    {\n      email,\n      password,\n    }: {\n      email: string;\n      password: string;\n    },\n    {\n      setStatus,\n      setSubmitting,\n    }: FormikHelpers<{\n      email: string;\n      password: string;\n    }>,\n  ) => void;\n  handleDemoSubmit: ({ email, password }: { email: string; password: string }) => void;\n}\n\nexport default function Login({ handleSubmit, handleDemoSubmit }: Props): JSX.Element {\n  const classes = useStyles();\n\n  const responseSuccessGoogle = (response: any) => {\n    loginGoogle(response.tokenObj.id_token);\n    location.reload();\n  };\n\n  const responseErrorGoogle = (response: any) => {\n    if (!response) {\n      throw new Error('Could not connect to server, please try again');\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        email: '',\n        password: '',\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string().required('Email is required').email('Email is not valid'),\n        password: Yup.string()\n          .required('Password is required')\n          .max(100, 'Password is too long')\n          .min(6, 'Password too short'),\n      })}\n      onSubmit={handleSubmit}\n    >\n      {({ handleSubmit, handleChange, values, touched, errors, isSubmitting }) => (\n        <form onSubmit={handleSubmit} className={classes.form} noValidate>\n          <Box mt={3} mb={3}>\n            <Typography className={classes.label}>E-mail</Typography>\n            <TextField\n              id=\"email\"\n              placeholder=\"Enter e-mail address\"\n              fullWidth\n              margin=\"normal\"\n              className={classes.textField}\n              InputProps={{\n                classes: { input: classes.inputs },\n              }}\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              helperText={touched.email ? errors.email : ''}\n              error={touched.email && Boolean(errors.email)}\n              value={values.email}\n              onChange={handleChange}\n            />\n          </Box>\n          <Box mt={3} mb={3}>\n            <Typography className={classes.label}>Password</Typography>\n            <TextField\n              id=\"password\"\n              placeholder=\"Enter password\"\n              fullWidth\n              margin=\"normal\"\n              className={classes.textField}\n              InputProps={{\n                classes: { input: classes.inputs },\n              }}\n              type=\"password\"\n              autoComplete=\"current-password\"\n              helperText={touched.password ? errors.password : ''}\n              error={touched.password && Boolean(errors.password)}\n              value={values.password}\n              onChange={handleChange}\n            />\n          </Box>\n          <Box>\n            <Link className={classes.reset} to=\"/forgot-password\">\n              Forgot Password?\n            </Link>\n          </Box>\n          <Box textAlign=\"center\">\n            <Button type=\"submit\" size=\"large\" variant=\"contained\" color=\"primary\" className={classes.submit}>\n              {isSubmitting ? <CircularProgress style={{ color: 'white' }} /> : 'SIGN IN'}\n            </Button>\n            <Button\n              onClick={() => handleDemoSubmit({ email: 'stanley@gmail.com', password: '123456' })}\n              size=\"large\"\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              {isSubmitting ? <CircularProgress style={{ color: 'white' }} /> : 'DEMO'}\n            </Button>\n            <GoogleLogin\n              clientId=\"957246139636-2mjg8o2ggfn63l16t9n95u3qi840shk9.apps.googleusercontent.com\"\n              buttonText=\"Sign In With Google\"\n              onSuccess={responseSuccessGoogle}\n              onFailure={responseErrorGoogle}\n              cookiePolicy={'single_host_origin'}\n            />\n          </Box>\n        </form>\n      )}\n    </Formik>\n  );\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  authHeader: {\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    display: 'flex',\n    flexWrap: 'wrap',\n    backgroundColor: 'black',\n    padding: '2.5rem',\n    [theme.breakpoints.down('md')]: {\n      justifyContent: 'center',\n      padding: '1.5rem',\n    },\n    flex: 1,\n  },\n  tattooArt: {\n    fontSize: '2em',\n    marginLeft: 20,\n    letterSpacing: '.4em',\n    textTransform: 'uppercase',\n    [theme.breakpoints.down('md')]: {\n      margin: '0 25 0 24',\n      display: 'flex',\n      justifyContent: 'center',\n      textAlign: 'center',\n      width: '100%',\n    },\n    [theme.breakpoints.down('xs')]: {\n      margin: 0,\n    },\n  },\n  linkContainer: {\n    justifyContent: 'space-between',\n    [theme.breakpoints.down('md')]: {\n      justifyContent: 'center',\n      marginLeft: 49,\n    },\n    [theme.breakpoints.down('xs')]: {\n      marginLeft: 0,\n    },\n  },\n  navLink: {\n    '&:hover': {\n      cursor: 'pointer',\n    },\n    padding: 5,\n    textDecoration: 'none',\n  },\n  loginButton: {\n    color: 'white',\n    border: '1px solid white',\n    marginRight: 20,\n    borderRadius: 0,\n    width: '10rem',\n    textTransform: 'uppercase',\n    [theme.breakpoints.down('sm')]: {\n      margin: '20px 51px 0 51px',\n    },\n  },\n  createContestBtn: {\n    borderRadius: 0,\n    border: '1px solid white',\n    color: 'white',\n    width: '10rem',\n    '&:hover': {\n      backgroundColor: 'white',\n      color: 'black',\n    },\n    [theme.breakpoints.down('md')]: {\n      marginRight: 15,\n    },\n  },\n}));\n\nexport default useStyles;\n","import { AuthApiData } from '../../interface/AuthApiData';\nimport { FetchOptions } from '../../interface/FetchOptions';\n\nconst loginWithCookies = async (): Promise<AuthApiData> => {\n  const fetchOptions: FetchOptions = {\n    method: 'GET',\n    credentials: 'include',\n  };\n  return await fetch(`/api/auth/user`, fetchOptions)\n    .then((res) => res.json())\n    .catch(() => ({\n      error: { message: 'Unable to connect to server. Please try again' },\n    }));\n};\n\nexport default loginWithCookies;\n","import { AuthApiData } from '../../interface/AuthApiData';\nimport { FetchOptions } from '../../interface/FetchOptions';\n\nconst logout = async (): Promise<AuthApiData> => {\n  const fetchOptions: FetchOptions = {\n    method: 'GET',\n    credentials: 'include',\n  };\n  return await fetch(`/api/auth/logout`, fetchOptions)\n    .then((res) => res.json())\n    .catch(() => ({\n      error: { message: 'Unable to connect to server. Please try again' },\n    }));\n};\n\nexport default logout;\n","import { useState, useContext, createContext, FunctionComponent, useEffect, useCallback } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { AuthApiData, AuthApiDataSuccess } from '../interface/AuthApiData';\nimport { User } from '../interface/User';\nimport loginWithCookies from '../helpers/APICalls/loginWithCookies';\nimport logoutAPI from '../helpers/APICalls/logout';\n\ninterface IAuthContext {\n  loggedInUser: User | null | undefined;\n  updateLoginContext: (data: AuthApiDataSuccess) => void;\n  logout: () => void;\n}\n\nexport const AuthContext = createContext<IAuthContext>({\n  loggedInUser: undefined,\n  updateLoginContext: () => null,\n  logout: () => null,\n});\n\nexport const AuthProvider: FunctionComponent = ({ children }): JSX.Element => {\n  // default undefined before loading, once loaded provide user or null if logged out\n  const [loggedInUser, setLoggedInUser] = useState<User | null | undefined>();\n  const history = useHistory();\n  const location = useLocation();\n  const path = location.pathname;\n\n  const updateLoginContext = useCallback(\n    (data: AuthApiDataSuccess) => {\n      setLoggedInUser(data.user);\n      history.push('/dashboard');\n    },\n    [history],\n  );\n\n  const logout = useCallback(async () => {\n    // needed to remove token cookie\n    await logoutAPI()\n      .then(() => {\n        history.push('/dashboard');\n        setLoggedInUser(null);\n      })\n      .catch((error) => console.error(error));\n  }, [history]);\n\n  // use our cookies to check if we can login straight away\n  useEffect(() => {\n    const checkLoginWithCookies = async () => {\n      await loginWithCookies().then((data: AuthApiData) => {\n        if (data.success) {\n          updateLoginContext(data.success);\n          history.push('/dashboard');\n        } else {\n          // don't need to provide error feedback as this just means user doesn't have saved cookies or the cookies have not been authenticated on the backend\n          setLoggedInUser(null);\n          if (\n            path.includes('/reset-password') ||\n            path.includes('/login') ||\n            path.includes('/forgot-password') ||\n            path.includes('/signup') ||\n            path.includes('/contest/:id')\n          ) {\n            return;\n          } else {\n            history.push('/dashboard');\n          }\n        }\n      });\n    };\n    checkLoginWithCookies();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [updateLoginContext]);\n\n  return <AuthContext.Provider value={{ loggedInUser, updateLoginContext, logout }}>{children}</AuthContext.Provider>;\n};\n\nexport function useAuth(): IAuthContext {\n  return useContext(AuthContext);\n}\n","import Avatar from '@material-ui/core/Avatar';\nimport { User } from '../../interface/User';\n\ninterface Props {\n  loggedIn?: boolean;\n  user: User;\n}\n\nconst AvatarDisplay = ({ user }: Props): JSX.Element => {\n  return <Avatar alt=\"Profile Image\" src={user.profilePic || `https://robohash.org/${user.email}.png`} />;\n};\n\nexport default AvatarDisplay;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    marginLeft: 20,\n  },\n  account: {\n    '&:hover': {\n      cursor: 'pointer',\n    },\n  },\n  link: {\n    textDecoration: 'none',\n    color: 'black',\n  },\n  menuItem: {\n    display: 'flex',\n    justifyContent: 'center',\n    padding: '15px 70px',\n    '&:hover': {\n      border: '1px solid white',\n      backgroundColor: 'black',\n      color: 'white',\n    },\n  },\n}));\n\nexport default useStyles;\n","import { useState, MouseEvent } from 'react';\nimport Box from '@material-ui/core/Box';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Link } from 'react-router-dom';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { useAuth } from '../../context/useAuthContext';\nimport Typography from '@material-ui/core/Typography';\nimport useStyles from './useStyles';\n\nconst AuthMenu = (): JSX.Element => {\n  const { loggedInUser } = useAuth();\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n  const { logout } = useAuth();\n  const classes = useStyles();\n\n  const handleClick = (event: MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleLogout = () => {\n    handleClose();\n    logout();\n  };\n\n  return (\n    <Box display=\"flex\" alignItems=\"center\" className={classes.container}>\n      <Box display=\"flex\" alignItems=\"center\" onClick={handleClick} className={classes.account}>\n        <Typography color=\"secondary\">Account</Typography>\n        <IconButton aria-label=\"show auth menu\" aria-controls=\"auth-menu\" aria-haspopup=\"true\" color=\"secondary\">\n          <ArrowDropDownIcon />\n        </IconButton>\n      </Box>\n      <Menu\n        id=\"auth-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={open}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        getContentAnchorEl={null}\n      >\n        <Link className={classes.link} to=\"/profile\">\n          <MenuItem className={classes.menuItem}>Profile</MenuItem>\n        </Link>\n        <Link className={classes.link} to={{ pathname: '/artist', state: `${loggedInUser?.id}` }}>\n          <MenuItem className={classes.menuItem}>About</MenuItem>\n        </Link>\n        <Link className={classes.link} to=\"/settings\">\n          <MenuItem className={classes.menuItem}>Settings</MenuItem>\n        </Link>\n        <MenuItem onClick={handleLogout} style={{ marginTop: -7 }} className={classes.menuItem}>\n          Logout\n        </MenuItem>\n      </Menu>\n    </Box>\n  );\n};\n\nexport default AuthMenu;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  typography: {\n    padding: theme.spacing(2),\n    fontSize: 15,\n    fontWeight: 'bold',\n    paddingBottom: '0',\n  },\n  authHeaderText: {\n    marginRight: 10,\n  },\n  poptitle: {\n    margin: '15px',\n    fontWeight: 'bold',\n    fontSize: 25,\n  },\n  time: {\n    marginLeft: 15,\n    marginBottom: 20,\n  },\n  avatar: {\n    height: 45,\n    width: theme.spacing(6),\n    marginTop: 15,\n    marginLeft: 15,\n  },\n  seeAll: {\n    marginLeft: 70,\n    marginTop: 50,\n    fontSize: 15,\n  },\n  popUpBox: {\n    top: '15px !important',\n    height: '80%',\n  },\n  notificationContainer: {\n    '&:hover':{\n      backgroundColor: 'black',\n      color:'#fff'\n    }\n  },\n  link: {\n    textDecoration: \"none\", \n    color:'black'\n  },\n  badge:{\n   \n  }\n}));\n\nexport default useStyles;\n","import { FetchOptions } from '../../interface/FetchOptions';\n\nimport { Notification } from '../../interface/User';\n\ntype existingNotification = Notification;\n\ninterface newNotification {\n  to: string,\n  notification: string\n}\n\nexport const createNotification = async (notification: newNotification): Promise<Notification[]> => {\n  const fetchOptions: FetchOptions = {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    credentials: 'include',\n    body: JSON.stringify(notification),\n  };\n  return await fetch(`/api/notification`, fetchOptions)\n    .then((res) => res.json())\n    .catch((err) => ({\n      error: { message: 'Unable to send notification', err },\n    }));\n};\n\nexport const getNotification = async (): Promise<Notification[]> => {\n  const fetchOptions: FetchOptions = {\n    method: 'GET',\n    headers: { 'Content-Type': 'application/json' },\n    credentials: 'include',\n  };\n  return await fetch(`/api/notification`, fetchOptions)\n    .then((res) => res.json())\n    .catch((err) => ({\n      error: { message: 'Unable to get notifications', err },\n    }));\n};\n\nexport const updateNotification = async (eNotification: existingNotification): Promise<Notification[]> => {\n  eNotification.opened = true;\n  const fetchOptions: FetchOptions = {\n    method: 'PATCH',\n    headers: { 'Content-Type': 'application/json' },\n    credentials: 'include',\n    body: JSON.stringify(eNotification),\n  };\n\n  return await fetch(`/api/notification/update/${eNotification._id}`, fetchOptions)\n    .then((res) => res.json())\n    .catch((err) => ({\n      error: { message: 'Unable to update notifications', err },\n    }));\n};\n\nexport const deleteNotification = async (id: string): Promise<number> => {\n  const fetchOptions: FetchOptions = {\n    method: 'DELETE',\n    headers: { 'Content-Type': 'application/json' },\n    credentials: 'include',\n  };\n\n  return await fetch(`/api/notification/${id}`, fetchOptions)\n  .then(res => res.status)\n  .catch(err => err);\n};\n","import { useState, useEffect, useContext, createContext, FunctionComponent, useCallback } from 'react';\nimport { io, Socket } from 'socket.io-client';\nimport { Notification, Message } from '../interface/User';\n\ninterface ISocketContext {\n  socket: Socket | undefined;\n  initSocket: () => void;\n  socketNotification?: Notification;\n  message?: Message;\n}\n\nexport const SocketContext = createContext<ISocketContext>({\n  socket: undefined,\n  initSocket: () => null,\n  socketNotification: undefined,\n  message: undefined,\n});\n\nexport const SocketProvider: FunctionComponent = ({ children }): JSX.Element => {\n  const [socket, setSocket] = useState<Socket | undefined>(undefined);\n  const [socketNotification, setSocketNotification] = useState<Notification>();\n  const [message, setMessage] = useState<Message>();\n\n  const initSocket = useCallback(() => {\n    console.log('trying to connect');\n    setSocket(\n      io('/', {\n        withCredentials: true,\n      }),\n    );\n  }, []);\n\n  useEffect(() => {\n    socket?.on('getNotification', (notification) => {\n      setSocketNotification(notification);\n    });\n  });\n\n  useEffect(() => {\n    socket?.on('receive-message', (data) => {\n      setMessage(data);\n    });\n  });\n\n  return <SocketContext.Provider value={{ socket, initSocket, message, socketNotification }}>{children}</SocketContext.Provider>;\n};\n\nexport function useSocket(): ISocketContext {\n  return useContext(SocketContext);\n}\n","import { FunctionComponent, createContext, useState, useEffect, useContext } from 'react';\nimport { getNotification } from '../helpers/APICalls/notification';\nimport { Notification } from '../interface/User';\nimport { SocketContext } from './useSocketContext';\n\ninterface NotificationContext {\n  notifications: Notification[];\n  setNotifications: (notification: Notification[]) => void;\n}\n\nexport const NotificationContext = createContext<NotificationContext>({\n  notifications: [],\n  setNotifications: () => undefined,\n});\n\nexport const NotificationProvider: FunctionComponent = ({ children }): JSX.Element => {\n  const [notifications, setNotifications] = useState<Notification[]>([]);\n  const socketNotification = useContext(SocketContext).socketNotification;\n\n  useEffect(() => {\n    async function getAll() {\n      const allNotifications = await getNotification();\n      if (allNotifications) {\n        setNotifications(allNotifications);\n      } else {\n        new Error('Notifications not found');\n      }\n    }\n    getAll();\n  }, []);\n\n  useEffect(() => {\n    if (socketNotification) {\n      const updatedNotification = notifications.length ? [...notifications, socketNotification] : [socketNotification];\n      setNotifications(updatedNotification);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [socketNotification]);\n\n  notifications?.length &&\n    notifications?.sort((a: { createdAt: string | number | Date }, b: { createdAt: string | number | Date }) => {\n      return new Date(b.createdAt).valueOf() - new Date(a.createdAt).valueOf();\n    });\n\n  return (\n    <NotificationContext.Provider value={{ notifications, setNotifications }}>{children}</NotificationContext.Provider>\n  );\n};\n","import { useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport useStyles from './useStyles';\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\nimport Badge from '@material-ui/core/Badge';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport { withStyles } from '@material-ui/core/styles';\nimport { updateNotification } from '../../helpers/APICalls/notification';\n\nimport { NotificationContext } from '../../context/notificationContext';\n\nconst GlobalCss = withStyles({\n  // @global is handled by jss-plugin-global.\n  '@global': {\n    // You should target [class*=\"MuiButton-root\"] instead if you nest themes.\n    '.MuiPopover-paper': {\n      paddingBottom: 40,\n    },\n    '*::-webkit-scrollbar': {\n      width: '0px',\n    },\n    '.badge.MuiSvgIcon-root': {\n      background:'black'\n    },\n    '.MuiBadge-badge.MuiBadge-anchorOriginTopRightRectangle.MuiBadge-colorSecondary ':{\n      fontWeight:'bold',\n      fontSize: '13px',\n      backgroundColor: '#fff',\n    }\n  },\n})(() => null);\n\nconst NotificationPopUp = (): JSX.Element => {\n  const notifications = useContext(NotificationContext).notifications;\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = useState<HTMLButtonElement | null>(null);\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const filterNotification = notifications?.length\n    ? notifications?.filter((notification) => notification.opened === false)\n    : [];\n\n  const handleNotification = (event: React.MouseEvent<HTMLButtonElement>) => {\n    /**\n     *  changing the opened property to true by sending post request\n     *  so that once the notifications navitem is clicked, those notifications would not be counted as new\n     */\n    filterNotification.length &&\n      filterNotification?.map(async (notification) => await updateNotification(notification));\n    setAnchorEl(event.currentTarget);\n  };\n\n  const hoursCalculator = (createdAt: string): string => {\n    const createdDate = new Date(createdAt);\n    const diffTime = Math.abs(createdDate.valueOf() - new Date().valueOf());\n\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n    const diffHours = Math.ceil(diffTime / (1000 * 60 * 60));\n    const diffMinutes = Math.ceil(diffTime / (1000 * 60));\n    const diffSeconds = Math.ceil(diffTime / 1000);\n\n    return diffSeconds <= 1 && diffMinutes <= 1 && diffHours <= 1 && diffDays <= 1\n      ? `1 second ago`\n      : diffSeconds > 1 && diffMinutes <= 1 && diffHours <= 1 && diffDays <= 1\n      ? `${diffSeconds} seconds ago`\n      : diffSeconds >= 60 && diffMinutes <= 2 && diffHours <= 1 && diffDays <= 1\n      ? `1 minute ago`\n      : diffMinutes > 1 && diffHours <= 1 && diffDays <= 1\n      ? `${diffMinutes} minutes ago`\n      : diffHours <= 2 && diffDays <= 1 && diffMinutes >= 60\n      ? `1 hour ago`\n      : diffHours > 1 && diffDays <= 1\n      ? `${diffHours} hours ago`\n      : diffHours >= 24 && diffDays <= 2\n      ? `1 day ago`\n      : `${diffDays} days ago`;\n  };\n\n  return (\n    <>\n      <GlobalCss />\n      <Button aria-describedby={id} variant=\"contained\" color=\"primary\" onClick={handleNotification}>\n      <Typography className={classes.authHeaderText} color=\"secondary\">\n            Notifications\n          </Typography>\n        <Badge badgeContent={notifications?.length && filterNotification.length} className={classes.badge} color='secondary'>\n          <NotificationsNoneIcon style={{ color:'#fff'}}/>\n        </Badge>\n      </Button>\n      <Popover\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center',\n        }}\n        className={classes.popUpBox}\n      >\n        <Grid direction=\"row\" container>\n          <Grid item>\n            <Typography variant=\"h5\" className={classes.poptitle}>\n              Notifications\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Link to={{ pathname: '/notifications' }} style={{ textDecoration: 'none' }}>\n              <Button className={classes.seeAll}>See All</Button>\n            </Link>\n          </Grid>\n        </Grid>\n        {notifications?.length ? (\n          notifications?.map((notification) => (\n            <Link\n              to={notification.contestId ? `/contest/${notification.contestId}` : `/dashboard`}\n              key={notification._id}\n              className={classes.link}\n            >\n              <Grid direction=\"row\" container className={classes.notificationContainer}>\n                <Grid item>\n                  <Avatar alt=\"Profile Image\" src={notification.profilePic} className={classes.avatar}></Avatar>\n                </Grid>\n                <Grid item>\n                  <Typography className={classes.typography} key={notification._id}>\n                    {notification.notification}\n                  </Typography>\n                  <Typography key={notification.notification} className={classes.time}>\n                    {hoursCalculator(notification.createdAt)}\n                  </Typography>\n                </Grid>\n              </Grid>\n            </Link>\n          ))\n        ) : (\n          <Typography align=\"center\">{`You do not have any notification`}</Typography>\n        )}\n      </Popover>\n    </>\n  );\n};\n\nexport default NotificationPopUp;\n","import Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport { Link } from 'react-router-dom';\nimport useStyles from './useStyles';\nimport Typography from '@material-ui/core/Typography';\nimport { useAuth } from '../../context/useAuthContext';\nimport AvatarDisplay from '../AvatarDisplay/AvatarDisplay';\nimport AuthMenu from '../AuthMenu/AuthMenu';\nimport NotificationPopUp from '../NotificationPopUp/NotificationPopUp';\n\ninterface Props {\n  linkTo: string;\n  btnText: string;\n}\n\nconst AuthHeader = ({ linkTo, btnText }: Props): JSX.Element => {\n  const classes = useStyles();\n  const { loggedInUser } = useAuth();\n\n  return (\n    <Box p={1} className={classes.authHeader}>\n      <Link to=\"/dashboard\" className={classes.navLink}>\n        <Typography color=\"secondary\" className={classes.tattooArt}>\n          Tattoo Art\n        </Typography>\n      </Link>\n      {loggedInUser ? (\n        <Box\n          display=\"flex\"\n          justifyContent=\"space-between\"\n          alignItems=\"center\"\n          minWidth=\"55vw\"\n          flexWrap=\"wrap\"\n          className={classes.linkContainer}\n        >\n          <Link to=\"/discovery\" style={{ textDecoration: 'none' }}>\n            <Typography className={classes.navLink} color=\"secondary\" display=\"inline\">\n              Discover\n            </Typography>\n          </Link>\n          <Link to=\"/messages\" style={{ textDecoration: 'none' }}>\n            <Typography className={classes.navLink} color=\"secondary\" display=\"inline\">\n              Messages\n            </Typography>\n          </Link>\n          <Typography className={classes.navLink} color=\"secondary\" display=\"inline\">\n            <NotificationPopUp />\n          </Typography>\n          <Link to={linkTo} style={{ textDecoration: 'none' }}>\n            <Button className={classes.createContestBtn} size=\"large\">\n              Create Contest\n            </Button>\n          </Link>\n          <Box display=\"flex\" alignItems=\"center\">\n            <AvatarDisplay user={loggedInUser} loggedIn={true} />\n            <AuthMenu />\n          </Box>\n        </Box>\n      ) : (\n        <Link to={linkTo} style={{ textDecoration: 'none' }}>\n          <Button className={classes.loginButton} size=\"large\">\n            {btnText}\n          </Button>\n        </Link>\n      )}\n    </Box>\n  );\n};\n\nexport default AuthHeader;\n","import { useState, useContext, createContext, FunctionComponent, SyntheticEvent, useCallback } from 'react';\nimport Snackbar, { SnackbarCloseReason } from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\ninterface ISnackBarContext {\n  updateSnackBarMessage: (message: string) => void;\n}\n\nexport const SnackBarContext = createContext<ISnackBarContext>({\n  updateSnackBarMessage: () => null,\n});\n\nexport const SnackBarProvider: FunctionComponent = ({ children }): JSX.Element => {\n  const [message, setMessage] = useState<string | null>(null);\n  const [open, setOpen] = useState<boolean>(false);\n\n  const updateSnackBarMessage = useCallback((message: string) => {\n    setMessage(message);\n    setOpen(true);\n  }, []);\n\n  const handleClose = useCallback(() => {\n    setOpen(false);\n  }, []);\n\n  const snackbarHandleClose = useCallback((event: SyntheticEvent, reason: SnackbarCloseReason) => {\n    if (reason === 'clickaway') return;\n    setOpen(false);\n  }, []);\n\n  return (\n    <SnackBarContext.Provider value={{ updateSnackBarMessage }}>\n      {children}\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={snackbarHandleClose}\n        message={message}\n        action={\n          <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\n            <CloseIcon fontSize=\"small\" />\n          </IconButton>\n        }\n      />\n    </SnackBarContext.Provider>\n  );\n};\n\nexport function useSnackBar(): ISnackBarContext {\n  return useContext(SnackBarContext);\n}\n","import CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport { FormikHelpers } from 'formik';\nimport Typography from '@material-ui/core/Typography';\nimport useStyles from './useStyles';\nimport login from '../../helpers/APICalls/login';\nimport LoginForm from './LoginForm/LoginForm';\nimport AuthHeader from '../../components/AuthHeader/AuthHeader';\nimport { useAuth } from '../../context/useAuthContext';\nimport { useSnackBar } from '../../context/useSnackbarContext';\n\nexport default function Login(): JSX.Element {\n  const classes = useStyles();\n  const { updateLoginContext } = useAuth();\n  const { updateSnackBarMessage } = useSnackBar();\n\n  const handleSubmit = (\n    { email, password }: { email: string; password: string },\n    { setSubmitting }: FormikHelpers<{ email: string; password: string }>,\n  ) => {\n    login(email, password).then((data) => {\n      if (data.error) {\n        setSubmitting(false);\n        updateSnackBarMessage(data.error.message);\n      } else if (data.success) {\n        updateLoginContext(data.success);\n      } else {\n        // should not get here from backend but this catch is for an unknown issue\n        console.error({ data });\n        setSubmitting(false);\n        updateSnackBarMessage('An unexpected error occurred. Please try again');\n      }\n    });\n  };\n\n  const handleDemoSubmit = ({ email, password }: { email: string; password: string }) => {\n    login(email, password).then((data) => {\n      if (data.error) {\n        updateSnackBarMessage(data.error.message);\n      } else if (data.success) {\n        updateLoginContext(data.success);\n      } else {\n        // should not get here from backend but this catch is for an unknown issue\n        console.error({ data });\n        updateSnackBarMessage('An unexpected error occurred. Please try again');\n      }\n    });\n  };\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={12}>\n        <AuthHeader linkTo=\"/signup\" btnText=\"sign up\" />\n      </Grid>\n      <Grid item xs={12} sm={8} md={7} elevation={6} component={Paper} square className={classes.loginContainer}>\n        <Box className={classes.authWrapper}>\n          <Box width=\"100%\" maxWidth={450} p={3} alignSelf=\"center\">\n            <Grid container>\n              <Grid item xs>\n                <Typography align=\"center\" className={classes.welcome} component=\"h1\" variant=\"h5\">\n                  sign in\n                </Typography>\n              </Grid>\n            </Grid>\n            <LoginForm handleSubmit={handleSubmit} handleDemoSubmit={handleDemoSubmit} />\n          </Box>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  paperContainer: {\n    height: '65vh',\n    display: 'flex',\n    flexDirection: 'column',\n    flexWrap: 'nowrap',\n    alignItems: 'center',\n  },\n  previewPic: {\n    width: 150,\n    height: 150,\n    margin: '20px 20px 0',\n  },\n  uploadBox: {\n    display: 'flex',\n    height: '100%',\n    width: '100%',\n    flexDirection: 'column',\n    alignItems: 'center',\n    margin: '40px 0',\n  },\n  header: {\n    margin: '3rem 0 2rem',\n    textAlign: 'center',\n    [theme.breakpoints.down('md')]: {\n      margin: '1rem 0',\n    },\n  },\n  icon: {\n    fontSize: '10rem',\n  },\n  fileInputLabel: {\n    '&:hover': {\n      cursor: 'pointer',\n    },\n    height: '100%',\n    width: '100%',\n    marginBottom: '5rem',\n  },\n\n  fileInput: {\n    display: 'none',\n  },\n  chooseFile: {\n    marginTop: '.5rem',\n    marginBottom: '2rem',\n    textAlign: 'center',\n  },\n  mutedText: {\n    color: 'rgba(0, 0, 0, .5)',\n  },\n  uploadBtn: {\n    backgroundColor: 'white',\n    border: '2px solid black',\n    color: 'black',\n    textTransform: 'uppercase',\n    width: '15rem',\n    borderRadius: 0,\n    padding: '25px 0',\n    '&:hover': {\n      backgroundColor: 'black',\n      color: 'white',\n    },\n  },\n}));\n\nexport default useStyles;\n","import { FetchOptions } from '../../interface/FetchOptions';\nimport { Submission } from '../../interface/User';\nimport { submissionByArtist } from '../../interface/User';\n\nexport const uploadSubmissionPic = async (file: FormData): Promise<string> => {\n  const fetchOptions: FetchOptions = {\n    method: 'POST',\n    credentials: 'include',\n    body: file,\n  };\n  return await fetch(`/api/upload/submission`, fetchOptions)\n    .then((res) => res.json())\n    .catch(() => ({\n      error: { message: 'Unable to connect to server. Please try again' },\n    }));\n};\n\nexport const createSubmission = async (images: string[], contestId: string): Promise<Submission> => {\n  const fetchOptions: FetchOptions = {\n    method: 'POST',\n    credentials: 'include',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(images),\n  };\n  return await fetch(`/api/submission/${contestId}`, fetchOptions)\n    .then((res) => res.json())\n    .catch(() => ({\n      error: { message: 'Unable to connect to server. Please try again' },\n    }));\n};\n\nexport const getContestSubmissions = async (contestId: string): Promise<Submission[]> => {\n  const fetchData: FetchOptions = {\n    method: 'GET',\n    headers: { 'Content-Type': 'application/json' },\n    credentials: 'include',\n  };\n\n  return await fetch(`/api/submission/${contestId}`, fetchData)\n    .then((data) => data.json())\n    .catch((err) => ({ error: { message: 'Could not find Contest.' } }));\n};\n\nexport const getUserSubmissions = async (): Promise<Submission[]> => {\n  const fetchData: FetchOptions = {\n    method: 'GET',\n    headers: { 'Content-Type': 'application/json' },\n    credentials: 'include',\n  };\n\n  return await fetch(`/api/submission`, fetchData)\n    .then((data) => data.json())\n    .catch((err) => ({ error: { message: 'Could not find Contest.' } }));\n};\n\nexport const getartistSubmission = async (artistId: string): Promise<submissionByArtist[]> => {\n  const fetchData: FetchOptions = {\n    method: 'GET',\n    headers: { 'Content-Type': 'application/json' },\n    credentials: 'include',\n  };\n\n  return await fetch(`/api/submission/artist/${artistId}`, fetchData)\n    .then((data) => data.json())\n    .catch((err) => ({ error: { message: 'Could not get submission.' } }));\n};\n","import { FetchOptions } from '../../interface/FetchOptions';\nimport { AuthApiData } from '../../interface/AuthApiData';\nimport { Contest, Winner } from '../../interface/User';\nimport { NewContest } from '../../interface/Contest';\nimport axios from 'axios';\n\nexport const uploadContestPic = async (file: FormData): Promise<string> => {\n  const fetchOptions: FetchOptions = {\n    method: 'POST',\n    credentials: 'include',\n    body: file,\n  };\n  return await fetch(`/api/upload/contest`, fetchOptions)\n    .then((res) => res.json())\n    .catch(() => ({\n      error: { message: 'Unable to connect to server. Please try again' },\n    }));\n};\n\nexport const getAllContests = async (date?: string, howMany = 10, page = 0): Promise<AuthApiData> => {\n  const fetchData: FetchOptions = {\n    method: 'GET',\n    headers: { 'Content-Type': 'application/json' },\n    credentials: 'include',\n  };\n\n  return await fetch(`/api/contest/?deadlineDate=${date}&howMany=${howMany}&page=${page}`, fetchData)\n    .then((data) => data.json())\n    .catch((err) => ({ error: { message: 'Cannot connect to server' } }));\n};\n\nexport const getNumContests = async (): Promise<number> => {\n  const fetchData: FetchOptions = {\n    method: 'GET',\n    headers: { 'Content-Type': 'application/json' },\n    credentials: 'include',\n  };\n\n  return await fetch(`/api/contest/num`, fetchData)\n    .then((data) => data.json())\n    .catch((err) => ({ error: { message: 'Cannot connect to server' } }));\n};\n\nexport const getContestByUser = async (): Promise<AuthApiData> => {\n  const fetchData: FetchOptions = {\n    method: 'GET',\n    headers: { 'Content-Type': 'application/json' },\n    credentials: 'include',\n  };\n\n  return await fetch('/api/users/contests', fetchData)\n    .then((data) => data.json())\n    .catch((err) => ({ error: { message: 'Could not find User Contests' } }));\n};\n\nexport const getContestById = async (id: string): Promise<Contest> => {\n  const fetchData: FetchOptions = {\n    method: 'GET',\n    headers: { 'Content-Type': 'application/json' },\n    credentials: 'include',\n  };\n\n  return await fetch(`/api/contest/${id}`, fetchData)\n    .then((data) => data.json())\n    .catch((err) => ({ error: { message: 'Could not find Contest.' } }));\n};\n\nexport const addContest = async (contest: NewContest): Promise<AuthApiData> => {\n  return await axios\n    .post('/api/contest', contest)\n    .then((res) => res.data)\n    .catch(() => ({ error: { message: 'Cannot create contest.' } }));\n};\n\nexport const chooseWinner = async (winningPic: string, submissionId: string): Promise<Winner> => {\n  const fetchData: FetchOptions = {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    credentials: 'include',\n    body: JSON.stringify({ winningPic }),\n  };\n\n  return await fetch(`/api/contest/${submissionId}`, fetchData)\n    .then((data) => data.json())\n    .catch((err) => ({ error: { message: 'Could not complete Contest.' } }));\n};\n","import { useState, ChangeEvent } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport AuthHeader from '../../components/AuthHeader/AuthHeader';\nimport useStyles from './useStyles';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport { uploadSubmissionPic, createSubmission } from '../../helpers/APICalls/submission';\nimport { getContestById } from '../../helpers/APICalls/contest';\nimport { createNotification } from '../../helpers/APICalls/notification';\nimport { useSnackBar } from '../../context/useSnackbarContext';\n\nimport { useSocket } from '../../context/useSocketContext';\nimport { useAuth } from '../../context/useAuthContext';\n\ninterface Params {\n  id: string;\n}\n\nexport default function SubmitDesign(): JSX.Element {\n  const { loggedInUser } = useAuth();\n  const { socket } = useSocket();\n\n  const [allPics, setAllPics] = useState<string[]>([]);\n  const [loading, setLoading] = useState<boolean>(false);\n  const classes = useStyles();\n  const params = useParams<Params>();\n  const { updateSnackBarMessage } = useSnackBar();\n  const history = useHistory();\n\n  const submitNewPic = async (e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files) {\n      setLoading(true);\n      try {\n        const formData = new FormData();\n        if (!formData) {\n          setLoading(false);\n        }\n        for (let i = 0; i < e.target.files.length; i++) {\n          formData.append('image', e.target.files[i], e.target.files[i].name);\n        }\n        const newPic = await uploadSubmissionPic(formData);\n        setAllPics([newPic, ...allPics]);\n        setLoading(false);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  };\n\n  const submitAllPics = async () => {\n    try {\n      const submission = await createSubmission(allPics, params.id);\n      if (submission) {\n        updateSnackBarMessage(`Successfully submitted design${allPics.length > 1 ? 's' : ''}`);\n        //get the contest creator's details\n        const toUser = await getContestById(params.id);\n        //create notification\n        const notificationBody = {\n          to: toUser.userId,\n          notification: `${loggedInUser?.username} submitted in your contest`,\n          contestId: params.id,\n        };\n        const notification = await createNotification(notificationBody);\n        //send notification using socket\n        socket?.emit('sendNotification', notification);\n        history.push(`/contest/${params.id}`);\n      }\n    } catch (err: any) {\n      updateSnackBarMessage(err.message);\n    }\n  };\n\n  return (\n    <>\n      <AuthHeader linkTo=\"/create-contest\" btnText=\"create contest\" />\n      <CssBaseline />\n      <Grid container alignItems=\"center\" justifyContent=\"center\">\n        <Grid container xs={6} className={classes.paperContainer}>\n          <Box>\n            {loading ? (\n              <CircularProgress />\n            ) : (\n              allPics.map((pic) => <img key={pic} src={pic} alt={`${pic}tattoo`} className={classes.previewPic} />)\n            )}\n          </Box>\n          <label htmlFor=\"file\" className={classes.fileInputLabel}>\n            <input\n              type=\"file\"\n              accept=\"image/*\"\n              id=\"file\"\n              name=\"image\"\n              multiple={false}\n              onChange={submitNewPic}\n              className={classes.fileInput}\n            />\n            <Paper elevation={3} className={classes.uploadBox}>\n              <Typography variant=\"h3\" className={classes.header}>\n                Submit design\n              </Typography>\n              <CloudUploadIcon fontSize=\"large\" className={classes.icon} />\n              <Typography variant=\"h5\" className={classes.chooseFile}>\n                Click to choose a file\n              </Typography>\n              <Typography className={classes.mutedText}>High resolution images</Typography>\n              <Typography className={classes.mutedText}>PNG, JPG, GIF</Typography>\n            </Paper>\n          </label>\n          <Button disabled={loading ? true : false} className={classes.uploadBtn} onClick={submitAllPics}>\n            {loading ? <CircularProgress /> : 'Submit'}\n          </Button>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    minHeight: '100vh',\n    '& .MuiInput-underline:before': {\n      borderBottom: '1.2px solid rgba(0, 0, 0, 0.2)',\n    },\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  authWrapper: {\n    display: 'flex',\n    alignItems: 'flex-start',\n    justifyContent: 'space-between',\n    flexDirection: 'column',\n    paddingTop: 23,\n  },\n  loginContainer: {\n    margin: '5vh 0',\n  },\n  welcome: {\n    fontSize: '3em',\n    paddingBottom: 20,\n    color: '#000000',\n    fontWeight: 900,\n    fontFamily: \"'Open Sans'\",\n  },\n}));\n\nexport default useStyles;\n","import { AuthApiData } from '../../interface/AuthApiData';\nimport { FetchOptions } from '../../interface/FetchOptions';\n\nconst register = async (username: string, email: string, password: string): Promise<AuthApiData> => {\n  const fetchOptions: FetchOptions = {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ username, email, password }),\n    credentials: 'include',\n  };\n  return await fetch(`/api/auth/register`, fetchOptions)\n    .then((res) => res.json())\n    .catch(() => ({\n      error: { message: 'Unable to connect to server. Please try again' },\n    }));\n};\n\nexport default register;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-around',\n  },\n  textField: {\n    margin: 0,\n    border: '0.5 solid rgba(0, 0, 0, .1)',\n  },\n  label: {\n    fontSize: '1em',\n    color: 'rgb(0,0,0,0.7)',\n    paddingLeft: '5px',\n  },\n  inputs: {\n    margin: '.4rem 0',\n    height: '2rem',\n    padding: '5px',\n    borderRadius: 0,\n  },\n  forgot: {\n    paddingRight: 10,\n    color: '#3a8dff',\n  },\n  submit: {\n    margin: theme.spacing(3, 2, 2),\n    padding: 10,\n    width: 160,\n    height: 56,\n    marginTop: 49,\n    fontSize: 16,\n    backgroundColor: '#000',\n    fontWeight: 'bold',\n    borderRadius: 0,\n    color: 'white',\n  },\n}));\n\nexport default useStyles;\n","import Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Box from '@material-ui/core/Box';\nimport { Formik, FormikHelpers } from 'formik';\nimport * as Yup from 'yup';\nimport Typography from '@material-ui/core/Typography';\nimport useStyles from './useStyles';\nimport { CircularProgress } from '@material-ui/core';\nimport { GoogleLogin } from 'react-google-login';\n\ninterface Props {\n  handleSubmit: (\n    {\n      username,\n      email,\n      password,\n    }: {\n      email: string;\n      password: string;\n      username: string;\n    },\n    {\n      setStatus,\n      setSubmitting,\n    }: FormikHelpers<{\n      email: string;\n      password: string;\n      username: string;\n    }>,\n  ) => void;\n\n  handleDemoSubmit: ({ username, email, password }: { email: string; password: string; username: string }) => void;\n}\n\nconst SignUpForm = ({ handleSubmit, handleDemoSubmit }: Props): JSX.Element => {\n  const classes = useStyles();\n\n  return (\n    <Formik\n      initialValues={{\n        email: '',\n        password: '',\n        username: '',\n      }}\n      validationSchema={Yup.object().shape({\n        username: Yup.string().required('Username is required').max(40, 'Username is too long'),\n        email: Yup.string().required('Email is required').email('Email is not valid'),\n        password: Yup.string()\n          .required('Password is required')\n          .max(100, 'Password is too long')\n          .min(6, 'Password too short'),\n      })}\n      onSubmit={handleSubmit}\n    >\n      {({ handleSubmit, handleChange, values, touched, errors, isSubmitting }) => (\n        <form onSubmit={handleSubmit} className={classes.form} noValidate>\n          <Box mt={3} mb={3}>\n            <Typography className={classes.label}>Username</Typography>\n            <TextField\n              id=\"username\"\n              fullWidth\n              placeholder=\"Enter your name\"\n              margin=\"normal\"\n              InputProps={{\n                classes: { input: classes.inputs },\n              }}\n              name=\"username\"\n              autoComplete=\"username\"\n              className={classes.textField}\n              autoFocus\n              helperText={touched.username ? errors.username : ''}\n              error={touched.username && Boolean(errors.username)}\n              value={values.username}\n              onChange={handleChange}\n            />\n          </Box>\n          <Box mt={3} mb={3}>\n            <Typography className={classes.label}>E-mail</Typography>\n            <TextField\n              id=\"email\"\n              placeholder=\"Enter e-mail address\"\n              fullWidth\n              margin=\"normal\"\n              InputProps={{\n                classes: { input: classes.inputs },\n              }}\n              className={classes.textField}\n              name=\"email\"\n              autoComplete=\"email\"\n              helperText={touched.email ? errors.email : ''}\n              error={touched.email && Boolean(errors.email)}\n              value={values.email}\n              onChange={handleChange}\n            />\n          </Box>\n          <Box mt={3} mb={3}>\n            <Typography className={classes.label}>Password</Typography>\n            <TextField\n              id=\"password\"\n              placeholder=\"Enter password\"\n              fullWidth\n              margin=\"normal\"\n              InputProps={{\n                classes: { input: classes.inputs },\n              }}\n              type=\"password\"\n              className={classes.textField}\n              autoComplete=\"current-password\"\n              helperText={touched.password ? errors.password : ''}\n              error={touched.password && Boolean(errors.password)}\n              value={values.password}\n              onChange={handleChange}\n            />\n          </Box>\n          <Box textAlign=\"center\">\n            <Button type=\"submit\" size=\"large\" variant=\"contained\" color=\"primary\" className={classes.submit}>\n              {isSubmitting ? <CircularProgress style={{ color: 'white' }} /> : 'SIGN UP'}\n            </Button>\n            <Button\n              onClick={() =>\n                handleDemoSubmit({ email: 'stanley@gmail.com', username: 'stanleythemanly', password: '123456' })\n              }\n              size=\"large\"\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              {isSubmitting ? <CircularProgress style={{ color: 'white' }} /> : 'DEMO'}\n            </Button>\n          </Box>\n        </form>\n      )}\n    </Formik>\n  );\n};\n\nexport default SignUpForm;\n","import CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport { FormikHelpers } from 'formik';\nimport Typography from '@material-ui/core/Typography';\nimport useStyles from './useStyles';\nimport register from '../../helpers/APICalls/register';\nimport login from '../../helpers/APICalls/login';\nimport SignUpForm from './SignUpForm/SignUpForm';\nimport AuthHeader from '../../components/AuthHeader/AuthHeader';\nimport { useAuth } from '../../context/useAuthContext';\nimport { useSnackBar } from '../../context/useSnackbarContext';\n\nexport default function Register(): JSX.Element {\n  const classes = useStyles();\n  const { updateLoginContext } = useAuth();\n  const { updateSnackBarMessage } = useSnackBar();\n\n  const handleSubmit = (\n    { username, email, password }: { email: string; password: string; username: string },\n    { setSubmitting }: FormikHelpers<{ email: string; password: string; username: string }>,\n  ) => {\n    register(username, email, password).then((data) => {\n      if (data.error) {\n        console.error({ error: data.error.message });\n        setSubmitting(false);\n        updateSnackBarMessage(data.error.message);\n      } else if (data.success) {\n        updateLoginContext(data.success);\n      } else {\n        // should not get here from backend but this catch is for an unknown issue\n        console.error({ data });\n\n        setSubmitting(false);\n        updateSnackBarMessage('An unexpected error occurred. Please try again');\n      }\n    });\n  };\n\n  const handleDemoSubmit = ({ email, password }: { email: string; password: string }) => {\n    login(email, password).then((data) => {\n      if (data.error) {\n        updateSnackBarMessage(data.error.message);\n      } else if (data.success) {\n        updateLoginContext(data.success);\n      } else {\n        // should not get here from backend but this catch is for an unknown issue\n        console.error({ data });\n        updateSnackBarMessage('An unexpected error occurred. Please try again');\n      }\n    });\n  };\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={12}>\n        <AuthHeader linkTo=\"/login\" btnText=\"SIGN IN\" />\n      </Grid>\n      <Grid item xs={12} sm={7} elevation={6} component={Paper} square className={classes.loginContainer}>\n        <Box className={classes.authWrapper}>\n          <Box width=\"100%\" maxWidth={450} p={3} alignSelf=\"center\">\n            <Grid container>\n              <Grid item xs>\n                <Typography align=\"center\" className={classes.welcome} component=\"h1\" variant=\"h5\">\n                  Sign up\n                </Typography>\n              </Grid>\n            </Grid>\n            <SignUpForm handleSubmit={handleSubmit} handleDemoSubmit={handleDemoSubmit} />\n          </Box>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  grid: {\n    width: '100%',\n    height: '100%',\n  },\n\n  avatar: {\n    height: '125px',\n    width: theme.spacing(17),\n    marginBottom: '16px',\n    marginTop: '64px',\n  },\n\n  user: {\n    fontSize: 24,\n    textTransform: 'capitalize',\n  },\n\n  button: {\n    color: '#000000',\n    margin: '32px',\n    border: '1px solid #DCDCDC',\n    width: '140px',\n    height: '50px',\n    borderRadius: 0,\n    '&:hover': {\n      backgroundColor: 'black',\n      color: 'white',\n    },\n  },\n\n  fileInputLabel: {\n    padding: '12px 15px',\n  },\n\n  fileInput: {\n    display: 'none',\n  },\n  tab: {\n    textTransform: 'uppercase',\n  },\n  container: {\n    width: '75%',\n    marginTop: '32px',\n  },\n  buttonBox: {\n    [theme.breakpoints.down('xs')]: {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n    },\n  },\n  toolbar: {\n    border: 0,\n  },\n\n  tabs: {\n    color: '#000000',\n    textColorPrimary: '#000000',\n    width: '100%',\n    fontWeight: 'bold',\n  },\n}));\n\nexport default useStyles;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  wrapper: {\n    padding: 40,\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  tattooArt: {\n    padding: 10,\n    textTransform: 'uppercase',\n    fontSize: '1rem',\n    fontWeight: 900,\n    alignSelf: 'center',\n    letterSpacing: 8,\n  },\n}));\n\nexport default useStyles;\n","import { FunctionComponent, createContext, useState, useEffect, useContext } from 'react';\nimport { useAuth } from './useAuthContext';\n\ninterface Tour {\n  open: boolean;\n  setOpen: (ok: boolean) => void;\n}\n\nexport const TourContext = createContext<Tour>({\n  open: false,\n  setOpen: (ok: boolean) => undefined,\n});\n\nexport const TourProvider: FunctionComponent = ({ children }): JSX.Element => {\n  const [open, setOpen] = useState<boolean>(false);\n  const { loggedInUser } = useAuth();\n\n  useEffect(() => {\n    if (loggedInUser?.username === 'stanleythemanly') {\n      setOpen(true);\n    }\n  }, [loggedInUser]);\n\n  return <TourContext.Provider value={{ open, setOpen }}>{children}</TourContext.Provider>;\n};\n\nexport function useTourContext(): Tour {\n  return useContext(TourContext);\n}\n","import useStyles from './useStyles';\nimport Card from '@material-ui/core/Card';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Tour from 'reactour';\nimport { useTourContext } from '../../context/tourContext';\n\ninterface Props {\n  steps: {\n    selector: string;\n    content: { words: string; theme: string };\n    style?: Record<string, unknown>;\n    updateDelay?: number;\n    nextStep?: () => void;\n    scrollDuration?: number;\n  }[];\n  dontOpen?: boolean;\n}\n\nconst TourContent = ({ steps, dontOpen }: Props): JSX.Element => {\n  const classes = useStyles();\n  const { open, setOpen } = useTourContext();\n\n  const tourContent = (words: string, theme: string) => {\n    return (\n      <Box display=\"flex\" flexDirection=\"column\" padding=\"10px 20px\">\n        <Typography color={theme === 'primary' ? 'primary' : 'secondary'} className={classes.tattooArt}>\n          tattoo art\n        </Typography>\n        <Card className={classes.wrapper} style={{ backgroundColor: theme === 'primary' ? 'black' : 'white' }}>\n          <Typography color={theme === 'primary' ? 'secondary' : 'primary'}>{words}</Typography>\n        </Card>\n      </Box>\n    );\n  };\n\n  const stepsWithContent = steps.map((step) => ({\n    ...step,\n    content: tourContent(step.content.words, step.content.theme),\n  }));\n\n  return (\n    <Tour\n      steps={stepsWithContent}\n      showNumber={false}\n      isOpen={dontOpen ? false : open}\n      onRequestClose={() => setOpen(false)}\n    />\n  );\n};\n\nexport default TourContent;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  list: {\n    overflow: 'auto',\n    height: '40rem',\n  },\n  avatar: {\n    margin: '32px',\n    height: theme.spacing(40),\n    width: theme.spacing(40),\n    [theme.breakpoints.down('xs')]: {\n      margin: 0,\n      width: '100%',\n      height: 'auto',\n    },\n  },\n  grid: {\n    marginLeft: '32px',\n    [theme.breakpoints.down('xs')]: {\n      marginLeft: 0,\n    },\n    justifyContent: 'flex-start',\n    flexDirection: 'column',\n  },\n  typography: {\n    fontWeight: 'bold',\n    fontSize: '22px',\n  },\n  contestInfo: {\n    [theme.breakpoints.down('xs')]: {\n      display: 'flex',\n      justifyContent: 'center',\n    },\n  },\n  container: {\n    height: 'auto',\n    marginTop: '32px',\n    color: '#3A8DFF',\n  },\n  button: {\n    fontWeight: 'bold',\n    backgroundColor: 'black',\n    color: 'white',\n    padding: '8px 16px',\n    marginLeft: '-20px',\n    [theme.breakpoints.down('sm')]: {\n      marginLeft: 0,\n    },\n  },\n  contestContainer: {\n    [theme.breakpoints.down('sm')]: {\n      justifyContent: 'center',\n      flexDirection: 'column',\n    },\n  },\n  noneAvailable: {\n    display: 'flex',\n    justifyContent: 'center',\n    padding: 20,\n  },\n}));\n\nexport default useStyles;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    height: 'auto',\n    marginTop: '32px',\n    color: '#3A8DFF',\n    [theme.breakpoints.down('sm')]: {\n      display: 'flex',\n      justifyContent: 'center',\n    },\n  },\n  typography: {\n    fontWeight: 'bold',\n    fontSize: '22px',\n    textTransform: 'capitalize',\n    [theme.breakpoints.down('sm')]: {\n      display: 'flex',\n      justifyContent: 'center',\n    },\n  },\n  contestInfo: {\n    [theme.breakpoints.down('sm')]: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      width: '100%',\n      alignSelf: 'center',\n    },\n  },\n  description: {\n    [theme.breakpoints.down('sm')]: {\n      display: 'flex',\n      justifyContent: 'center',\n    },\n  },\n  button: {\n    fontWeight: 'bold',\n    backgroundColor: 'black',\n    color: 'white',\n    border: '1px solid #000000',\n    padding: '8px 16px',\n    borderRadius: 0,\n    marginLeft: '-20px',\n    '&:hover': {\n      backgroundColor: 'white',\n      color: 'black',\n    },\n    [theme.breakpoints.down('sm')]: {\n      marginLeft: 0,\n    },\n  },\n}));\n\nexport default useStyles;\n","import { Link } from 'react-router-dom';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport useStyles from './useStyles';\nimport { Contest } from '../../interface/User';\n\ninterface Props {\n  contest: Contest | null;\n}\n\nexport default function ContestListContent({ contest }: Props): JSX.Element {\n  const classes = useStyles();\n\n  return contest ? (\n    <ListItemText\n      className={classes.contestInfo}\n      primary={\n        <>\n          <Typography className={classes.typography}>{contest.title}</Typography>\n        </>\n      }\n      secondary={\n        <>\n          <Typography classes={{ root: classes.description }}>{contest.description}</Typography>\n          <Container className={classes.container}>\n            <Button component={Link} to={`/contest/${contest._id}`} className={classes.button}>\n              {contest.prizeAmount}\n            </Button>\n          </Container>\n        </>\n      }\n    />\n  ) : (\n    <div></div>\n  );\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  listItem: {\n    [theme.breakpoints.down('sm')]: {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n    },\n  },\n  text: {\n    [theme.breakpoints.down('sm')]: {\n      textAlign: 'center',\n    },\n  },\n  typography: {\n    fontWeight: 'bold',\n    fontSize: '22px',\n    textTransform: 'capitalize',\n  },\n}));\n\nexport default useStyles;\n","import ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport useStyles from './useStyles';\nimport { Winner } from '../../interface/User';\n\ninterface Props {\n  winner: Winner | null;\n}\n\nexport default function WinnerListContent({ winner }: Props): JSX.Element {\n  const classes = useStyles();\n\n  return winner ? (\n    <ListItemText\n      className={classes.listItem}\n      primary={\n        <Typography classes={{ root: classes.text }} className={classes.typography}>\n          {winner.title}\n        </Typography>\n      }\n      secondary={<Typography classes={{ root: classes.text }}>{winner.description}</Typography>}\n    />\n  ) : (\n    <div></div>\n  );\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    display: 'flex',\n    flexDirection: 'column',\n    height: 'min-content',\n    overflowY: 'scroll',\n    '&::-webkit-scrollbar': {\n      display: 'none',\n    },\n    maxHeight: '80%',\n    width: '70%',\n    [theme.breakpoints.down('sm')]: { width: '85%' },\n    padding: 15,\n    borderRadius: 0,\n  },\n  close: {\n    fontSize: '2em',\n    opacity: 0.5,\n    fontWeight: 700,\n    padding: '10px 10px 0 0',\n    margin: 'auto 0',\n    '&:hover': {\n      cursor: 'pointer',\n    },\n  },\n  artistLink: { display: 'flex', alignItems: 'center', padding: 10, textDecoration: 'none', color: 'black' },\n  artistName: {\n    textTransform: 'capitalize',\n    marginLeft: 20,\n    fontWeight: 700,\n    fontSize: '2em',\n  },\n  image: { margin: '15px auto', width: 'inherit', height: 'auto' },\n  modal: { display: 'flex', justifyContent: 'center', alignItems: 'center' },\n}));\n\nexport default useStyles;\n","import { useState } from 'react';\nimport Modal from '@material-ui/core/Modal';\nimport Box from '@material-ui/core/Box';\nimport Paper from '@material-ui/core/Paper';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport useStyles from './useStyles';\nimport { chooseWinner } from '../../helpers/APICalls/contest';\nimport { useSnackBar } from '../../context/useSnackbarContext';\nimport { useHistory, Link } from 'react-router-dom';\n\ninterface Props {\n  artistPic?: string;\n  artistName?: string;\n  artistId?: string | null;\n  image: string;\n  submissionId?: string;\n  children: JSX.Element;\n}\n\nconst ImageModal = ({ artistPic, artistName, image, submissionId, children, artistId }: Props): JSX.Element => {\n  const classes = useStyles();\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  const { updateSnackBarMessage } = useSnackBar();\n  const history = useHistory();\n\n  const handleClose = () => {\n    setIsOpen(false);\n  };\n\n  const handleOpen = () => {\n    setIsOpen(true);\n  };\n\n  const handleWinnerChoice = () => {\n    if (image && submissionId) {\n      chooseWinner(image, submissionId)\n        .then((res) => {\n          if (res.error) {\n            updateSnackBarMessage('Contest deadline has not been met yet');\n          } else {\n            updateSnackBarMessage('Congratulations. Your contest is now closed');\n            history.push('/profile');\n          }\n        })\n        .catch((err) => {\n          updateSnackBarMessage(err.message);\n        });\n    }\n  };\n\n  return (\n    <div>\n      <div onClick={handleOpen}>{children}</div>\n      <Modal open={isOpen} onClose={handleClose} className={classes.modal}>\n        <Paper className={classes.body}>\n          <Box display=\"flex\" justifyContent=\"space-between\" alignContent=\"center\">\n            <Box display=\"flex\" alignItems=\"center\" padding={1}>\n              {artistId ? (\n                <Link to={{ pathname: '/artist', state: artistId }} className={classes.artistLink}>\n                  <Avatar src={artistPic} />\n                  <Typography className={classes.artistName}>{artistName}</Typography>\n                </Link>\n              ) : artistPic ? (\n                <>\n                  <Avatar src={artistPic} />\n                  <Typography className={classes.artistName}>{artistName}</Typography>\n                </>\n              ) : (\n                <Typography className={classes.artistName}>{artistName}</Typography>\n              )}\n              {submissionId ? <Button onClick={handleWinnerChoice}>This is a winner!</Button> : null}\n            </Box>\n            <Box>\n              <Typography className={classes.close} onClick={handleClose}>\n                X\n              </Typography>\n            </Box>\n          </Box>\n          <img src={image} alt=\"chosen design\" className={classes.image} />\n        </Paper>\n      </Modal>\n    </div>\n  );\n};\n\nexport default ImageModal;\n","export default __webpack_public_path__ + \"static/media/lionTattoo.65e55871.png\";","import Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Typography from '@material-ui/core/Typography';\nimport useStyles from './useStyles';\nimport { Contest, Winner } from '../../interface/User';\nimport ContestListContent from '../ContestListContent/ContestListContent';\nimport WinnerListContent from '../WinnerListContent/WinnerListContent';\nimport ImageModal from '../../components/ImageModal/ImageModal';\nimport LionTattoo from '../../Images/lionTattoo.png';\n\ninterface Props {\n  userContests: Contest[] | Winner[];\n}\n\nexport default function ContestList({ userContests }: Props): JSX.Element {\n  const classes = useStyles();\n\n  return (\n    <>\n      {/* Write ternary operator checking to see if any data has been recieved, otherwise return default message */}\n      {userContests.length > 0 ? (\n        <List className={classes.list}>\n          {/* map through given data and alter the return inside of the map */}\n          {userContests.map((contest: Contest | Winner) => (\n            <ListItem key={contest._id}>\n              <Grid container alignItems=\"center\" className={classes.contestContainer}>\n                <Grid item>\n                  <ImageModal\n                    image={\n                      'winningPic' in contest\n                        ? contest.winningPic\n                        : 'images' in contest && contest.images[0]\n                        ? contest.images[0]\n                        : LionTattoo\n                    }\n                    artistName={'winningArtist' in contest ? contest.winningArtist.username : ''}\n                    artistPic={'winningArtist' in contest ? contest.winningArtist.profilePic : ''}\n                    artistId={'winningArtist' in contest ? contest.winningArtist._id : null}\n                  >\n                    <img\n                      className={classes.avatar}\n                      alt=\"Test Contest Image\"\n                      src={\n                        'winningPic' in contest\n                          ? contest.winningPic\n                          : 'images' in contest && contest.images[0]\n                          ? contest.images[0]\n                          : LionTattoo\n                      }\n                    />\n                  </ImageModal>\n                </Grid>\n                <Grid item>\n                  {'images' in contest ? (\n                    <ContestListContent contest={contest} />\n                  ) : (\n                    <WinnerListContent winner={contest} />\n                  )}\n                </Grid>\n              </Grid>\n            </ListItem>\n          ))}\n        </List>\n      ) : (\n        <Typography classes={{ root: classes.noneAvailable }}> None Available </Typography>\n      )}\n    </>\n  );\n}\n","import { FetchOptions } from '../../interface/FetchOptions';\nimport { Winner } from '../../interface/User';\n\nexport const getWinnersByUser = async (): Promise<Winner[]> => {\n  const fetchOptions: FetchOptions = {\n    method: 'GET',\n    credentials: 'include',\n    headers: { 'Content-Type': 'application/json' },\n  };\n  return await fetch(`/api/winners`, fetchOptions)\n    .then((res) => res.json())\n    .catch(() => ({\n      error: { message: 'Unable to connect to server. Please try again' },\n    }));\n};\n\nexport const getSomeWinners = async (num: number): Promise<Winner[]> => {\n  const fetchOptions: FetchOptions = {\n    method: 'GET',\n    credentials: 'include',\n    headers: { 'Content-Type': 'application/json' },\n  };\n  return await fetch(`/api/winners/${num}`, fetchOptions)\n    .then((res) => res.json())\n    .catch(() => ({\n      error: { message: 'Unable to connect to server. Please try again' },\n    }));\n};\n","import { FetchOptions } from '../../interface/FetchOptions';\n\nconst updateProfile = async (file: FormData): Promise<string> => {\n  const fetchOptions: FetchOptions = {\n    method: 'POST',\n    credentials: 'include',\n    body: file,\n  };\n  return await fetch(`/api/upload/profile`, fetchOptions)\n    .then((res) => res.json())\n    .catch(() => ({\n      error: { message: 'Unable to connect to server. Please try again' },\n    }));\n};\n\nexport default updateProfile;\n","import { useState, useEffect, ChangeEvent } from 'react';\nimport { useAuth } from '../../context/useAuthContext';\nimport { useHistory } from 'react-router-dom';\nimport useStyles from './useStyles';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\nimport Container from '@material-ui/core/Container';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { createTheme, ThemeProvider } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport TourContent from '../../components/TourContent/TourContent';\nimport ContestList from '../../components/ContestList/ContestList';\nimport AuthHeader from '../../components/AuthHeader/AuthHeader';\nimport { Contest, Winner } from '../../interface/User';\nimport { getContestByUser } from '../../helpers/APICalls/contest';\nimport { getWinnersByUser } from '../../helpers/APICalls/winner';\nimport updateProfile from '../../helpers/APICalls/profile';\nimport { useSnackBar } from '../../context/useSnackbarContext';\nimport loginWithCookies from '../../helpers/APICalls/loginWithCookies';\n\n\ninterface ProfileProps {\n  header: boolean;\n}\n\n\nexport default function Profile({ header }: ProfileProps): JSX.Element {\n  const history = useHistory();\n  header === undefined ? (header = true) : header;\n  const classes = useStyles();\n  const [value, setValue] = useState(0);\n  const [contests, setContests] = useState<Contest[]>([]);\n  const [winners, setWinners] = useState<Winner[]>([]);\n  const [newProfilePic, setNewProfilePic] = useState<string>();\n  const [loading, setLoading] = useState<boolean>(false);\n  const { loggedInUser, updateLoginContext } = useAuth();\n  const { updateSnackBarMessage } = useSnackBar();\n\n  const steps = [\n    {\n      selector: '[data-tour=\"start-contest\"]',\n      content: {\n        words:\n          \"This is your profile page, you can view all of your open and completed contests. Don't forget to upload a profile pic.\",\n        theme: 'primary',\n      },\n      style: {\n        padding: 20,\n        minWidth: '40%',\n        maxWidth: '80vw',\n      },\n    },\n    {\n      selector: '[data-tour=\"start-contest\"]',\n      content: {\n        words:\n          \"This is your profile page, you can view all of your open and completed contests. Don't forget to upload a profile pic.\",\n        theme: 'primary',\n      },\n      style: {\n        padding: 20,\n        minWidth: '40%',\n        maxWidth: '80vw',\n      },\n      action: () => history.push('/settings'),\n    },\n  ];\n\n  const newTheme = createTheme({\n    palette: {\n      primary: {\n        main: '#000000',\n      },\n      secondary: {\n        main: '#3d3d3d',\n      },\n    },\n  });\n\n  interface TabPanelProps {\n    direction?: string;\n    value: number;\n    children: React.ReactNode;\n    index: number;\n  }\n\n  useEffect(() => {\n    async function getUserContests() {\n      const userContests = await getContestByUser();\n      if (userContests.contests) {\n        setContests(userContests.contests);\n      } else {\n        new Error('Could Not Get Contests');\n      }\n    }\n\n    async function getWinners() {\n      const usersWinners = await getWinnersByUser();\n      if (usersWinners) {\n        setWinners(usersWinners);\n      } else {\n        new Error('Could not get winners');\n      }\n    }\n\n    getUserContests();\n    getWinners();\n  }, []);\n\n  const isActive = () => {\n    if (contests) {\n      return contests.filter((contest) => contest.active);\n    }\n    return [];\n  };\n\n  const isComplete = () => {\n    if (contests) {\n      return contests.filter((contest) => !contest.active);\n    }\n    return [];\n  };\n\n  const handleChange = (event: React.ChangeEvent<Record<string, unknown>>, valueChange: number) => {\n    setValue(valueChange);\n  };\n\n  const Panel = function (props: TabPanelProps) {\n    return (\n      <div role=\"tabpanel\" id={`${props.index}`}>\n        {value === props.index && (\n          <Container>\n            <Typography>{props.children}</Typography>\n          </Container>\n        )}\n      </div>\n    );\n  };\n\n  const submitNewPic = async (e: ChangeEvent<HTMLInputElement>) => {\n    e.preventDefault();\n    if (e.target.files) {\n      setLoading(true);\n      try {\n        const formData = new FormData();\n        formData.append('image', e.target.files[0], e.target.files[0].name);\n        const newPic = await updateProfile(formData);\n        setNewProfilePic(newPic);\n        setLoading(false);\n        const { success } = await loginWithCookies();\n        if (success) {\n          updateLoginContext(success);\n          history.push('/profile');\n        }\n      } catch (err: any) {\n        updateSnackBarMessage(err.message);\n      }\n    }\n    header === true ? history.push('/profile') : history.push('/settings');\n  };\n\n  return loggedInUser ? (\n    <>\n      {header ? <AuthHeader linkTo=\"/create-contest\" btnText=\"create contest\" /> : ''}\n      <Grid className={classes.grid} container alignItems=\"center\" direction=\"column\">\n        {loading ? (\n          <CircularProgress />\n        ) : (\n          <Avatar\n            alt=\"Profile Image\"\n            src={newProfilePic || loggedInUser.profilePic}\n            className={classes.avatar}\n          ></Avatar>\n        )}\n        <Typography className={classes.user}>{loggedInUser.username}</Typography>\n        <Box className={classes.buttonBox}>\n          <Button className={classes.button}>Edit Profile</Button>\n          <Button className={classes.button}>\n            <label htmlFor=\"file\" className={classes.fileInputLabel}>\n              Choose New Pic\n              <input\n                type=\"file\"\n                accept=\"image/*\"\n                id=\"file\"\n                name=\"image\"\n                multiple={false}\n                onChange={submitNewPic}\n                className={classes.fileInput}\n              />\n            </label>\n          </Button>\n        </Box>\n        <Container className={classes.container}>\n          <Toolbar className={classes.toolbar}>\n            <ThemeProvider theme={newTheme}>\n              <Tabs\n                className={classes.tabs}\n                value={value}\n                onChange={handleChange}\n                textColor=\"primary\"\n                variant=\"fullWidth\"\n              >\n                <Tab label=\"in progress\" className={classes.tab} />\n                <Tab label=\"choose a winner\" className={classes.tab} />\n                <Tab label=\"past winners\" className={classes.tab} />\n              </Tabs>\n            </ThemeProvider>\n            <div data-tour=\"profile\"></div>\n          </Toolbar>\n          <Paper square elevation={2}>\n            <Panel value={value} index={0}>\n              <ContestList userContests={isActive()} />\n            </Panel>\n            <Panel value={value} index={1}>\n              <ContestList userContests={isComplete()} />\n            </Panel>\n            <Panel value={value} index={2}>\n              <ContestList userContests={winners} />\n            </Panel>\n          </Paper>\n        </Container>\n      </Grid>\n      <TourContent steps={steps} />\n    </>\n  ) : (\n    <CircularProgress />\n  );\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  pagination: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n}));\n\nexport default useStyles;\n","import { ChangeEvent } from 'react';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport useStyles from './useStyles';\n\ninterface Props {\n  page: number;\n  rowsPerPage: number;\n  handleChangePage: (e: any, newPage: number) => void;\n  handleChangeRowsPerPage: (e: ChangeEvent<HTMLInputElement>) => void;\n  numContests: number;\n}\n\nexport default function MyTablePagination({\n  page,\n  rowsPerPage,\n  handleChangePage,\n  handleChangeRowsPerPage,\n  numContests,\n}: Props): JSX.Element {\n  const classes = useStyles();\n\n  return (\n    <TablePagination\n      component=\"div\"\n      count={numContests}\n      page={page}\n      onPageChange={handleChangePage}\n      rowsPerPage={rowsPerPage}\n      onRowsPerPageChange={handleChangeRowsPerPage}\n      className={classes.pagination}\n    />\n  );\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  grid: {\n    height: '100%',\n    width: '95%',\n    margin: '0 auto',\n  },\n  typography: {\n    fontSize: '50px',\n    fontWeight: 'bold',\n    borderBottom: '2px #DCDCDC',\n    borderBottomWidth: '2px',\n    borderBottomStyle: 'solid',\n    textAlign: 'center',\n    color: 'white',\n  },\n  muiPicker: {\n    textAlign: 'center',\n    marginTop: '20px',\n  },\n  paper: {\n    width: '50%',\n    [theme.breakpoints.down('sm')]: {\n      width: '100%',\n    },\n  },\n  tableHead: {\n    width: '100%',\n  },\n  tableRow: {\n    padding: '25px 0px',\n    textAlign: 'center',\n    minWidth: 50,\n  },\n  buttonReset: {\n    fontWeight: 'bold',\n    backgroundColor: 'black',\n    color: 'white',\n    padding: '3px 7px',\n    border: '1px solid black',\n    margin: '28px 15px',\n    '&:hover': {\n      color: 'black',\n    },\n  },\n  button: {\n    fontWeight: 'bold',\n    backgroundColor: 'black',\n    color: 'white',\n    padding: '3px 7px',\n    border: '1px solid black',\n    marginLeft: '10px',\n    '&:hover': {\n      color: 'black',\n    },\n  },\n}));\n\nexport default useStyles;\n","import { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      marginBottom: theme.spacing(3),\n      [theme.breakpoints.up('md')]: {\n        marginBottom: theme.spacing(4),\n      },\n    },\n    disableGutter: {\n      marginBottom: 0,\n    },\n    title: {\n      fontWeight: 'bold',\n    },\n    cta: {\n      marginLeft: theme.spacing(1),\n      '&:first-child': {\n        marginLeft: theme.spacing(0),\n      },\n    },\n  }));\n\n  export default useStyles;","import clsx from 'clsx';\nimport useStyles from './useStyles';\nimport { Grid, Typography } from '@material-ui/core';\n\ninterface Props {\n    className?: string;\n    title: string | JSX.Element;\n    subtitle?: string | JSX.Element;\n    label?: string;\n    overline?: JSX.Element;\n    ctaGroup?: Array<JSX.Element>;\n    fadeUp?: boolean;\n    align?: 'right' | 'left' | 'center';\n    disableGutter?: boolean;\n    titleClasses?: string;\n    titleVariant?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6';\n    subtitleVariant?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'subtitle1' | 'subtitle2' | 'body1' | 'body2';\n    subtitleColor?: 'textPrimary' | 'textSecondary' | 'primary' | 'secondary';\n}\n\nconst SectionHeader = ({\n    title,\n    titleVariant = 'h4',\n    subtitleVariant,\n    subtitle,\n    subtitleColor,\n    label,\n    overline,\n    fadeUp,\n    align,\n    ctaGroup,\n    disableGutter,\n    titleClasses,\n    className\n    }: Props): JSX.Element => {\n    const classes = useStyles();\n    let justifyGrid: ('center' | 'flex-start' | 'flex-end' | 'space-between' | 'space-around' | 'space-evenly' | undefined) = 'center';\n    if (align === 'left') {\n        justifyGrid = 'flex-start';\n    } else if (align === 'right') {\n        justifyGrid = 'flex-end';\n    }\n\n    return (\n        <Grid\n            container\n            spacing={2}\n            data-aos={fadeUp ? 'fade-up' : ''}\n            className={clsx(\n                'section-header',\n                classes.root,\n                disableGutter ? classes.disableGutter : {},\n                className,\n            )}\n        >\n            {overline && (\n                <Grid\n                    item\n                    container\n                    justifyContent={justifyGrid}\n                    xs={12}\n                    className=\"section-header__overline-wrapper\"\n                >\n                    {overline}\n                </Grid>\n            )}\n            {label && (\n                <Grid item xs={12} className=\"section-header__label-wrapper\">\n                    <Typography\n                        variant=\"overline\"\n                        color=\"primary\"\n                        component=\"p\"\n                        align={align || 'center'}\n                    >\n                        {label}\n                    </Typography>\n                </Grid>\n            )}\n            <Grid item xs={12} className=\"section-header__title-wrapper\">\n                <Typography\n                    variant={titleVariant}\n                    align={align || 'center'}\n                    className={clsx(\n                        'section-header__title',\n                        classes.title,\n                        titleClasses ? titleClasses : {},\n                    )}\n                    color=\"textPrimary\"\n                >\n                    {title}\n                </Typography>\n            </Grid>\n            {subtitle && (\n                <Grid item xs={12} className=\"section-header__subtitle-wrapper\">\n                    <Typography\n                        variant={subtitleVariant || 'h6'}\n                        align={align || 'center'}\n                        color={subtitleColor || 'textSecondary'}\n                        className=\"section-header__subtitle\"\n                    >\n                        {subtitle}\n                    </Typography>\n                </Grid>\n            )}\n            {ctaGroup && ctaGroup.length && (\n                <Grid item xs={12} className=\"section-header__cta-wrapper\">\n                    <Grid\n                        container\n                        justifyContent={justifyGrid}\n                        alignItems=\"center\"\n                        wrap=\"nowrap\"\n                        className=\"section-header__cta-container\"\n                    >\n                        {ctaGroup.map((item, index) => (\n                            <div\n                                key={index}\n                                className={clsx(\n                                    'section-header__cta-item-wrapper',\n                                    classes.cta,\n                                )}\n                            >\n                                {item}\n                            </div>\n                        ))}\n                    </Grid>\n                </Grid>\n            )}\n        </Grid>\n    );\n};\n\nexport default SectionHeader;","import { useEffect, useState } from 'react';\nimport { useSnackBar } from '../../context/useSnackbarContext';\nimport { Contest } from '../../interface/User';\nimport { getAllContests } from '../../helpers/APICalls/contest';\nimport AuthHeader from '../../components/AuthHeader/AuthHeader';\nimport MyTablePagination from '../../components/TablePagination/TablePagination';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateRangeIcon from '@material-ui/icons/DateRange';\nimport MomentUtils from '@date-io/moment';\nimport moment from 'moment';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableBody from '@material-ui/core/TableBody';\nimport SortIcon from '@material-ui/icons/Sort';\nimport { Animated } from 'react-animated-css';\nimport useStyles from './useStyles';\nimport SectionHeader from '../../components/SectionHeader/SectionHeader';\nimport { Link } from 'react-router-dom';\n\ninterface Props {\n  allContestsLength: number;\n}\n\nconst ContestTable = ({ allContestsLength }: Props): JSX.Element => {\n  const [contests, setContests] = useState<Contest[]>([]);\n  const [numContests, setNumContests] = useState<number>(allContestsLength);\n  const [sortType, setSortType] = useState<keyof Contest>('deadlineDate');\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [dateFilter, setDateFilter] = useState<any>();\n  const classes = useStyles();\n  const { updateSnackBarMessage } = useSnackBar();\n\n  useEffect(() => {\n    if (!dateFilter && !contests) {\n      setNumContests(allContestsLength);\n    }\n  }, [dateFilter, contests, allContestsLength]);\n\n  useEffect(() => {\n    if (dateFilter !== undefined) {\n      const date = moment.utc(dateFilter._d).format();\n      fetchCall(date, rowsPerPage, page);\n    } else {\n      fetchCall('', rowsPerPage, page);\n      setNumContests(allContestsLength);\n    }\n  }, [dateFilter, rowsPerPage, page, allContestsLength]);\n\n  const fetchCall = async (date = '', rows = 10, page = 0) => {\n    const allContests = await getAllContests(date, rows, page);\n    if (allContests.contests) {\n      setContests(allContests.contests);\n      if (date !== '') {\n        setNumContests(allContests.contests.length);\n      }\n    } else {\n      new Error('Could Not Get Contests');\n    }\n  };\n\n  const handleChangePage = async (e: any, newPage: number) => {\n    const allContests = await getAllContests(\n      dateFilter !== undefined ? moment.utc(dateFilter._d).format() : '',\n      rowsPerPage,\n      newPage,\n    );\n    if (allContests.contests) {\n      setPage(newPage);\n      setContests(allContests.contests);\n    }\n  };\n\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const handleChangeDate = (date: any) => {\n    setPage(0);\n    const momentTime = date;\n    setDateFilter(momentTime);\n  };\n\n  const sortByHeader = (sortParam: Contest[] = contests) => {\n    if (contests) {\n      const sort = [...sortParam].sort((a: Contest, b: Contest) => {\n        if (a[sortType] > b[sortType]) {\n          return 1;\n        } else if (a[sortType] < b[sortType]) {\n          return -1;\n        } else {\n          return 0;\n        }\n      });\n      setContests(sort);\n    }\n  };\n\n  return (\n    <>\n      <Grid container justifyContent=\"center\" className={classes.grid}>\n        <SectionHeader\n          title={\n            <Typography component=\"span\" variant=\"inherit\" color=\"primary\">\n              Current Contests\n            </Typography>\n          }\n          subtitle=\"Here we have all of our current contests, feel free to use our date picker to find all contests that end by a certain date\"\n          fadeUp\n        />\n        <Grid container justifyContent=\"center\" className={classes.muiPicker}>\n          <MuiPickersUtilsProvider utils={MomentUtils}>\n            <Grid item xs={5}>\n              <KeyboardDatePicker\n                id=\"date\"\n                name=\"deadlineDate\"\n                margin=\"normal\"\n                variant=\"inline\"\n                inputVariant=\"outlined\"\n                format=\"MMM Do YYYY\"\n                value={dateFilter}\n                onChange={(value) => handleChangeDate(value)}\n                keyboardIcon={<DateRangeIcon />}\n                autoOk={true}\n              />\n              <Button className={classes.buttonReset} onClick={() => handleChangeDate(undefined)}>\n                Reset Filter\n              </Button>\n            </Grid>\n          </MuiPickersUtilsProvider>\n        </Grid>\n        <Paper className={classes.paper}>\n          <TableContainer>\n            <Table stickyHeader aria-label=\"sticky table\">\n              <TableHead>\n                <TableRow className={classes.tableHead}>\n                  <TableCell className={classes.tableRow} key=\"Contest Title\">\n                    Contest Title\n                  </TableCell>\n                  <TableCell className={classes.tableRow} key=\"Contest Description\">\n                    Contest Description\n                  </TableCell>\n                  <TableCell className={classes.tableRow} key=\"Prize Amount\">\n                    Prize Amount\n                  </TableCell>\n                  <TableCell className={classes.tableRow} key=\"Deadline Date\">\n                    <div onClick={() => sortByHeader()}>Deadline Date</div>\n                  </TableCell>\n                  <TableCell className={classes.tableRow} key=\"Contest Page\">\n                    Contest Page\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {contests.map((contest) => {\n                  return (\n                    <TableRow hover role=\"checkbox\" className={classes.tableHead} tabIndex={-1} key={contest.title}>\n                      <TableCell className={classes.tableRow}>{contest.title}</TableCell>\n                      <TableCell className={classes.tableRow}>{contest.description}</TableCell>\n                      <TableCell className={classes.tableRow}>${contest.prizeAmount}</TableCell>\n                      <TableCell className={classes.tableRow}>\n                        {moment(contest.deadlineDate).local().format('MM-DD-YYYY')}\n                      </TableCell>\n                      <TableCell className={classes.tableRow}>\n                        <Button className={classes.button} component={Link} to={`/contest/${contest._id}`}>\n                          More Info\n                        </Button>\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <MyTablePagination\n            page={page}\n            rowsPerPage={rowsPerPage}\n            handleChangePage={handleChangePage}\n            handleChangeRowsPerPage={handleChangeRowsPerPage}\n            numContests={numContests}\n          />\n        </Paper>\n      </Grid>\n    </>\n  );\n};\n\nexport default ContestTable;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n    root: {\n      width: '100%',\n      height: '100%',\n    },\n    dBlock: {\n      display: 'block',\n    },\n  }));\n\n  export default useStyles;","import clsx from 'clsx';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport useStyles from './useStyles'\n\ninterface Props {\n    className?: string;\n    src: string;\n    srcSet?: string;\n    alt?: string;\n    lazyProps?: Record<string, unknown>;\n    lazy?: boolean;\n}\n\nconst Image = ({\n    src,\n    srcSet,\n    alt = '...',\n    lazy = true,\n    lazyProps = {\n        width: 'auto',\n        height: 'auto',\n    },\n    className,\n    ...rest\n}: Props): JSX.Element => {\n\n    const classes = useStyles();\n\n    if (lazy) {\n        return (\n            <LazyLoadImage\n                className={clsx('image', classes.root, classes.dBlock, className)}\n                alt={alt}\n                src={src}\n                srcSet={srcSet}\n                effect=\"opacity\"\n                {...lazyProps}\n                {...rest}\n            />\n        );\n    }\n\n    return (\n        <img\n            className={clsx('image', classes.root, className)}\n            alt={alt}\n            src={src}\n            srcSet={srcSet}\n            {...rest}\n        />\n    );\n};\n\nexport default Image;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    [theme.breakpoints.down('sm')]: {\n      marginRight: theme.spacing(-2),\n      marginLeft: theme.spacing(-2),\n    },\n  },\n  winnerItem: {\n    position: 'relative',\n    overflow: 'hidden',\n    '&:last-child': {\n      marginBottom: 0,\n    },\n    '&:hover': {\n      '& .folio__image': {\n        transform: 'scale(1.2)',\n      },\n    },\n  },\n  image: {\n    transitionDuration: '.7s',\n    transform: 'scale(1.0)',\n    height: 300,\n    objectFit: 'cover',\n    [theme.breakpoints.up('md')]: {\n      minHeight: 500,\n    },\n  },\n  winnerInfoWrapper: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundImage: 'linear-gradient(to bottom, rgba(0, 0, 0, 0) 2%, #000000)',\n    padding: theme.spacing(4, 2),\n    [theme.breakpoints.up('md')]: {\n      padding: theme.spacing(6),\n    },\n  },\n  winnerTitle: {\n    color: 'white',\n    fontWeight: 'bold',\n    textTransform: 'uppercase',\n  },\n  winnerSubtitle: {\n    color: 'white',\n    textTransform: 'capitalize',\n    margin: theme.spacing(1, 0),\n  },\n  grid: {\n    display: 'flex',\n    flexDirection: 'column',\n    [theme.breakpoints.up('md')]: {\n      flexDirection: 'row',\n    },\n  },\n  // leftGrid: {\n  //   display: 'flex',\n  //   flexDirection: 'column',\n  //   marginBottom: theme.spacing(2),\n  //   [theme.breakpoints.up('md')]: {\n  //     marginRight: theme.spacing(1),\n  //     marginBottom: 0,\n  //   },\n  // },\n  // rightGrid: {\n  //   display: 'flex',\n  //   flexDirection: 'column',\n  //   [theme.breakpoints.up('md')]: {\n  //     marginLeft: theme.spacing(1),\n  //   },\n  // },\n}));\n\nexport default useStyles;\n","import clsx from 'clsx';\nimport { Typography, Grid } from '@material-ui/core';\nimport Image from '../Image/Image';\nimport useStyles from './useStyles';\nimport ImageModal from '../ImageModal/ImageModal';\n\ninterface ViewComponentProps {\n  className?: string;\n  data?: any;\n}\n\nconst WinnerCard = ({ data, className, ...rest }: ViewComponentProps): JSX.Element => {\n  const classes = useStyles();\n\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      <Grid container direction=\"row\">\n        {data.map((item: any, index: number) => (\n          <Grid item spacing={5} xs={12} sm={6} md={3} className={classes.winnerItem} key={index} data-aos=\"fade-up\">\n            <ImageModal\n              artistPic={item.winningArtist.profilePic}\n              artistName={item.winningArtist.username}\n              artistId={item.winningArtist._id}\n              image={item.winningPic}\n            >\n              <div>\n                <Image\n                  src={item.winningPic}\n                  alt={item.title}\n                  className={clsx('folio__image', classes.image)}\n                  lazy={false}\n                />\n                <div className={classes.winnerInfoWrapper}>\n                  <div>\n                    <Typography variant=\"h6\" className={classes.winnerTitle}>\n                      {item.title}\n                    </Typography>\n                    <Typography variant=\"subtitle1\" className={classes.winnerSubtitle}>\n                      {item.description}\n                    </Typography>\n                  </div>\n                </div>\n              </div>\n            </ImageModal>\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n};\n\nexport default WinnerCard;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 1236,\n    width: 'inherit',\n    margin: '0 auto',\n    padding: theme.spacing(6, 2),\n    [theme.breakpoints.up('sm')]: {\n      padding: theme.spacing(8, 8),\n    },\n    [theme.breakpoints.up('md')]: {\n      padding: theme.spacing(12, 8),\n    },\n  },\n  fullWidth: {\n    maxWidth: '100%',\n  },\n  disablePadding: {\n    padding: 0,\n  },\n  narrow: {\n    maxWidth: 800,\n  },\n}));\n\nexport default useStyles;\n","import clsx from 'clsx';\nimport useStyles from './useStyles';\n\ninterface Props {\n    className?: string;\n    children?: JSX.Element;\n    narrow?: boolean;\n    fullWidth?: boolean;\n    disablePadding?: boolean;\n}\n\nconst Section = ({\n    children,\n    fullWidth,\n    narrow,\n    disablePadding,\n    className,\n}: Props): JSX.Element => {\n    const classes = useStyles();\n\n    return (\n        <section\n            className={clsx(\n                'section',\n                classes.root,\n                fullWidth ? classes.fullWidth : {},\n                narrow ? classes.narrow : {},\n                disablePadding ? classes.disablePadding : {},\n                className,\n            )}\n        >\n            {children}\n        </section>\n    );\n};\n\nexport default Section;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n  wrapper: {\n    padding: '4rem 0px',\n  },\n  swiperContainer: {\n    width: '100%',\n    maxWidth: 500,\n  },\n}));\n\nexport default useStyles;\n","import { FetchOptions } from '../../interface/FetchOptions';\nimport { Review } from '../../interface/User';\n\ninterface review {\n  artistId: string;\n  rating: number;\n  text: string;\n}\n\nexport const getReviews = async (id: string): Promise<Review[]> => {\n  const fetchOptions: FetchOptions = {\n    method: 'GET',\n    headers: { 'Content-Type': 'application/json' },\n    credentials: 'include',\n  };\n  return await fetch(`/api/reviews/${id}`, fetchOptions)\n    .then((res) => res.json())\n    .catch((err) => ({\n      error: { message: 'Unable to get reviews', err },\n    }));\n};\n\nexport const getAllReviews = async (): Promise<Review[]> => {\n  const fetchOptions: FetchOptions = {\n    method: 'GET',\n    headers: { 'Content-Type': 'application/json' },\n    credentials: 'include',\n  };\n  return await fetch(`/api/reviews`, fetchOptions)\n    .then((res) => res.json())\n    .catch((err) => ({\n      error: { message: 'Unable to get reviews', err },\n    }));\n};\n\nexport const createReviews = async (review: review): Promise<Review> => {\n  const fetchOptions: FetchOptions = {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    credentials: 'include',\n    body: JSON.stringify(review),\n  };\n  return await fetch(`/api/reviews`, fetchOptions)\n    .then((res) => res.json())\n    .catch((err) => ({\n      error: { message: 'Unable to create review', err },\n    }));\n};\n\nexport const deleteReview = async (id: string): Promise<number> => {\n  const fetchOptions: FetchOptions = {\n    method: 'DELETE',\n    headers: { 'Content-Type': 'application/json' },\n    credentials: 'include',\n  };\n\n  return await fetch(`/api/reviews/${id}`, fetchOptions)\n    .then((res) => res.status)\n    .catch((err) => err.status);\n};\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    height: 'auto',\n    maxWidth: '100%',\n  },\n  paper: {\n    margin: theme.spacing(1),\n    marginTop: theme.spacing(7),\n    width: '95%',\n    height: theme.spacing(30),\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n  },\n  avatar: {\n    height: theme.spacing(11),\n    width: theme.spacing(10),\n  },\n  username: {\n    marginTop: theme.spacing(4),\n    marginLeft: theme.spacing(4),\n    fontWeight: 'bold',\n  },\n  rating: {\n    alignSelf: 'center',\n    marginBottom: theme.spacing(1),\n  },\n  reviewText: {\n    alignSelf: 'center',\n  },\n}));\n\nexport default useStyles;\n","import { useTheme } from '@material-ui/core/styles';\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport SwipeableViews from 'react-swipeable-views';\nimport { autoPlay } from 'react-swipeable-views-utils';\nimport { Review } from '../../interface/User';\nimport Rating from '@material-ui/lab/Rating';\nimport Avatar from '@material-ui/core/Avatar';\n\nconst AutoPlaySwipeableViews = autoPlay(SwipeableViews);\nimport useStyles from './useStyles';\nimport { useState } from 'react';\n\ninterface Props {\n  reviews: Review[] | null;\n  text?: boolean;\n}\n\nconst ReviewCarousel = ({ reviews, text }: Props): JSX.Element => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [activeStep, setActiveStep] = useState(0);\n  const maxSteps = reviews && reviews.length < 5 ? reviews.length : 4;\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleStepChange = (step: number) => {\n    setActiveStep(step);\n  };\n\n  return (\n    <Box display=\"flex\" justifyContent=\"center\" maxWidth=\"100%\">\n      <div className={classes.root}>\n        <AutoPlaySwipeableViews\n          axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n          index={activeStep}\n          onChangeIndex={handleStepChange}\n          enableMouseEvents\n        >\n          {reviews !== null && reviews?.length ? (\n            reviews?.map((review, index) => (\n              <div key={review._id}>\n                {Math.abs(activeStep - index) <= 2 ? (\n                  <Box display=\"flex\" mb={2} justifyContent=\"center\">\n                    <Paper elevation={3} className={classes.paper}>\n                      <Box display=\"flex\" mb={4} textAlign=\"center\" pt={2} justifyContent=\"center\" mt={4}>\n                        <Avatar\n                          alt=\"Profile Image\"\n                          src={review.reviewerId.profilePic}\n                          className={classes.avatar}\n                        ></Avatar>\n                        <Typography className={classes.username}>@{review.reviewerId.username}</Typography>\n                      </Box>\n                      <Rating\n                        classes={{ root: classes.rating }}\n                        value={review.rating}\n                        size=\"large\"\n                        name=\"read-only\"\n                        readOnly\n                      />\n                      {text ? <Typography className={classes.reviewText}>{review.text}</Typography> : null}\n                    </Paper>\n                  </Box>\n                ) : null}\n              </div>\n            ))\n          ) : (\n            <Typography style={{ marginTop: '30px', padding: '20px' }} variant=\"h5\">\n              This artist does not have any review\n            </Typography>\n          )}\n        </AutoPlaySwipeableViews>\n        {reviews?.length ? (\n          <MobileStepper\n            variant=\"progress\"\n            steps={maxSteps}\n            position=\"static\"\n            activeStep={activeStep}\n            className={classes.root}\n            nextButton={\n              <Button size=\"small\" onClick={handleNext} disabled={activeStep === maxSteps - 1}>\n                Next\n                {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n              </Button>\n            }\n            backButton={\n              <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0}>\n                {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n                Back\n              </Button>\n            }\n          />\n        ) : (\n          ''\n        )}\n      </div>\n    </Box>\n  );\n};\n\nexport default ReviewCarousel;\n","import { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport SectionHeader from '../SectionHeader/SectionHeader';\nimport useStyles from './useStyles';\nimport { Review } from '../../interface/User';\nimport { getAllReviews } from '../../helpers/APICalls/review';\nimport { Box } from '@material-ui/core';\nimport 'swiper/swiper.min.css';\nimport 'swiper/components/pagination/pagination.min.css';\nimport ReviewCarousel from '../ReviewCarousel/ReviewCarousel';\n\ninterface Props {\n  className?: string;\n}\n\nconst SplashReviews = ({ className }: Props): JSX.Element => {\n  const [reviews, setReviews] = useState<Review[]>([]);\n  const classes = useStyles();\n\n  const getReviews = async () => {\n    const getAll = await getAllReviews();\n\n    if (getAll) {\n      setReviews(getAll);\n    } else {\n      new Error('Could Not Get Reviews');\n    }\n  };\n\n  useEffect(() => {\n    getReviews();\n  }, []);\n\n  return (\n    <div className={classes.wrapper}>\n      <SectionHeader title=\"Customer Reviews\" subtitle=\"Take a look at some of our recent contest creators feedback.\" />\n      <div className={clsx('swiper-container', classes.swiperContainer)}>\n        <div className=\"swiper-wrapper\">\n          <ReviewCarousel reviews={reviews} text={true} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SplashReviews;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    background: 'rgb(247, 249, 250)',\n  },\n  inner: {\n    maxWidth: 1236,\n    width: '100%',\n    margin: '0 auto',\n  },\n  innerNarrowed: {\n    maxWidth: 800,\n  },\n}));\n\nexport default useStyles;\n","import clsx from 'clsx';\nimport useStyles from './useStyles';\n\ninterface Props {\n    className?: string;\n    children?: JSX.Element;\n    innerNarrowed?: boolean;\n}\n\nconst SectionAlternate = ({ children, innerNarrowed, className }: Props): JSX.Element => {\n    const classes = useStyles();\n\n    return (\n        <section\n            className={clsx('section-alternate', classes.root, className)}\n        >\n            <div\n                className={clsx(\n                    'section-alternate__content',\n                    classes.inner,\n                    innerNarrowed ? classes.innerNarrowed : {},\n                )}\n            >\n                {children}\n            </div>\n        </section>\n    );\n};\n\nexport default SectionAlternate;","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundSize: 'contain',\n    backgroundColor: 'white',\n  },\n  cover: {\n    position: 'relative',\n    zIndex: 9,\n    width: '100%',\n    height: '100%',\n  },\n  image: {\n    objectFit: 'cover',\n  },\n  sectionHeader: {\n    [theme.breakpoints.down('sm')]: {\n      padding: '0 20px',\n    },\n  },\n}));\n\nexport default useStyles;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      height: '100%',\n      width: '100%',\n      overflow: 'hidden',\n    },\n    hero: {\n      position: 'relative',\n      width: '100%',\n      height: '100%',\n      display: 'flex',\n      maxWidth: 1236,\n      margin: '0 auto',\n      [theme.breakpoints.down('sm')]: {\n        flexDirection: 'column-reverse',\n      },\n    },\n    heroLeftSide: {\n      [theme.breakpoints.down('sm')]: {\n        padding: theme.spacing(3, 8),\n      },\n      [theme.breakpoints.down('xs')]: {\n        padding: theme.spacing(3, 2),\n      },\n    },\n    heroRightSide: {\n      maxWidth: '50%',\n      flex: '0 0 50%',\n      position: 'relative',\n      [theme.breakpoints.down('sm')]: {\n        maxWidth: '100%',\n        flex: '0 0 100%',\n        height: '300px',\n      },\n    },\n    heroCover: {\n      position: 'relative',\n      width: '50vw',\n      height: '100%',\n      [theme.breakpoints.down('sm')]: {\n        width: '100%',\n      },\n    },\n    heroImageContainer: {\n      height: '100%',\n      width: '100%',\n      overflow: 'hidden',\n    },\n    heroImage: {\n      position: 'absolute',\n      left: '0%',\n      width: '100%',\n      height: '100%',\n      [theme.breakpoints.up('md')]: {\n        shapeOutside: 'polygon(10% 0%, 100% 0, 100% 100%, 0% 100%)',\n        clipPath: 'polygon(10% 0%, 100% 0, 100% 100%, 0% 100%)',\n      },\n    },\n  }));\n\n  export default useStyles;","import clsx from 'clsx';\nimport useStyles from './useStyles';\nimport Section from '../../Section/Section';\nimport Divider from '@material-ui/core/Divider'\n\ninterface Props {\n    className?: string;\n    rightSide: JSX.Element;\n    leftSide: JSX.Element;\n}\n\nconst HeroShaped = ({ leftSide, rightSide, className, ...rest }: Props): JSX.Element => {\n    const classes = useStyles();\n    return (\n        <div className={clsx(classes.root, 'hero-shaped', className)} {...rest}>\n            <div className={clsx('hero-shaped__wrapper', classes.hero)}>\n                <Section\n                    className={clsx('hero-shaped__left-side', classes.heroLeftSide)}\n                >\n                    {leftSide}\n                </Section>\n                <div className={clsx('hero-shaped__right-side', classes.heroRightSide)}>\n                    <div className={clsx('hero-shaped__cover', classes.heroCover)}>\n                        <div\n                            className={clsx(\n                                'hero-shaped__image-container',\n                                classes.heroImageContainer,\n                            )}\n                        >\n                            <div className={clsx('hero-shaped__image', classes.heroImage)}>\n                                {rightSide}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <Divider />\n        </div>\n    );\n};\n\nexport default HeroShaped;\n","export default __webpack_public_path__ + \"static/media/heroImg.65c790d5.jpg\";","import useStyles from './useStyles';\nimport Button from '@material-ui/core/Button';\nimport HeroShaped from './HeroShaped/HeroShaped';\nimport SectionHeader from '../SectionHeader/SectionHeader';\nimport Image from '../Image/Image';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\nimport { useAuth } from '../../context/useAuthContext';\n\nimport HeroImg from '../../Images/heroImg.jpg';\n\ninterface Props {\n  className?: string;\n}\n\nconst Hero = ({ className }: Props): JSX.Element => {\n  const classes = useStyles();\n  const { loggedInUser } = useAuth();\n\n  return (\n    <div className={className}>\n      <HeroShaped\n        leftSide={\n          <div>\n            <SectionHeader\n              title={\n                <span>\n                  <Typography component=\"span\" variant=\"inherit\" color=\"primary\">\n                    Tattoo Art\n                  </Typography>\n                </span>\n              }\n              subtitle=\"Premier tattoo designs created by artists all over the world.\"\n              ctaGroup={[\n                loggedInUser ? (\n                  <Button\n                    component={Link}\n                    to=\"create-contest\"\n                    key=\"button\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"large\"\n                    data-tour=\"start-contest\"\n                  >\n                    Start Contest\n                  </Button>\n                ) : (\n                  <Button key=\"button\" variant=\"contained\" color=\"primary\" size=\"large\">\n                    Start Contest\n                  </Button>\n                ),\n              ]}\n              align=\"left\"\n              titleVariant=\"h3\"\n              className={classes.sectionHeader}\n            />\n          </div>\n        }\n        rightSide={\n          <Image\n            src={HeroImg}\n            srcSet={HeroImg}\n            alt=\"...\"\n            className={classes.image}\n            lazyProps={{\n              width: '100%',\n              height: '100%',\n            }}\n          />\n        }\n      />\n    </div>\n  );\n};\n\nexport default Hero;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  winnerCard: {\n    backgroundColor: '#fff',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    [theme.breakpoints.down('xs')]: {\n      flexDirection: 'column',\n    },\n  },\n  winnerWrapper: {\n    width: '100%',\n  },\n  table: {\n    margin: '100px 0',\n  },\n}));\n\nexport default useStyles;\n","import { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useAuth } from '../../context/useAuthContext';\nimport { Winner } from '../../interface/User';\nimport ContestTable from '../../components/ContestTable/ContestTable';\nimport TourContent from '../../components/TourContent/TourContent';\nimport { getSomeWinners } from '../../helpers/APICalls/winner';\nimport { getNumContests } from '../../helpers/APICalls/contest';\nimport AuthHeader from '../../components/AuthHeader/AuthHeader';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { Animated } from 'react-animated-css';\nimport WinnerCard from '../../components/WinnerCard/WinnerCard';\nimport Section from '../../components/Section/Section';\nimport SectionHeader from '../../components/SectionHeader/SectionHeader';\nimport { Divider } from '@material-ui/core';\nimport SplashReviews from '../../components/SplashReviews/SplashReviews';\nimport SectionAlternate from '../../components/SectionAlternate/SectionAlternate';\nimport Hero from '../../components/Hero/Hero';\nimport useStyles from './useStyles';\nimport { useTourContext } from '../../context/tourContext';\n\nexport default function Discovery(): JSX.Element {\n  const [winners, setWinners] = useState<Winner[]>([]);\n  const [numContests, setNumContests] = useState<number>(0);\n  const classes = useStyles();\n  const history = useHistory();\n  const { loggedInUser } = useAuth();\n  const winnersData = async () => {\n    const getWinners = await getSomeWinners(4);\n    if (getWinners) {\n      setWinners(getWinners);\n    } else {\n      return new Error('Could Not Get Winners');\n    }\n  };\n\n  const steps = [\n    {\n      selector: '[data-tour=\"start-contest\"]',\n      content: { words: 'You can create a contest here!', theme: 'primary' },\n      style: {\n        padding: 20,\n        minWidth: '40%',\n        maxWidth: '80vw',\n      },\n      updateDelay: 100000,\n      scrollDuration: 1500,\n    },\n    {\n      selector: '[data-tour=\"contests\"]',\n      content: { words: 'Check out our active contests here!', theme: 'secondary' },\n      style: {\n        padding: 20,\n        minWidth: '40%',\n        maxWidth: '80vw',\n        backgroundColor: 'black',\n      },\n      scrollDuration: 1500,\n    },\n    {\n      selector: '[data-tour=\"contests\"]',\n      content: { words: 'Check out our active contests here!', theme: 'secondary' },\n      style: {\n        padding: 20,\n        minWidth: '40%',\n        maxWidth: '80vw',\n        backgroundColor: 'black',\n      },\n      scrollDuration: 1500,\n      action: () => history.push('/profile'),\n    },\n  ];\n\n  useEffect(() => {\n    winnersData();\n    getNumContests().then((data: number) => {\n      setNumContests(data);\n    });\n  }, []);\n\n  return (\n    <>\n      <AuthHeader\n        linkTo={loggedInUser ? '/create-contest' : '/login'}\n        btnText={loggedInUser ? 'Create Contest' : 'Log In'}\n      />\n      <Animated animationIn=\"bounceInRight\" animationOut=\"fadeOut\" isVisible={true}>\n        <Hero />\n        <Section>\n          <Grid>\n            <SectionHeader\n              title={\n                <Typography component=\"span\" variant=\"inherit\" color=\"primary\">\n                  Check out some of our recent Contest winners.\n                </Typography>\n              }\n              subtitle=\"We Guarantee at least 20 submissions to your contest and you could receive up to 500+.\"\n              fadeUp\n            />\n            <Grid container className={classes.winnerCard} alignItems=\"center\" direction=\"column\">\n              <WinnerCard data={winners} />\n            </Grid>\n          </Grid>\n        </Section>\n        <Divider />\n        <SectionAlternate>\n          <SplashReviews className=\"reviews\" />\n        </SectionAlternate>\n        <Divider />\n        <div className={classes.table} data-tour=\"contests\">\n          <ContestTable allContestsLength={numContests} />\n        </div>\n        <Divider />\n        <TourContent steps={steps} />\n      </Animated>\n    </>\n  );\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n  textField: {\n    width: '100%',\n  },\n  label: {\n    fontWeight: 'bold',\n  },\n  box: {\n    width: '65%',\n  },\n  submit: {\n    padding: 10,\n    width: 200,\n    borderRadius: 0,\n    height: 60,\n    fontSize: 14,\n  },\n  imageList: {\n    overflowY: 'scroll',\n    overflowX: 'hidden',\n    height: 450,\n    border: '0.5px solid #DDDDDD',\n    borderRadius: 5,\n    padding: '20px',\n    '&::-webkit-scrollbar': {\n      width: '4px',\n    },\n    '&::-webkit-scrollbar-thumb': {\n      backgroundColor: 'black',\n    },\n  },\n  images: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    padding: '20px',\n  },\n  fileInputLabel: {\n    '&:hover': {\n      cursor: 'pointer',\n    },\n    height: '100%',\n    width: '100%',\n  },\n  fileInput: { display: 'none' },\n  uploadBtn: {\n    color: 'white',\n    backgroundColor: 'black',\n    borderRadius: 0,\n    border: '1px solid black',\n    '&&:hover': {\n      backgroundColor: 'white',\n      color: 'black',\n    },\n    height: '100%',\n    width: '10rem',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginRight: '2rem',\n    [theme.breakpoints.down('sm')]: {\n      marginRight: 0,\n    },\n  },\n  img: {\n    width: '95%',\n    height: '95%',\n    cursor: 'pointer',\n  },\n  checked: {\n    filter: 'brightness(50%)',\n  },\n  sub: {\n    marginTop: 10,\n    color: '#AAAAAA',\n  },\n  icon: {\n    display: 'block',\n    position: 'relative',\n    width: '50%',\n    height: '50%',\n    color: '#FFFFFF',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    bottom: 115,\n  },\n}));\n\nexport default useStyles;\n","import { useState, ChangeEvent } from 'react';\nimport { Button, TextField, Box, Typography, MenuItem, Grid, InputAdornment } from '@material-ui/core';\nimport { ImageList, ImageListItem, CircularProgress } from '@material-ui/core';\nimport { KeyboardDatePicker, KeyboardTimePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateRangeIcon from '@material-ui/icons/DateRange';\nimport AlarmIcon from '@material-ui/icons/Alarm';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport { NewContest } from '../../../interface/Contest';\nimport { uploadContestPic } from '../../../helpers/APICalls/contest';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport MomentUtils from '@date-io/moment';\nimport moment from 'moment';\nimport 'moment-timezone';\nimport axios from 'axios';\nimport $ from 'jquery';\nimport useStyles from './useStyles';\n\ninterface Props {\n  handleSubmit: ({ title, description, prizeAmount, deadlineDate, images }: NewContest) => void;\n}\n\nexport default function CreateContestForm({ handleSubmit }: Props): JSX.Element {\n  const [zone, setZone] = useState<string>('PDT');\n  const [loading, setLoading] = useState<boolean>(false);\n  const [images, setImages] = useState<Array<string>>([]);\n  const classes = useStyles();\n\n  const submitNewPic = async (e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files) {\n      setLoading(true);\n      try {\n        const formData = new FormData();\n        if (!formData) {\n          setLoading(false);\n        }\n        for (let i = 0; i < e.target.files.length; i++) {\n          formData.append('image', e.target.files[i], e.target.files[i].name);\n        }\n        const newPic = await uploadContestPic(formData);\n        setImages([newPic, ...images]);\n        setLoading(false);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        title: '',\n        description: '',\n        prizeAmount: 0,\n        deadlineDate: moment(),\n        images: [],\n      }}\n      validationSchema={Yup.object().shape({\n        title: Yup.string().required('This field is required'),\n        description: Yup.string().required('This field is required'),\n        prizeAmount: Yup.number().integer().positive().required('This field is required'),\n        deadlineDate: Yup.date().required('This field is required'),\n        images: Yup.array(),\n      })}\n      onSubmit={(contest) => {\n        let newDate = moment();\n        if (zone === 'PDT') {\n          newDate = contest.deadlineDate.tz('America/Los_Angeles', true);\n        } else if (zone === 'MDT') {\n          newDate = contest.deadlineDate.tz('America/Denver', true);\n        } else if (zone === 'CDT') {\n          newDate = contest.deadlineDate.tz('America/Chicago', true);\n        } else {\n          newDate = contest.deadlineDate.tz('America/New_York', true);\n        }\n        handleSubmit({ ...contest, deadlineDate: newDate, images: images });\n      }}\n    >\n      {({ handleSubmit, handleChange, setFieldValue, values, touched, errors, isSubmitting }) => (\n        <form onSubmit={handleSubmit} className={classes.form} noValidate>\n          <Box mt={3} mb={3} className={classes.box}>\n            <Typography className={classes.label}>What do you need designed?</Typography>\n            <TextField\n              id=\"title\"\n              name=\"title\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              placeholder=\"Write a descriptive contest title\"\n              className={classes.textField}\n              helperText={touched.title ? errors.title : ''}\n              error={touched.title && Boolean(errors.title)}\n              value={values.title}\n              onChange={handleChange}\n            ></TextField>\n          </Box>\n          <Box mt={3} mb={3} className={classes.box}>\n            <Typography className={classes.label}>Description</Typography>\n            <TextField\n              id=\"description\"\n              name=\"description\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              placeholder=\"Details about what type of tattoo you want\"\n              rows={6}\n              multiline\n              className={classes.textField}\n              helperText={touched.description ? errors.description : ''}\n              error={touched.description && Boolean(errors.description)}\n              value={values.description}\n              onChange={handleChange}\n            ></TextField>\n          </Box>\n          <Box mt={3} mb={3} className={classes.box}>\n            <Grid container spacing={2}>\n              <Grid item xs={4}>\n                <Typography className={classes.label}>Prize amount</Typography>\n                <TextField\n                  id=\"prizeAmount\"\n                  name=\"prizeAmount\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  placeholder=\"100.00\"\n                  helperText={touched.prizeAmount ? errors.prizeAmount : ''}\n                  error={touched.prizeAmount && Boolean(errors.prizeAmount)}\n                  value={values.prizeAmount ? values.prizeAmount : ''}\n                  onChange={handleChange}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <AttachMoneyIcon />\n                      </InputAdornment>\n                    ),\n                  }}\n                ></TextField>\n              </Grid>\n              <Grid item xs={8}>\n                <Typography className={classes.label}>Deadline</Typography>\n                <Grid container spacing={0}>\n                  <MuiPickersUtilsProvider utils={MomentUtils}>\n                    <Grid item xs={5}>\n                      <KeyboardDatePicker\n                        id=\"date\"\n                        name=\"deadlineDate\"\n                        margin=\"normal\"\n                        variant=\"inline\"\n                        inputVariant=\"outlined\"\n                        format=\"MMMM Do YYYY\"\n                        value={values.deadlineDate}\n                        onChange={(value) => setFieldValue('deadlineDate', value)}\n                        keyboardIcon={<DateRangeIcon />}\n                      />\n                    </Grid>\n                    <Grid item xs={5}>\n                      <KeyboardTimePicker\n                        id=\"time\"\n                        name=\"deadlineDate\"\n                        margin=\"normal\"\n                        variant=\"inline\"\n                        inputVariant=\"outlined\"\n                        format=\"LT\"\n                        value={values.deadlineDate}\n                        onChange={(value) => setFieldValue('deadlineDate', value)}\n                        keyboardIcon={<AlarmIcon />}\n                      />\n                    </Grid>\n                  </MuiPickersUtilsProvider>\n                  <Grid item xs={2}>\n                    <TextField\n                      id=\"zone\"\n                      name=\"zone\"\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      select\n                      value={zone}\n                      onChange={(value) => setZone(value.target.value)}\n                    >\n                      <MenuItem value=\"PDT\">PDT</MenuItem>\n                      <MenuItem value=\"MDT\">MDT</MenuItem>\n                      <MenuItem value=\"CDT\">CDT</MenuItem>\n                      <MenuItem value=\"EDT\">EDT</MenuItem>\n                    </TextField>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Box>\n          <Box mt={3} mb={3} className={classes.box}>\n            <Box display=\"flex\" justifyContent=\"space-between\" alignContent=\"center\">\n              <Box>\n                <Typography className={classes.label}>Show us some inspiration for your dream tattoo</Typography>\n                <Typography className={classes.sub} component=\"p\">\n                  Upload your images.\n                </Typography>\n              </Box>\n              <Box maxWidth=\"50%\">\n                <label htmlFor=\"file\" className={classes.fileInputLabel}>\n                  <input\n                    type=\"file\"\n                    accept=\"image/*\"\n                    id=\"file\"\n                    name=\"image\"\n                    multiple={false}\n                    onChange={submitNewPic}\n                    className={classes.fileInput}\n                  />\n                  <div className={classes.uploadBtn}>upload</div>\n                </label>\n              </Box>\n            </Box>\n            <Box mt={3} mb={3} className={classes.imageList}>\n              <ImageList rowHeight={160} cols={4} className={classes.images}>\n                {loading ? (\n                  <CircularProgress style={{ height: '40%', width: '40%' }} />\n                ) : (\n                  images.map((image: string, id: number) => (\n                    <ImageListItem key={image}>\n                      <img id={`${id}`} src={image} className={classes.img} />\n                      {$(`#${`${id}`}`).hasClass(classes.checked) && (\n                        <CheckCircleOutlineIcon className={classes.icon} />\n                      )}\n                    </ImageListItem>\n                  ))\n                )}\n              </ImageList>\n            </Box>\n          </Box>\n          <Box mt={3} mb={3}>\n            <Button type=\"submit\" size=\"large\" variant=\"contained\" color=\"primary\" className={classes.submit}>\n              {isSubmitting ? <CircularProgress style={{ color: 'white' }} /> : 'Create Contest'}\n            </Button>\n          </Box>\n        </form>\n      )}\n    </Formik>\n  );\n}\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(() => ({\n  header: {\n    fontWeight: 'bold',\n  },\n  paper: {\n    marginBottom: 30,\n  }\n}));\n\nexport default useStyles;","import CreateContestForm from './CreateContestForm/CreateContestForm';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { NewContest } from '../../interface/Contest';\nimport { addContest } from '../../helpers/APICalls/contest';\nimport AuthHeader from '../../components/AuthHeader/AuthHeader';\nimport { useHistory } from 'react-router-dom';\nimport { useSnackBar } from '../../context/useSnackbarContext';\nimport useStyles from './useStyles';\n\nexport default function CreateContest(): JSX.Element {\n  const classes = useStyles();\n  const history = useHistory();\n  const { updateSnackBarMessage } = useSnackBar();\n\n  const handleSubmit = ({ title, description, prizeAmount, deadlineDate, images }: NewContest) => {\n    const contest = { title, description, prizeAmount, deadlineDate, images };\n\n    addContest(contest).then((res) => {\n      if (res.error) {\n        updateSnackBarMessage(res.error.message);\n      } else {\n        updateSnackBarMessage('Sucessfully created contest');\n        history.push('/discovery');\n      }\n    });\n  };\n\n  return (\n    <>\n      <AuthHeader linkTo=\"/create-contest\" btnText=\"create contest\" />\n      <Grid container direction=\"column\" spacing={0}>\n        <Box mt={4} mb={4}>\n          <Typography align=\"center\" component=\"h1\" variant=\"h5\" className={classes.header}>\n            Create New Contest\n          </Typography>\n        </Box>\n        <Grid container justifyContent=\"center\">\n          <Grid item xs={12} md={10} elevation={6} component={Paper} className={classes.paper}>\n            <CreateContestForm handleSubmit={handleSubmit} />\n          </Grid>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  grid: {\n    width: '100%',\n    height: '100%',\n  },\n  avatar: {\n    height: '125px',\n    width: theme.spacing(17),\n    marginBottom: '16px',\n    marginTop: '50px',\n  },\n  user: {\n    fontSize: 24,\n  },\n  container: {\n    width: '100%',\n    marginTop: '15px'\n  },\n  toolbar: {\n    border: 0,\n  },\n  tabs: {\n    color: '#000000',\n    textColorPrimary: '#000000',\n    width: '100%',\n    fontWeight: 'bold',\n  },\n}));\n\nexport default useStyles;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  activity: {\n    margin: 0,\n    fontWeight: 900,\n    paddingTop: 70,\n  },\n  heading: {\n    WebkitTextStroke: 'medium',\n    marginTop: theme.spacing(8),\n    marginBottom: theme.spacing(6),\n  },\n  contentMarginsLeft: {\n    marginLeft: 15,\n  },\n  contentMarginsTop: {\n    marginTop: 10,\n    fontSize: 18,\n  },\n  root: {\n    backgroundColor: '#fafafa',\n  },\n  about: {\n    marginTop: theme.spacing(8),\n    padding: theme.spacing(3),\n    fontWeight: 'bold',\n  },\n}));\n\nexport default useStyles;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 500,\n    flexGrow: 1,\n    height: 'auto'\n  },\n  paper: {\n    margin: theme.spacing(1),\n    marginTop: theme.spacing(7),\n    width: '95%',\n    height: theme.spacing(30),\n  },\n  username: {\n    marginTop: theme.spacing(4), \n    marginLeft: theme.spacing(4), \n    fontWeight: 'bold'\n  },\n  title: {\n    fontWeight: 'bold',\n    marginTop: theme.spacing(2) \n  },\n  date:{\n    marginTop: theme.spacing(2) \n  }\n}));\n\nexport default useStyles;\n","import { useTheme } from '@material-ui/core/styles';\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport SwipeableViews from 'react-swipeable-views';\nimport { autoPlay } from 'react-swipeable-views-utils';\nimport { submissionByArtist } from '../../interface/User';\nimport moment from 'moment';\n\nconst AutoPlaySwipeableViews = autoPlay(SwipeableViews);\nimport useStyles from './useStyles';\nimport { useState } from 'react';\n\ninterface Props {\n  submission: submissionByArtist[] | null;\n}\n\nconst ArtistCarousel = ({ submission }: Props): JSX.Element => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [activeStep, setActiveStep] = useState(0);\n  const maxSteps = submission !== null && submission.length < 5 ? submission.length : 4;\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleStepChange = (step: number) => {\n    setActiveStep(step);\n  };\n\n  return (\n    <Box display=\"flex\" justifyContent=\"center\">\n      <div className={classes.root}>\n        <AutoPlaySwipeableViews\n          axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n          index={activeStep}\n          onChangeIndex={handleStepChange}\n          enableMouseEvents\n        >\n          {submission !== null && submission?.length ? (\n            submission?.map((submission, index) => (\n              <div key={submission._id}>\n                {Math.abs(activeStep - index) <= 2 ? (\n                  <Box display=\"flex\" mb={2} justifyContent=\"center\">\n                    <Paper elevation={3} className={classes.paper}>\n                      <Box\n                        display=\"flex\"\n                        mb={4}\n                        textAlign=\"center\"\n                        pt={2}\n                        justifyContent=\"center\"\n                        mt={4}\n                        flexDirection=\"column\"\n                      >\n                        <Typography className={classes.username}>Artist submitted in the contest titled</Typography>\n                        <Typography\n                          className={classes.title}\n                          variant=\"h5\"\n                        >{`\"${submission.contest.title}\"`}</Typography>\n                        <Typography className={classes.date} variant=\"body1\">\n                          {moment(submission.created_at).fromNow()}\n                        </Typography>\n                      </Box>\n                    </Paper>\n                  </Box>\n                ) : null}\n              </div>\n            ))\n          ) : (\n            <Typography style={{ marginTop: '30px', padding: '20px' }} variant=\"h5\">\n              This artist does not have any activity\n            </Typography>\n          )}\n        </AutoPlaySwipeableViews>\n        {submission?.length ? \n        <MobileStepper\n          variant=\"progress\"\n          steps={maxSteps}\n          position=\"static\"\n          activeStep={activeStep}\n          className={classes.root}\n          nextButton={\n            <Button size=\"small\" onClick={handleNext} disabled={activeStep === maxSteps - 1}>\n              Next\n              {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n            </Button>\n          }\n          backButton={\n            <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0}>\n              {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n              Back\n            </Button>\n          }\n        /> : ''}\n      </div>\n    </Box>\n  );\n};\n\nexport default ArtistCarousel;\n","import Box from '@material-ui/core/Box';\nimport { PersonalInfo } from '../../interface/PersonalInfo';\nimport Typography from '@material-ui/core/Typography';\nimport useStyles from './useStyles';\nimport EmailIcon from '@material-ui/icons/Email';\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport { submissionByArtist } from '../../interface/User';\nimport ArtistCarousel from '../ArtistCarousel/ArtistCarousel';\n\ninterface Props {\n  info: PersonalInfo | undefined;\n  submission: submissionByArtist[];\n}\n\nconst AboutArtistTab = ({ info, submission }: Props): JSX.Element => {\n  const classes = useStyles();\n  return (\n    <Box textAlign=\"center\" pb={5}>\n      <Typography className={classes.activity} variant=\"h5\">\n        Recent Activity\n      </Typography>\n      <ArtistCarousel submission={submission} />\n      {info ? (\n        <Box display=\"flex\" flexDirection=\"column\" mt={10} className={classes.root}>\n          <Typography variant=\"h3\" className={classes.heading}>\n            {info?.firstName} {info?.middleInit} {info?.lastName}\n          </Typography>\n          <Typography variant=\"body1\" className={classes.contentMarginsTop}>\n            <EmailIcon />\n            {<em className={classes.contentMarginsLeft}>{info?.email}</em>}\n          </Typography>\n          <Typography className={classes.contentMarginsTop}>\n            <PhoneIcon />\n            {<em className={classes.contentMarginsLeft}>{info?.phone}</em>}\n          </Typography>\n          <Typography className={classes.about} variant=\"h5\">\n            {info?.about}\n          </Typography>\n        </Box>\n      ) :''}\n    </Box>\n  );\n};\n\nexport default AboutArtistTab;\n","import { AuthApiData } from '../../interface/AuthApiData';\nimport { PersonalInfoProps, PersonalInfo } from '../../interface/PersonalInfo';\nimport axios from 'axios';\nimport { FetchOptions } from '../../interface/FetchOptions';\n\nexport const postPersonalInfo = async (info: PersonalInfoProps): Promise<AuthApiData> => {\n  return await axios\n    .post('/api/info', info)\n    .then((res) => res.data)\n    .catch(() => ({ error: { message: 'Failed to save personal information' } }));\n};\n\nexport const getPersonalInfo = async (id: string): Promise<PersonalInfo> => {\n  const fetchData: FetchOptions = {\n    method: 'GET',\n    headers: { 'Content-Type': 'application/json' },\n    credentials: 'include',\n  };\n\n  return await fetch(`/api/info/${id}`, fetchData)\n    .then((data) => data.json())\n    .catch(() => ({ err: { message: 'Could not get personal info' } }));\n};\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  submit: {\n    width: 100,\n    borderRadius: 5,\n    fontSize: 14,\n    margin: '15px ! important'\n  },\n  select: {\n    top: 15,\n  },\n  stars: {\n    marginTop: 30\n  }\n}));\n\nexport default useStyles;\n","import { Box, Typography, Grid, TextField, Button } from '@material-ui/core';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Review } from '../../../interface/User';\nimport useStyles from './useStyles';\nimport Rating from '@material-ui/lab/Rating';\nimport { useAuth } from '../../../context/useAuthContext';\n\ninterface Props {\n  handleSubmit: ({ rating, text }: Review) => void;\n  artistId: string;\n}\n\nexport default function ReviewTabForm({ handleSubmit, artistId }: Props): JSX.Element {\n  const { loggedInUser } = useAuth();\n  const classes = useStyles();\n\n  const INITIAL_VALUES = {\n    rating: 5,\n    text: '',\n    error: '',\n    reviewerId: { profilePic: '', username: '' },\n    _id: '',\n  };\n\n  const VALIDATION_SCHEMA = Yup.object().shape({\n    rating: Yup.number(),\n    text: Yup.string(),\n  });\n\n  return (\n    <Formik initialValues={INITIAL_VALUES} validationSchema={VALIDATION_SCHEMA} onSubmit={handleSubmit}>\n      {({ handleSubmit, handleChange, values, errors, touched }) => (\n        <form onSubmit={handleSubmit} noValidate>\n          <Box mt={3} mb={3} display=\"flex\" justifyContent=\"center\" flexDirection=\"column\" alignItems=\"center\">\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={12} md={6}>\n                <Typography>Words</Typography>\n                <TextField\n                  id=\"text\"\n                  name=\"text\"\n                  fullWidth\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  placeholder=\"This artist is awesome\"\n                  helperText={touched.text ? errors.text : ''}\n                  error={touched.text && Boolean(errors.text)}\n                  value={values.text}\n                  onChange={handleChange}\n                />\n              </Grid>\n              <Grid item xs={12} sm={12} md={6}>\n                <Typography>Rating</Typography>\n                <Rating\n                  id=\"rating\"\n                  name=\"rating\"\n                  value={values.rating}\n                  size=\"large\"\n                  className={classes.stars}\n                  onChange={handleChange}\n                />\n              </Grid>\n            </Grid>\n            <Box textAlign=\"center\" marginTop=\"20px\">\n              {loggedInUser?.id === artistId ? (\n                <Button className={classes.submit} type=\"submit\" variant=\"contained\" color=\"primary\" disabled>\n                  Save\n                </Button>\n              ) : (\n                <Button className={classes.submit} type=\"submit\" variant=\"contained\" color=\"primary\">\n                  Save\n                </Button>\n              )}\n            </Box>\n          </Box>\n        </form>\n      )}\n    </Formik>\n  );\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  activity: {\n    margin: 0,\n    fontWeight: 900,\n    paddingTop: 70,\n  },\n  avatar: {\n    height: theme.spacing(6),\n    width: theme.spacing(5),\n  },\n  paper: {\n    display: 'flex',\n    width: '50%',\n    background: '#fafafa',\n    marginTop: 15,\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  formPaper: {\n    marginTop: '120px',\n    backgroundColor: '#fafafa',\n  },\n  readAll: {\n    marginTop: '100px',\n  },\n  username: {\n    marginTop: '10px',\n    marginLeft: '5px',\n    fontWeight: 'bold',\n  },\n}));\n\nexport default useStyles;\n","import { Box, Typography, Grid, Paper } from '@material-ui/core';\nimport ReviewTabForm from './ReviewTabForm/ReviewTabForm';\nimport { Review } from '../../interface/User';\nimport useStyles from './useStyles';\nimport ReviewCarousel from '../ReviewCarousel/ReviewCarousel';\nimport Switch from '@material-ui/core/Switch';\nimport { ChangeEvent, useState } from 'react';\nimport { useSnackBar } from '../../context/useSnackbarContext';\nimport { createReviews, getReviews } from '../../helpers/APICalls/review';\nimport { useEffect } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Rating from '@material-ui/lab/Rating';\n\ntype Props = {\n  artistId: string;\n};\n\nexport default function ReviewTab({ artistId }: Props): JSX.Element {\n  const classes = useStyles();\n  const [checked, setChecked] = useState(false);\n  const { updateSnackBarMessage } = useSnackBar();\n  const [reviews, setReviews] = useState<Review[]>([]);\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setChecked(event.target.checked);\n  };\n  const handleSubmit = async ({ rating, text }: Review) => {\n    const review = {\n      artistId,\n      rating,\n      text,\n    };\n    const result = await createReviews(review);\n    if (result.error) {\n      updateSnackBarMessage(result.error);\n    } else {\n      updateSnackBarMessage('Review submitted successfully');\n      const updatedRev = reviews ? [...reviews, result] : [result];\n      setReviews(updatedRev);\n    }\n  };\n\n  useEffect(() => {\n    async function getReviewsForArtist() {\n      const reviews = await getReviews(artistId);\n      if (reviews !== null) {\n        setReviews(reviews);\n      } else {\n        new Error('Could Not Get Artist Info');\n      }\n    }\n    getReviewsForArtist();\n  }, [artistId]);\n\n  return (\n    <Box textAlign=\"center\" pb={5}>\n      <Typography className={classes.activity} variant=\"h5\">\n        Recent Reviews\n      </Typography>\n      <ReviewCarousel reviews={reviews} />\n      <Paper className={classes.formPaper}>\n        <Box mt={1} mb={1} pt={5}>\n          <Typography align=\"center\" component=\"h1\" variant=\"h5\">\n            Submit your review\n          </Typography>\n        </Box>\n        <Grid container justifyContent=\"center\">\n          <Grid item xs={12} md={10}>\n            <ReviewTabForm handleSubmit={handleSubmit} artistId={artistId}/>\n          </Grid>\n        </Grid>\n      </Paper>\n      <Typography align=\"center\" variant=\"subtitle1\" className={classes.readAll}>\n        Read all\n      </Typography>\n      <Switch checked={checked} onChange={handleChange} inputProps={{ 'aria-label': 'controlled' }} />\n      {checked === true ? (\n        reviews.length ? (\n          reviews.map((review) => (\n            <Box key={review._id} display=\"flex\" justifyContent=\"center\">\n              <Paper className={classes.paper}>\n                <Box display=\"flex\" mb={2} textAlign=\"center\" pt={2}>\n                  <Avatar alt=\"Profile Image\" src={review.reviewerId.profilePic} className={classes.avatar}></Avatar>\n                  <Typography className={classes.username}>@{review.reviewerId.username}</Typography>\n                </Box>\n                <Box display=\"flex\" mb={2} textAlign=\"center\">\n                  <Rating value={review.rating} size=\"large\" name=\"read-only\" readOnly />\n                </Box>\n                <Box display=\"flex\" mb={2}>\n                  <Typography className={classes.username}>{review.text}</Typography>\n                </Box>\n              </Paper>\n            </Box>\n          ))\n        ) : (\n          <Typography style={{ marginTop: '30px', padding: '20px' }} variant=\"h4\">\n            This artist does not have any review\n          </Typography>\n        )\n      ) : (\n        ''\n      )}\n    </Box>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { useAuth } from '../../context/useAuthContext';\nimport useStyles from './useStyles';\nimport Grid from '@material-ui/core/Grid';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\nimport Container from '@material-ui/core/Container';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { createTheme, ThemeProvider } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport AuthHeader from '../../components/AuthHeader/AuthHeader';\nimport AboutArtistTab from '../../components/AboutArtistTab/AboutArtistTab';\nimport { PersonalInfo } from '../../interface/PersonalInfo';\nimport { getPersonalInfo } from '../../helpers/APICalls/personalInfo';\nimport { submissionByArtist } from '../../interface/User';\nimport { getartistSubmission } from '../../helpers/APICalls/submission';\nimport { withStyles } from '@material-ui/core/styles';\nimport ReviewTab from '../../components/ReviewTab/ReviewTab';\n\nconst GlobalCss = withStyles({\n  // @global is handled by jss-plugin-global.\n  '@global': {\n    // You should target [class*=\"MuiButton-root\"] instead if you nest themes.\n    '.MuiToolbar-root': {\n      padding: 0,\n    },\n    '.MuiToolbar-regular': {\n      minHeight: 0,\n    },\n  },\n})(() => null);\n\n//Pass 'artistId' through the react-router Link , when calling this component\nexport default function AboutArtist(props: { location: { state: string } }): JSX.Element {\n  const id = props.location.state;\n  const classes = useStyles();\n  const [value, setValue] = useState(0);\n  const [info, setInfo] = useState<PersonalInfo>();\n  const [submission, setSubmission] = useState<submissionByArtist[]>([]);\n  const { loggedInUser } = useAuth();\n\n  const newTheme = createTheme({\n    palette: {\n      primary: {\n        main: '#000000',\n      },\n      secondary: {\n        main: '#3d3d3d',\n      },\n    },\n  });\n\n  interface TabPanelProps {\n    direction?: string;\n    value: number;\n    children: React.ReactNode;\n    index: number;\n  }\n\n  useEffect(() => {\n    async function getInfo() {\n      const artistInfo = await getPersonalInfo(id);\n      const artistSubmission = await getartistSubmission(id);\n      if (artistInfo !== null) {\n        setInfo(artistInfo);\n      } else {\n        new Error('Could Not Get Artist Info');\n      }\n      if (artistSubmission !== null) {\n        setSubmission(artistSubmission);\n      } else {\n        new Error('Could Not Get Artist Submssions');\n      }\n    }\n    getInfo();\n  }, [id]);\n\n  const handleChange = (event: React.ChangeEvent<Record<string, unknown>>, valueChange: number) => {\n    setValue(valueChange);\n  };\n\n  const Panel = function (props: TabPanelProps) {\n    return (\n      <div role=\"tabpanel\" id={`${props.index}`}>\n        {value === props.index && (\n          <Container>\n            <Typography>{props.children}</Typography>\n          </Container>\n        )}\n      </div>\n    );\n  };\n\n  return loggedInUser ? (\n    <>\n      <GlobalCss />\n      <AuthHeader linkTo=\"/create-contest\" btnText=\"create contest\" />\n      <Grid className={classes.grid} container alignItems=\"center\" direction=\"column\">\n        <Avatar alt=\"Profile Image\" src={info?.userId.profilePic} className={classes.avatar}></Avatar>\n        <Typography className={classes.user}>{`${info ? info.firstName : ''} ${info ? info.lastName : ''}`}</Typography>\n        <Container className={classes.container}>\n          <Toolbar className={classes.toolbar}>\n            <ThemeProvider theme={newTheme}>\n              <Tabs\n                className={classes.tabs}\n                value={value}\n                onChange={handleChange}\n                textColor=\"primary\"\n                variant=\"fullWidth\"\n              >\n                <Tab label=\"ABOUT ARTIST\" />\n                <Tab label=\"REVIEWS\" />\n              </Tabs>\n            </ThemeProvider>\n          </Toolbar>\n          <Paper square elevation={2} style={{ marginBottom: '10px' }}>\n            <Panel value={value} index={0}>\n              <AboutArtistTab info={info} submission={submission} />\n            </Panel>\n            <Panel value={value} index={1}>\n              <ReviewTab artistId={id} />\n            </Panel>\n          </Paper>\n        </Container>\n      </Grid>\n    </>\n  ) : (\n    <CircularProgress />\n  );\n}\n","import { FetchOptions } from '../../interface/FetchOptions';\nimport { AuthApiCustomerData } from '../../interface/AuthApiData';\nimport { User } from '../../interface/User';\n\nexport const createStripeUser = async (email: string, name: string): Promise<AuthApiCustomerData> => {\n    const fetchOptions: FetchOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ email, name }),\n        credentials: 'include',\n    };\n    return await fetch(`/api/stripe/`, fetchOptions)\n        .then((res) => res.json())\n        .catch(() => ({\n            error: { message: 'Unable to connect to server. Please try again' },\n    }));\n};\n\nexport const retrieveStripeUser = async (id: string): Promise<AuthApiCustomerData> => {\n    const fetchOptions: FetchOptions = {\n        method: 'GET',\n        headers: { 'Content-Type': 'application/json' },\n        credentials: 'include',\n    };\n    return await fetch(`/api/stripe/${id}`, fetchOptions)\n        .then((res) => res.json())\n        .catch(() => ({\n        error: { message: 'Unable to connect to server. Please try again' },\n    }));\n};\n\nexport const setUpIntents = async (id: string): Promise<AuthApiCustomerData> => {\n    const fetchOptions: FetchOptions = {\n        method: 'GET',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ id }),\n        credentials: 'include',\n    };\n    return await fetch(`/api/stripe/setup`, fetchOptions)\n        .then((res) => res.json())\n        .catch(() => ({\n        error: { message: 'Unable to connect to server. Please try again' },\n    }));\n};\n\nexport const createPaymentMethod = async (type: string, card: Record<string, unknown>): Promise<AuthApiCustomerData> => {\n    const fetchOptions: FetchOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ type, card }),\n        credentials: 'include',\n    };\n    return await fetch(`/api/stripe/payment`, fetchOptions)\n        .then((res) => res.json())\n        .catch(() => ({\n            error: { message: 'Unable to connect to server. Please try again' },\n    }));\n};\n\nexport const createPaymentSession = async (priceId: string): Promise<AuthApiCustomerData> => {\n    const fetchOptions: FetchOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ priceId}),\n        credentials: 'include',\n    };\n    return await fetch(`/api/stripe/session`, fetchOptions)\n        .then((res) => res.json())\n        .catch(() => ({\n            error: { message: 'Unable to connect to server. Please try again' },\n    }));\n};\n\nexport const createCharge = async (customerId: string): Promise<AuthApiCustomerData> => {\n    const fetchOptions: FetchOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ customerId }),\n        credentials: 'include',\n    };\n    return await fetch(`/api/stripe/charge`, fetchOptions)\n        .then((res) => res.json())\n        .catch(() => ({\n            error: { message: 'Unable to connect to server. Please try again' },\n    }));\n};\n\nexport const addCardToCustomer = async (cardId: string,  stripeId: string): Promise<AuthApiCustomerData> => {\n    const fetchOptions: FetchOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({cardId, stripeId}),\n        credentials: 'include',\n    };\n    return await fetch(`/api/stripe/stripeToken`, fetchOptions)\n        .then((res) => res.json())\n        .catch(() => ({\n            error: { message: 'Unable to connect to Stripe. Please try again' },\n    }));\n};\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    height: '800px',\n    width: '100%',\n  },\n  formGrid: {\n    height: '100%',\n    width: '100%',\n  },\n  paper: {\n    height: '400px',\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  typography: {\n    fontWeight: 'bold',\n    fontSize: '16px',\n    padding: '20px 0',\n  },\n  cardNum: {\n    padding: '10px',\n    marginBottom: '20px',\n    border: '1px solid #000000',\n    borderRadius: '5px',\n    maxWidth: 500,\n  },\n  cardExpiry: {\n    width: '150px',\n    border: '1px solid #000000',\n    marginRight: '20px',\n    padding: '10px',\n    borderRadius: '5px',\n  },\n  cardCvc: {\n    width: '110px',\n    border: '1px solid #000000',\n    padding: '10px',\n    borderRadius: '5px',\n  },\n  button: {\n    color: '#000000',\n    margin: '40px 20px',\n    border: '1px solid #000000',\n    borderRadius: 0,\n    '&:hover': {\n      backgroundColor: 'black',\n      color: 'white',\n    },\n    width: '15rem',\n    [theme.breakpoints.down('xs')]: {\n      width: '10rem',\n    },\n    height: '6rem',\n    fontSize: '15px',\n  },\n}));\n\nexport default useStyles;\n","import { useState, useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport { useStripe, useElements, CardNumberElement, CardExpiryElement, CardCvcElement } from '@stripe/react-stripe-js';\nimport { addCardToCustomer } from '../../helpers/APICalls/stripe';\nimport { useAuth } from '../../context/useAuthContext';\nimport { useSnackBar } from '../../context/useSnackbarContext';\nimport useStyles from './useStyles';\n\nexport default function Payment(): JSX.Element {\n  const stripe = useStripe();\n  const elements = useElements();\n  const classes = useStyles();\n  const { loggedInUser } = useAuth();\n  const { updateSnackBarMessage } = useSnackBar();\n\n  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!stripe || !elements) {\n      return;\n    }\n\n    const cardElement = elements.getElement(CardNumberElement);\n\n    if (loggedInUser && cardElement) {\n      stripe\n        .createPaymentMethod({\n          type: 'card',\n          card: cardElement,\n          billing_details: {\n            name: loggedInUser.username,\n          },\n        })\n        .then((result) => {\n          if (result.paymentMethod) {\n            const cardId = result.paymentMethod.id;\n            const stripeId = loggedInUser.stripeId;\n            addCardToCustomer(cardId, stripeId);\n            updateSnackBarMessage('Card has been added to your account.');\n          } else {\n            updateSnackBarMessage('Card could not be added');\n          }\n        });\n    }\n  };\n\n  return (\n    <>\n      <Grid container justifyContent=\"center\">\n        <form className={classes.form} onSubmit={handleSubmit}>\n          <Grid container className={classes.formGrid}>\n            <Box className={classes.paper}>\n              <Container className={classes.container}>\n                <Typography className={classes.typography}>Enter your card details:</Typography>\n                <Box maxWidth=\"100%\">\n                  <CardNumberElement\n                    className={classes.cardNum}\n                    id=\"outlined-basic\"\n                    options={{\n                      iconStyle: 'solid',\n                      style: {\n                        base: {\n                          color: 'black',\n                          fontSize: '16px',\n                          iconColor: '#fff',\n                        },\n                        invalid: {\n                          iconColor: 'red',\n                          color: 'red',\n                        },\n                        complete: {\n                          iconColor: '#cbf4c9',\n                        },\n                      },\n                    }}\n                  />\n                  <Box display=\"flex\" flex-direction=\"row\">\n                    <CardExpiryElement className={classes.cardExpiry} id=\"outlined-basic\"></CardExpiryElement>\n                    <CardCvcElement className={classes.cardCvc} id=\"outlined-basic\"></CardCvcElement>\n                  </Box>\n                </Box>\n              </Container>\n              <Button type=\"submit\" className={classes.button}>\n                Add Card\n              </Button>\n            </Box>\n          </Grid>\n        </form>\n      </Grid>\n    </>\n  );\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  submit: {\n    color: 'white',\n    backgroundColor: 'black',\n    '&:hover': {\n      backgroundColor: 'white',\n      color: 'black',\n    },\n    border: '1px solid black',\n    padding: 10,\n    width: '10vw',\n    borderRadius: 0,\n  },\n  select: {\n    top: 15,\n  },\n}));\n\nexport default useStyles;\n","import { Box, Typography, Grid, TextField, Select, MenuItem, Button } from '@material-ui/core';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { PersonalInfoProps } from '../../../interface/PersonalInfo';\nimport useStyles from './useStyles';\n\ninterface Props {\n  handleSubmit: ({\n    firstName,\n    middleInit,\n    lastName,\n    email,\n    phone,\n    dateOfBirth,\n    gender,\n    about,\n  }: PersonalInfoProps) => void;\n};\n\nexport default function PersonalInfo({ handleSubmit }: Props): JSX.Element {\n  const classes = useStyles();\n\n  const INITIAL_VALUES = {\n    firstName: '',\n    middleInit: '',\n    lastName: '',\n    email: '',\n    phone: 0,\n    dateOfBirth: '',\n    gender: '',\n    about: '',\n  };\n\n  const VALIDATION_SCHEMA = Yup.object().shape({\n    firstName: Yup.string(),\n    middleInit: Yup.string()\n      .max(1, 'Middle initial is too long'),\n    lastName: Yup.string(),\n    email: Yup.string()\n      .email('Invalid email'),\n    phone: Yup.string()\n      .matches(/^([0-9]{10}|0)$/, 'Invalid phone number'),\n    dateOfBirth: Yup.string(),\n    gender: Yup.string(),\n    about: Yup.string(),\n  });\n\n  return (\n    <Formik\n    initialValues={INITIAL_VALUES}\n    validationSchema={VALIDATION_SCHEMA}\n    onSubmit={handleSubmit}>\n      {({ handleSubmit, handleChange, values, errors, touched }) => (\n        <form onSubmit={handleSubmit} noValidate>\n          <Box mt={3} mb={3}>\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={5}>\n                <Box>\n                  <Typography>First Name</Typography>\n                  <TextField\n                    id=\"firstName\"\n                    name=\"firstName\"\n                    fullWidth\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    placeholder=\"John\"\n                    helperText={touched.firstName ? errors.firstName : ''}\n                    error={touched.firstName && Boolean(errors.firstName)}\n                    value={values.firstName}\n                    onChange={handleChange}/>\n                </Box>\n              </Grid>\n              <Grid item xs={12} sm={2}>\n                <Box>\n                  <Typography>MI</Typography>\n                  <TextField\n                  id=\"middleInit\"\n                  name=\"middleInit\"\n                  fullWidth\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  placeholder=\"T\"\n                  helperText={touched.middleInit ? errors.middleInit : ''}\n                  error={touched.middleInit && Boolean(errors.middleInit)}\n                  value={values.middleInit}\n                  onChange={handleChange}/>\n                </Box>\n              </Grid>\n              <Grid item xs={12} sm={5}>\n                <Box>\n                  <Typography>Last Name</Typography>\n                  <TextField\n                  id=\"lastName\"\n                  name=\"lastName\"\n                  fullWidth\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  placeholder=\"Doe\"\n                  helperText={touched.lastName ? errors.lastName : ''}\n                  error={touched.lastName && Boolean(errors.lastName)}\n                  value={values.lastName}\n                  onChange={handleChange}/>\n                </Box>\n              </Grid>\n            </Grid>\n            <Grid container spacing={2}>\n              <Grid item xs={6}>\n                <Box>\n                  <Typography>Email</Typography>\n                  <TextField\n                  id=\"email\"\n                  name=\"email\"\n                  fullWidth\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  placeholder=\"johndoe@gmail.com\"\n                  helperText={touched.email ? errors.email : ''}\n                  error={touched.email && Boolean(errors.email)}\n                  value={values.email}\n                  onChange={handleChange}/>\n                </Box>\n              </Grid>\n              <Grid item xs={6}>\n                <Box>\n                  <Typography>Phone Number</Typography>\n                  <TextField\n                  id=\"phone\"\n                  name=\"phone\"\n                  fullWidth\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  placeholder=\"(123) 456-7890\"\n                  helperText={touched.phone ? errors.phone : ''}\n                  error={touched.phone && Boolean(errors.phone)}\n                  value={values.phone ? values.phone : ''}\n                  onChange={handleChange}/>\n                </Box>\n              </Grid>\n            </Grid>\n            <Grid container spacing={2}>\n              <Grid item xs={6}>\n                <Box>\n                  <Typography>Date of Birth</Typography>\n                  <TextField\n                  id=\"dateOfBirth\"\n                  name=\"dateOfBirth\"\n                  type=\"date\"\n                  fullWidth\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  value={values.dateOfBirth}\n                  onChange={handleChange}/>\n                </Box>\n              </Grid>\n              <Grid item xs={6}>\n                <Box>\n                  <Typography>Gender</Typography>\n                  <Select\n                  id=\"gender\"\n                  name=\"gender\"\n                  fullWidth\n                  variant=\"outlined\"\n                  value={values.gender}\n                  className={classes.select}\n                  onChange={handleChange}>\n                    <MenuItem value=\"Male\">Male</MenuItem>\n                    <MenuItem value=\"Female\">Female</MenuItem>\n                  </Select>\n                </Box>\n              </Grid>\n              <Grid item xs={12} sm={12}>\n                <Typography>About me</Typography>\n                <TextField\n                id=\"about\"\n                name=\"about\"\n                fullWidth\n                multiline\n                margin=\"normal\"\n                variant=\"outlined\"\n                placeholder=\"Something about you...\"\n                rows={5}\n                helperText={touched.about ? errors.about : ''}\n                error={touched.about && Boolean(errors.about)}\n                value={values.about ? values.about : ''}\n                onChange={handleChange}/>\n              </Grid>\n            </Grid>\n            <Box textAlign=\"center\">\n              <Button\n              className={classes.submit}\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\">\n                Save\n              </Button>\n            </Box>\n          </Box>\n        </form>\n      )}\n    </Formik>\n  );\n};\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    maxwidth: '70vw',\n    width: '50vw',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  }\n}));\n\nexport default useStyles;\n","import { Box, Typography, Grid } from '@material-ui/core';\nimport PersonalInfoForm from './PersonalInfoForm/PersonalInfoForm';\nimport { PersonalInfoProps } from '../../interface/PersonalInfo';\nimport { postPersonalInfo } from '../../helpers/APICalls/personalInfo';\nimport useStyles from './useStyles';\n\nexport default function PersonalInfo(): JSX.Element {\n  const classes = useStyles();\n\n  const handleSubmit = ({\n    firstName,\n    middleInit,\n    lastName,\n    email,\n    phone,\n    dateOfBirth,\n    gender,\n    about,\n  }: PersonalInfoProps) => {\n    const info = {\n      firstName, middleInit, lastName, email, phone, dateOfBirth, gender, about,\n    };\n\n    postPersonalInfo(info);\n  };\n\n  return (\n    <Grid container direction=\"column\" className={classes.root}>\n      <Box mt={2} mb={2}>\n        <Typography align=\"center\" component=\"h1\" variant=\"h5\">\n          Personal Information\n        </Typography>\n      </Box>\n      <Grid container justifyContent=\"center\">\n        <Grid item xs={12} md={10}>\n            <PersonalInfoForm handleSubmit={handleSubmit}/>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  fields: {\n    width: '100%'\n  },\n}));\n\nexport default useStyles;\n","import { Box, Typography, Button, TextField, CircularProgress } from '@material-ui/core';\nimport useStyles from './useStyles';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\n\ninterface Props {\n  handleSubmit: (\n    {\n      password, confirmPassword\n    } :\n    {\n      password: string;\n      confirmPassword: string;\n    }\n  ) => void;\n}\n\nexport default function ChangePasswordForm({ handleSubmit }: Props): JSX.Element {\n  const classes = useStyles();\n\n  return (\n    <Formik\n    initialValues={{\n      password: '',\n      confirmPassword: '',\n    }}\n    validationSchema={Yup.object().shape({\n      password: Yup.string()\n        .required('Password is required')\n        .max(100, 'Password is too long')\n        .min(6, 'Password too short'),\n      confirmPassword: Yup.string().when(\"password\", {\n        is: (val: string) => (val && val.length > 0 ? true : false),\n        then: Yup.string().oneOf(\n          [Yup.ref(\"password\")],\n          \"Password does not match!\"\n        )\n      })\n    })}\n    onSubmit={handleSubmit}>\n      {({ handleSubmit, handleChange, values, touched, errors, isSubmitting }) => (\n        <form onSubmit={handleSubmit} noValidate>\n          <Box mt={3}>\n            <Typography>Password</Typography>\n            <TextField\n              id=\"password\"\n              name=\"password\"\n              type=\"password\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              placeholder=\"Password\"\n              className={classes.fields}\n              helperText={touched.password ? errors.password : ''}\n              error={touched.password && Boolean(errors.password)}\n              value={values.password}\n              onChange={handleChange}\n            />\n          </Box>\n          <Box mt={3} mb={3}>\n            <Typography>Confirm Password</Typography>\n            <TextField\n              id=\"confirmPassword\"\n              name=\"confirmPassword\"\n              type=\"password\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              placeholder=\"Confirm Password\"\n              className={classes.fields}\n              helperText={touched.confirmPassword ? errors.confirmPassword : ''}\n              error={touched.confirmPassword && Boolean(errors.confirmPassword)}\n              value={values.confirmPassword}\n              onChange={handleChange}/>\n          </Box>\n          <Box mb={3}>\n            <Button type=\"submit\" size=\"large\" variant=\"contained\" color=\"primary\" className={classes.fields}>\n              {isSubmitting ? <CircularProgress style={{ color: 'white' }} /> : 'Update Password'}\n            </Button>\n          </Box>\n        </form>\n      )}\n    </Formik>\n  );\n};\n","import { AuthApiData } from '../../interface/AuthApiData';\nimport axios from 'axios';\n\nexport const forgotPassword = async (email: string): Promise<AuthApiData> => {\n  return axios.post('/api/reset', { email: email })\n    .then((res) => res.data)\n    .catch(() => ({error: {message: 'Cannot reach email'}}));\n};\n\nexport const resetPassword = async(password: string, token: string, id: string): Promise<AuthApiData> => {\n  return axios.patch(`/api/reset/update-password/${id}`, { password: password, token: token })\n    .then((res) => res.data)\n    .catch(() => ({error: {message: 'Unable to reset password'}}));\n};\n\nexport const changePassword = async(password: string): Promise<AuthApiData> => {\n  return axios.patch('/api/reset/change-password', { password: password })\n    .then((res) => res.data)\n    .catch(() => ({error: {message: 'Unable to change password'}}));\n};\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  container: {\n    maxwidth: '70vw',\n    width: '50vw',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  },\n  form: {\n    padding: 10,\n  },\n}));\n\nexport default useStyles;\n","import { useState } from 'react';\nimport { Box, Typography, Paper } from '@material-ui/core';\nimport PasswordForm from './PasswordForm/PasswordForm';\nimport { changePassword } from '../../helpers/APICalls/password';\nimport useStyles from './useStyles';\n\nexport default function Password(): JSX.Element {\n  const [hasSubmitted, setHasSubmitted] = useState<boolean>(false);\n  const [error, setError] = useState<string>();\n  const classes = useStyles();\n\n  const handleSubmit = (\n    { password } : { password: string }\n  ) => {\n    changePassword(password)\n      .then((res) => {\n        if (res.error) {\n          setError(res.error.message);\n        } else {\n          setError('');\n        }\n      });\n    setHasSubmitted(prev => !prev);\n  };\n\n  return (\n    <Box className={classes.container}>\n      <Box>\n        <Typography align=\"center\" component=\"h1\" variant=\"h5\">\n          Change Password\n        </Typography>\n      </Box>\n      <Box mt={3} mb={3} boxShadow={4} component={Paper} className={classes.form}>\n        {\n          hasSubmitted && !error\n          ? <Box>\n              <Typography align=\"center\">\n                Your password has be updated!\n              </Typography>\n            </Box>\n          : error\n          ? <Typography align=\"center\">{error}</Typography>\n          : <PasswordForm handleSubmit={handleSubmit}/>\n        }\n      </Box>\n    </Box>\n  );\n};\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  typography: {\n    padding: theme.spacing(2),\n    fontSize: 15,\n    fontWeight: 'bold',\n    paddingBottom: '0',\n  },\n  poptitle: {\n    margin: 20,\n    fontSize: 25,\n    '-webkit-text-stroke': 'medium',\n  },\n  time: {\n    marginLeft: 15,\n    marginBottom: 20,\n  },\n  avatar: {\n    height: 45,\n    width: theme.spacing(6),\n    marginTop: 15,\n    marginLeft: 15,\n  },\n  seeAll: {\n    marginLeft: 70,\n    marginTop: 50,\n    fontSize: 15,\n  },\n  paper: {\n    marginTop: '5%',\n    overflowY: 'hidden',\n    width: '65%',\n    [theme.breakpoints.down('sm')]: {\n      width: '100%',\n      marginLeft: '5%',\n      marginRight: '5%',\n    },\n    [theme.breakpoints.only('xl')]: {\n      width: '40%',\n      marginLeft: '2%',\n      marginRight: '5%',\n    },\n  },\n  delete: {\n    padding: 9,\n    border: 'none',\n    fontSize: 12,\n    marginTop: '17px',\n    color: '#fff',\n    backgroundColor: 'black',\n    '&:hover': {\n      color: '#fff',\n      backgroundColor: 'black',\n    },\n  },\n  notificationContainer: {\n    '&:hover': {\n      backgroundColor: '#fafafa',\n      color: 'black',\n    },\n  },\n  link: {\n    textDecoration: 'none',\n    color: 'black',\n  },\n}));\n\nexport default useStyles;\n","import { useContext } from 'react';\nimport { deleteNotification } from '../../helpers/APICalls/notification';\nimport useStyles from './useStyles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Avatar from '@material-ui/core/Avatar';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport AuthHeader from '../../components/AuthHeader/AuthHeader';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { useAuth } from '../../context/useAuthContext';\nimport { useSnackBar } from '../../context/useSnackbarContext';\nimport { NotificationContext } from '../../context/notificationContext';\nimport { Link, useHistory } from 'react-router-dom';\n\ninterface NotificationProps {\n  header: boolean;\n}\n\nexport default function Notifications({ header }: NotificationProps): JSX.Element {\n  const history = useHistory();\n  header === undefined ? (header = true) : header;\n  const notifications = useContext(NotificationContext).notifications;\n  const setNotifications = useContext(NotificationContext).setNotifications;\n  const { loggedInUser } = useAuth();\n  const classes = useStyles();\n  const { updateSnackBarMessage } = useSnackBar();\n\n  const handleDelete = async (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n    const target = event.target as HTMLButtonElement;\n    const response = await deleteNotification(target.value);\n    if (response === 204) {\n      updateSnackBarMessage('Notification deleted successfully');\n      const filteredNotifications = notifications && notifications.filter((item) => item._id !== target.value);\n      setNotifications(filteredNotifications);\n    } else {\n      updateSnackBarMessage('Error deleting notification, trying again later');\n    }\n    header === true ? history.push('/notifications') : history.push('/settings');\n  };\n\n  const hoursCalculator = (createdAt: string): string => {\n    const createdDate = new Date(createdAt);\n    const diffTime = Math.abs(createdDate.valueOf() - new Date().valueOf());\n\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n    const diffHours = Math.ceil(diffTime / (1000 * 60 * 60));\n    const diffMinutes = Math.ceil(diffTime / (1000 * 60));\n    const diffSeconds = Math.ceil(diffTime / 1000);\n\n    return diffSeconds <= 1 && diffMinutes <= 1 && diffHours <= 1 && diffDays <= 1\n      ? `1 second ago`\n      : diffSeconds > 1 && diffMinutes <= 1 && diffHours <= 1 && diffDays <= 1\n      ? `${diffSeconds} seconds ago`\n      : diffSeconds >= 60 && diffMinutes <= 2 && diffHours <= 1 && diffDays <= 1\n      ? `1 minute ago`\n      : diffMinutes > 1 && diffHours <= 1 && diffDays <= 1\n      ? `${diffMinutes} minutes ago`\n      : diffHours <= 2 && diffDays <= 1 && diffMinutes >= 60\n      ? `1 hour ago`\n      : diffHours > 1 && diffDays <= 1\n      ? `${diffHours} hours ago`\n      : diffHours >= 24 && diffDays <= 2\n      ? `1 day ago`\n      : `${diffDays} days ago`;\n  };\n\n  return loggedInUser ? (\n    <>\n      <CssBaseline />\n      {header ? <AuthHeader linkTo={`/create-contest`} btnText=\"CREATE CONTEST\" /> : ''}\n      <Box display=\"flex\" justifyContent=\"center\">\n        <Paper className={classes.paper} elevation={2}>\n          <Grid direction=\"row\" container>\n            <Grid item>\n              <Typography variant=\"h5\" className={classes.poptitle}>\n                Notifications\n              </Typography>\n            </Grid>\n          </Grid>\n          {notifications?.length ? (\n            notifications?.map((notification) => (\n              <Link\n                to={notification.contestId ? `/contest/${notification.contestId}` : `/dashboard`}\n                key={notification._id}\n                className={classes.link}\n              >\n                <Grid direction=\"row\" container className={classes.notificationContainer}>\n                  <Grid item xs={12} sm={3} md={2}>\n                    <Avatar alt=\"Profile Image\" src={notification.profilePic} className={classes.avatar}></Avatar>\n                  </Grid>\n                  <Grid item xs={12} sm={7} md={7}>\n                    <Typography className={classes.typography} key={notification._id}>\n                      {notification.notification}\n                    </Typography>\n                    <Typography key={notification.notification} className={classes.time}>\n                      {hoursCalculator(notification.createdAt)}\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={12} sm={1} md={1}>\n                    <button className={classes.delete} onClick={handleDelete} value={notification._id}>\n                      Delete\n                    </button>\n                  </Grid>\n                </Grid>\n              </Link>\n            ))\n          ) : (\n            <Typography align=\"center\">{`You do not have any notification`}</Typography>\n          )}\n        </Paper>\n      </Box>\n    </>\n  ) : (\n    <CircularProgress />\n  );\n}\n","import { makeStyles, Theme } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexGrow: 1,\n    overflow: 'hidden',\n    [theme.breakpoints.down('xs')]: {\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n  },\n  tabs: {\n    backgroundColor: theme.palette.background.paper,\n    width: '20vw',\n    minWidth: '150px',\n    maxWidth: '100vw',\n    [theme.breakpoints.down('xs')]: {\n      width: '50vw',\n    },\n    height: '100%',\n    borderRight: `1px solid ${theme.palette.divider}`,\n    boxShadow: '3px 0 5px -2px #DDDDDD',\n    paddingTop: 20,\n    '& .MuiTab-wrapper': {\n      flexDirection: 'row',\n      justifyContent: 'flex-start',\n    },\n  },\n  label: {\n    fontSize: '14px',\n    left: '20%',\n  },\n  indicator: {\n    left: '10%',\n    transform: 'rotate(90deg)',\n  },\n  paymentDetails: {\n    fontSize: '35px',\n    fontWeight: 'bold',\n    textAlign: 'center',\n    padding: '20px 0 30px 0',\n  },\n  tabPanel: {\n    width: '80%',\n  },\n  drawer: {\n    width: '50vw',\n  },\n  expandBtn: {\n    '&:hover': {\n      backgroundColor: 'white',\n      color: 'black',\n      border: '1px solid black',\n    },\n    width: '80vw',\n    height: 40,\n    borderRadius: 0,\n    margin: '5px 0',\n    border: '1px solid white',\n  },\n}));\n\nexport default useStyles;\n","import { useState, Fragment } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport AuthHeader from '../../components/AuthHeader/AuthHeader';\nimport { Box, Typography, Tabs, Tab, Button, Hidden, Drawer } from '@material-ui/core';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { Elements } from '@stripe/react-stripe-js';\nimport TourContent from '../../components/TourContent/TourContent';\nimport Payment from '../../components/Payment/Payment';\nimport PersonalInfo from '../../components/PersonalInfo/PersonalInfo';\nimport Password from '../../components/Password/Password';\nimport Profile from '../Profile/Profile';\nimport Notifications from '../Notifications/Notifications';\nimport useStyles from './useStyles';\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: number;\n  value: number;\n}\nconst stripeKey = loadStripe(\n  'pk_test_51JEJJrK3QVx74yV9vYujCrOpA8KwLKEE7uKSjHmUO0GGxUYSa5uxMlgaCZAbflwU9U0Npb2k4a86JEJBGmuBOfbw00CU3LpL8W',\n);\n\nfunction TabPanel(props: TabPanelProps) {\n  const classes = useStyles();\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`tabpanel-${index}`}\n      aria-labelledby={`tab-${index}`}\n      {...other}\n      className={classes.tabPanel}\n      data-tour={value === 3 ? 'payment' : ''}\n    >\n      {value === index && (\n        <Box p={2}>\n          <Box>{children}</Box>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nfunction tabProps(index: number) {\n  return {\n    id: `tab-${index}`,\n    'aria-controls': `tabpanel-${index}`,\n  };\n}\n\nexport default function Settings(): JSX.Element {\n  const [value, setValue] = useState<number>(0);\n  const [expanded, setExpanded] = useState<boolean>(false);\n  const classes = useStyles();\n  const history = useHistory();\n\n  const steps = [\n    {\n      selector: '[data-tour=\"settings\"]',\n      content: {\n        words:\n          \"This is your settings page. You can add all of your personal information here as well as change your password. Don't forget to submit your payment information. If you want to create a contest with placeholder credit card information enter 4242-4242-4242-4242\",\n        theme: 'primary',\n      },\n      style: {\n        padding: 20,\n        minWidth: '40%',\n        maxWidth: '80vw',\n      },\n    },\n    {\n      selector: '[data-tour=\"settings\"]',\n      content: {\n        words:\n          \"This is your settings page. You can add all of your personal information here as well as change your password. Don't forget to submit your payment information. If you want to create a contest with placeholder credit card information enter 4242-4242-4242-4242\",\n        theme: 'primary',\n      },\n      style: {\n        padding: 20,\n        minWidth: '40%',\n        maxWidth: '80vw',\n      },\n      action: () => history.push('/messages'),\n    },\n  ];\n\n  const handleChange = (event: React.ChangeEvent<Record<string, unknown>>, val: number) => {\n    setValue(val);\n    setExpanded(false);\n  };\n\n  return (\n    <>\n      <AuthHeader linkTo=\"/create-contest\" btnText=\"create contest\" />\n      <Box className={classes.root}>\n        <Hidden smUp={true}>\n          <Fragment>\n            <Box display=\"flex\" justifyContent=\"center\" width=\"100%\">\n              <Button\n                onClick={(): void => setExpanded(!expanded)}\n                color=\"primary\"\n                size=\"large\"\n                variant=\"contained\"\n                className={classes.expandBtn}\n              >\n                Show Settings Tab\n              </Button>\n            </Box>\n            <Drawer\n              className={classes.drawer}\n              anchor={'left'}\n              open={expanded}\n              onClose={(): void => setExpanded(!expanded)}\n            >\n              <div data-tour=\"settings\">\n                <Tabs\n                  orientation=\"vertical\"\n                  indicatorColor=\"primary\"\n                  textColor=\"primary\"\n                  value={value}\n                  TabIndicatorProps={{\n                    style: {\n                      height: 20,\n                      marginTop: 15,\n                    },\n                  }}\n                  onChange={handleChange}\n                  classes={{\n                    indicator: classes.indicator,\n                  }}\n                  className={classes.tabs}\n                >\n                  <Tab label=\"Personal Info\" {...tabProps(0)} className={classes.label} />\n                  <Tab label=\"Notification\" {...tabProps(1)} className={classes.label} />\n                  <Tab label=\"Payment Info\" {...tabProps(2)} className={classes.label} />\n                  <Tab label=\"Profile\" {...tabProps(3)} className={classes.label} />\n                  <Tab label=\"Password\" {...tabProps(4)} className={classes.label} />\n                </Tabs>\n              </div>\n            </Drawer>\n          </Fragment>\n        </Hidden>\n        <Hidden xsDown={true}>\n          <div data-tour=\"settings\">\n            <Tabs\n              orientation=\"vertical\"\n              indicatorColor=\"primary\"\n              textColor=\"primary\"\n              value={value}\n              TabIndicatorProps={{\n                style: {\n                  height: 20,\n                  marginTop: 15,\n                },\n              }}\n              onChange={handleChange}\n              className={classes.tabs}\n              classes={{\n                indicator: classes.indicator,\n              }}\n            >\n              <Tab label=\"Personal Info\" {...tabProps(0)} className={classes.label} />\n              <Tab label=\"Notification\" {...tabProps(1)} className={classes.label} />\n              <Tab label=\"Payment Info\" {...tabProps(2)} className={classes.label}></Tab>\n              <Tab label=\"Profile\" {...tabProps(3)} className={classes.label} />\n              <Tab label=\"Password\" {...tabProps(4)} className={classes.label} />\n            </Tabs>\n          </div>\n        </Hidden>\n        <TabPanel value={value} index={0}>\n          <Box display=\"flex\" justifyContent=\"center\">\n            <PersonalInfo />\n          </Box>\n        </TabPanel>\n        <TabPanel value={value} index={1}>\n          <Notifications header={false} />\n        </TabPanel>\n        <TabPanel value={value} index={2}>\n          <Typography className={classes.paymentDetails}>Payment Details</Typography>\n          <Elements stripe={stripeKey}>\n            <Box display=\"flex\" justifyContent=\"center\">\n              <Payment />\n            </Box>\n          </Elements>\n        </TabPanel>\n        <TabPanel value={value} index={3}>\n          <Profile header={false} />\n        </TabPanel>\n        <TabPanel value={value} index={4}>\n          <Password />\n        </TabPanel>\n      </Box>\n      <TourContent steps={steps} />\n    </>\n  );\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  grid: {\n    width: '100%',\n    height: '100%',\n    fontWeight: 'bolder',\n    [theme.breakpoints.down('xs')]: {\n      display: 'flex',\n      justifyContent: 'center',\n    },\n  },\n  backIcon: {\n    height: '10px',\n  },\n  contestTitle: {\n    fontSize: 38,\n    fontWeight: 'bolder',\n    fontFamily: \"'Open Sans'\",\n    textTransform: 'capitalize',\n    [theme.breakpoints.down('xs')]: {\n      textAlign: 'center',\n    },\n  },\n  prizeAmount: {\n    backgroundColor: 'black',\n    color: '#ffff',\n    marginLeft: 20,\n    borderRadius: '0',\n    fontSize: 100,\n    '&:hover': {\n      backgroundColor: 'black',\n      color: '#ffff',\n    },\n  },\n  prize: {\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  avatar: {\n    height: 45,\n    width: theme.spacing(6),\n    marginTop: 10,\n  },\n  user: {\n    fontSize: 17,\n    marginTop: 20,\n    marginLeft: 20,\n    fontWeight: 'bold',\n  },\n  button: {\n    color: '#000000',\n    border: '1.5px solid black',\n    width: '100%',\n    height: '60%',\n    borderRadius: 0,\n    marginTop: 12,\n    textTransform: 'uppercase',\n    '&:hover': {\n      backgroundColor: 'black',\n      color: 'white',\n    },\n    [theme.breakpoints.down('sm')]: {\n      marginTop: '15vh',\n    },\n  },\n  container: {\n    marginTop: '32px',\n    fontFamily: \"'Open Sans'\",\n  },\n  toolbar: {\n    border: 0,\n  },\n  tabs: {\n    color: '#000000',\n    textColorPrimary: '#000000',\n    width: '100%',\n    fontWeight: 'bold',\n    padding: 0,\n  },\n  descriptionHeader: { textDecoration: 'underline', margin: '15px 0 20px' },\n  imageWrapper: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n  },\n  imageList: {\n    transform: 'translateZ(0)',\n    margin: '40px 0 20px',\n    padding: '20px 0',\n    width: '100%',\n    height: 450,\n  },\n  listItem: {\n    '&:hover': {\n      cursor: 'pointer',\n    },\n    width: '25%',\n    height: 'auto',\n    [theme.breakpoints.down('sm')]: {\n      width: '50% !important',\n    },\n    [theme.breakpoints.down('xs')]: {\n      width: '90% !important',\n    },\n  },\n  image: {\n    width: '100%',\n    height: 'auto',\n  },\n  username: {\n    textTransform: 'capitalize',\n  },\n  greyText: {\n    color: '#CECECE',\n    fontWeight: 'bolder',\n  },\n  designGrid: {\n    marginTop: 50,\n  },\n}));\n\nexport default useStyles;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  listItem: {\n    '&:hover': {\n      cursor: 'pointer',\n    },\n    height: 'min-content',\n    padding: 10,\n    width: '25%',\n    [theme.breakpoints.down('sm')]: {\n      width: '50%',\n    },\n    [theme.breakpoints.down('xs')]: {\n      width: '90%',\n    },\n  },\n  by: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  titleBar: {\n    background: 'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n  },\n  link: {\n    textDecoration: 'none',\n    color: 'black',\n  },\n}));\n\nexport default useStyles;\n","import ImageListItem from '@material-ui/core/ImageListItem';\nimport ImageListItemBar from '@material-ui/core/ImageListItemBar';\nimport useStyles from './useStyles';\nimport ImageModal from '../../components/ImageModal/ImageModal';\nimport { Link } from 'react-router-dom';\n\ninterface Props {\n  images: string[];\n  artistName: string;\n  artistPic: string;\n  submissionId: string;\n  artistId: string;\n}\n\nconst SubmittedDesigns = ({ images, artistName, artistPic, submissionId, artistId }: Props): JSX.Element => {\n  const classes = useStyles();\n  return (\n    <>\n      {images.map((image) => (\n        <ImageListItem key={image} cols={1} className={classes.listItem}>\n          <ImageModal\n            submissionId={submissionId}\n            artistPic={artistPic}\n            artistName={artistName}\n            artistId={artistId ? artistId : null}\n            image={image}\n          >\n            <img\n              srcSet={`${image}?w=248&fit=crop&auto=format 1x,\n            ${image}?w=248&fit=crop&auto=format&dpr=2 2x`}\n              alt={artistName}\n              loading=\"lazy\"\n              style={{ height: '250px', width: '100%' }}\n            />\n          </ImageModal>\n          <Link className={classes.link} to={{ pathname: '/artist', state: `${artistId}` }}>\n            <ImageListItemBar title={`By @${artistName}`} classes={{ titleWrap: classes.by, root: classes.titleBar }} />\n          </Link>\n        </ImageListItem>\n      ))}\n    </>\n  );\n};\n\nexport default SubmittedDesigns;\n","import { useState, useEffect } from 'react';\nimport { useAuth } from '../../context/useAuthContext';\nimport useStyles from './useStyles';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Avatar from '@material-ui/core/Avatar';\nimport ImageList from '@material-ui/core/ImageList';\nimport ImageListItem from '@material-ui/core/ImageListItem';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { createTheme, ThemeProvider } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport SubmittedDesigns from '../../components/SubmittedDesigns/SubmittedDesigns';\nimport AuthHeader from '../../components/AuthHeader/AuthHeader';\nimport ImageModal from '../../components/ImageModal/ImageModal';\nimport { Contest, Submission } from '../../interface/User';\nimport { getContestById } from '../../helpers/APICalls/contest';\nimport { getContestSubmissions } from '../../helpers/APICalls/submission';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport { Link, useParams } from 'react-router-dom';\nimport { useSnackBar } from '../../context/useSnackbarContext';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nconst GlobalCss = withStyles({\n  // @global is handled by jss-plugin-global.\n  '@global': {\n    // You should target [class*=\"MuiButton-root\"] instead if you nest themes.\n    '.MuiToolbar-root': {\n      padding: 0,\n    },\n    '.MuiToolbar-regular': {\n      minHeight: 0,\n    },\n    'li.MuiImageListItem-root': {\n      overflowY: 'hidden',\n    },\n    'ul.li.MuiImageListItem-item': {\n      padding: 0,\n    },\n    '.MuiImageListItemBar-titleWrap': {\n      color: '#333',\n      marginTop: '12px',\n    },\n    '.MuiImageListItemBar-title': {\n      fontSize: '15px',\n      fontWeight: 'bolder',\n      textDecoration: 'underline',\n      color: 'white',\n    },\n    '.MuiImageListItem-imgFullHeight': {\n      opacity: '0.8',\n    },\n  },\n})(() => null);\n\nexport default function ContestPage(): JSX.Element {\n  const { id } = useParams() as { id: string };\n  const classes = useStyles();\n  const [value, setValue] = useState(0);\n  const { updateSnackBarMessage } = useSnackBar();\n  const [contestSubmissions, setContestSubmissions] = useState<Submission[]>([]);\n  const [contest, setContest] = useState<Contest>();\n  const { loggedInUser } = useAuth();\n\n  const newTheme = createTheme({\n    palette: {\n      primary: {\n        main: '#000000',\n      },\n      secondary: {\n        main: '#3d3d3d',\n      },\n    },\n  });\n\n  interface TabPanelProps {\n    direction?: string;\n    value: number;\n    children: React.ReactNode;\n    index: number;\n  }\n\n  useEffect(() => {\n    async function getUserContestSubmissions() {\n      try {\n        const submissions = await getContestSubmissions(id);\n        if (submissions) {\n          setContestSubmissions(submissions);\n        } else {\n          setContestSubmissions([]);\n        }\n      } catch (err: any) {\n        updateSnackBarMessage(err.message);\n      }\n    }\n    if (loggedInUser) {\n      getUserContestSubmissions();\n    }\n  }, [loggedInUser, id, updateSnackBarMessage]);\n\n  useEffect(() => {\n    async function getContest() {\n      try {\n        const data = await getContestById(id);\n        if (data) {\n          setContest(data);\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    getContest();\n  }, [id]);\n\n  const handleChange = (event: React.ChangeEvent<Record<string, unknown>>, valueChange: number) => {\n    setValue(valueChange);\n  };\n\n  const Panel = function (props: TabPanelProps) {\n    return (\n      <div role=\"tabpanel\" id={`${props.index}`}>\n        {value === props.index && (\n          <Container>\n            <Typography>{props.children}</Typography>\n          </Container>\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <>\n      <CssBaseline />\n      <GlobalCss />\n      <AuthHeader\n        linkTo={loggedInUser ? `/create-contest` : '/login'}\n        btnText={loggedInUser ? 'create contest' : 'login'}\n      />\n      <Container className={classes.container}>\n        <Grid className={classes.grid} container style={{ marginBottom: '35px' }}>\n          <Grid item>\n            <Typography>\n              {/* should be redirected to all the contests page*/}\n              <Link to=\"/discovery\" className={classes.greyText}>\n                <ArrowBackIosIcon className={classes.backIcon} />\n                Back to contests list\n              </Link>\n            </Typography>\n          </Grid>\n        </Grid>\n        <Grid className={classes.grid} container>\n          <Grid item xs={12} sm={10}>\n            <Typography className={classes.contestTitle}>\n              {contest ? contest.title : ''}\n              <Button className={classes.prizeAmount}>\n                <Typography className={classes.prize}>${contest ? contest.prizeAmount : '0'}</Typography>\n              </Button>\n            </Typography>\n            <Grid direction=\"row\" className={classes.grid} container alignItems=\"center\">\n              <Grid item>\n                <Link to={{ pathname: '/artist', state: `${contest?.userId}` }}>\n                  <Avatar\n                    src={contest && (contest.ownerProfilePic || `https://robohash.org/${contest.ownerName}.png`)}\n                    className={classes.avatar}\n                  ></Avatar>\n                </Link>\n              </Grid>\n              <Grid item>\n                <Typography className={classes.user}>\n                  By <span className={classes.username}>{contest ? contest.ownerName : ''}</span>\n                </Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={12} sm={2}>\n            {loggedInUser?.id === contest?.userId || !loggedInUser ? (\n              <Button variant=\"outlined\" size=\"large\" className={classes.button} disabled>\n                submit design\n              </Button>\n            ) : (\n              <Link to={`/submit-design/${id}`} style={{ textDecoration: 'none' }}>\n                <Button variant=\"outlined\" size=\"large\" className={classes.button}>\n                  submit design\n                </Button>\n              </Link>\n            )}\n          </Grid>\n        </Grid>\n        <Grid container direction=\"column\" className={classes.designGrid}>\n          <Toolbar className={classes.toolbar}>\n            <ThemeProvider theme={newTheme}>\n              <Tabs\n                className={classes.tabs}\n                value={value}\n                onChange={handleChange}\n                textColor=\"primary\"\n                variant=\"fullWidth\"\n                TabIndicatorProps={{\n                  style: {\n                    height: 5,\n                  },\n                }}\n              >\n                {contestSubmissions.length && (\n                  <Tab label={contest && contest.images ? `DESIGNS (${contest.images.length})` : `DESIGNS (30)`} />\n                )}\n                <Tab label=\"BRIEF\" />\n              </Tabs>\n            </ThemeProvider>\n          </Toolbar>\n          <Paper elevation={2}>\n            {contestSubmissions.length ? (\n              <Panel value={value} index={0}>\n                <div className={classes.imageWrapper}>\n                  <ImageList cols={4} gap={3} className={classes.imageList}>\n                    {contestSubmissions.map((submission) => (\n                      <SubmittedDesigns\n                        key={submission._id}\n                        images={submission.images}\n                        artistPic={submission.artistPic}\n                        artistName={submission.artistName}\n                        submissionId={submission._id}\n                        artistId={submission.artistId}\n                      />\n                    ))}\n                  </ImageList>\n                </div>\n              </Panel>\n            ) : null}\n            <Panel value={value} index={contestSubmissions.length ? 1 : 0}>\n              <Typography align=\"center\" variant=\"h3\" className={classes.descriptionHeader}>\n                Tattoo Description:\n              </Typography>\n              <Typography align=\"center\" variant=\"h5\">\n                {contest ? contest.description : ''}\n              </Typography>\n              <ImageList cols={4} gap={10} className={classes.imageList}>\n                {contest && contest.images\n                  ? contest.images.map((image) => (\n                      <ImageListItem cols={1} key={image} className={classes.listItem}>\n                        <ImageModal image={image}>\n                          <img\n                            srcSet={`${image}?w=248&fit=crop&auto=format 1x,\n                          ${image}?w=248&fit=crop&auto=format&dpr=2 2x`}\n                            alt={`${image} inspiration`}\n                            loading=\"lazy\"\n                            className={classes.image}\n                          />\n                        </ImageModal>\n                      </ImageListItem>\n                    ))\n                  : null}\n              </ImageList>\n            </Panel>\n          </Paper>\n        </Grid>\n      </Container>\n    </>\n  );\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  fields: {\n    width: '100%'\n  },\n}));\n\nexport default useStyles;\n","import { Box, Typography, Button, TextField, CircularProgress } from '@material-ui/core';\nimport useStyles from './useStyles';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\n\ninterface Props {\n  handleSubmit: (\n    { email } :\n    { email: string; }\n  ) => void;\n}\n\nexport default function ForgotPasswordForm({ handleSubmit }: Props): JSX.Element {\n  const classes = useStyles();\n\n  return (\n    <Formik\n    initialValues={{\n      email: '',\n    }}\n    validationSchema={Yup.object().shape({\n      email: Yup.string().required('Email is required').email('Email is not valid')\n    })}\n    onSubmit={handleSubmit}>\n      {({ handleSubmit, handleChange, values, touched, errors, isSubmitting }) => (\n        <form onSubmit={handleSubmit} noValidate>\n          <Box mt={3}>\n            <Typography>Email</Typography>\n            <TextField\n              id=\"email\"\n              name=\"email\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              placeholder=\"Email\"\n              className={classes.fields}\n              helperText={touched.email ? errors.email : ''}\n              error={touched.email && Boolean(errors.email)}\n              value={values.email}\n              onChange={handleChange}\n            />\n          </Box>\n          <Box mb={3}>\n            <Button type=\"submit\" size=\"large\" variant=\"contained\" color=\"primary\" className={classes.fields}>\n            {isSubmitting ? <CircularProgress style={{ color: 'white' }} /> : 'Send Confirmation'}\n            </Button>\n          </Box>\n        </form>\n      )}\n    </Formik>\n  );\n};\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100vh'\n  },\n  form: {\n    padding: 10,\n    width: '25%',\n    minWidth: '20%',\n  },\n}));\n\nexport default useStyles;\n","import { useState } from 'react';\nimport { Box, Typography, Paper } from '@material-ui/core';\nimport ForgotPasswordForm from './ForgotPasswordForm/ForgotPasswordForm';\nimport { forgotPassword } from '../../helpers/APICalls/password';\nimport useStyles from './useStyles';\n\nexport default function Reset(): JSX.Element {\n  const [hasSubmitted, setHasSubmitted] = useState<boolean>(false);\n  const [error, setError] = useState<string>();\n  const classes = useStyles();\n\n  const handleSubmit = (\n    { email } : { email: string }\n  ) => {\n    forgotPassword(email)\n      .then((res) => {\n        if (res.error) {\n          setError(res.error.message);\n        } else {\n          setError('');\n        }\n      });\n    setHasSubmitted(prev => !prev);\n  };\n\n  return (\n    <Box className={classes.container}>\n      <Box>\n        <Typography align=\"center\" component=\"h1\" variant=\"h5\">\n          Forgot Password\n        </Typography>\n      </Box>\n      <Box mt={3} mb={3} boxShadow={4} component={Paper} className={classes.form}>\n        {\n          hasSubmitted && !error\n          ? <Box>\n              <Typography align=\"center\">\n                A reset link has been sent to your email\n              </Typography>\n            </Box>\n          : error\n          ? <Typography align=\"center\">{error}</Typography>\n          : <ForgotPasswordForm handleSubmit={handleSubmit}/>\n        }\n      </Box>\n    </Box>\n  );\n};\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  fields: {\n    width: '100%'\n  },\n}));\n\nexport default useStyles;\n","import { Box, Typography, Button, TextField, CircularProgress } from '@material-ui/core';\nimport useStyles from './useStyles';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\n\ninterface Props {\n  handleSubmit: (\n    {\n      password, confirmPassword\n    } :\n    {\n      password: string;\n      confirmPassword: string;\n    }\n  ) => void;\n}\n\nexport default function ResetPasswordForm({ handleSubmit }: Props): JSX.Element {\n  const classes = useStyles();\n\n  return (\n    <Formik\n    initialValues={{\n      password: '',\n      confirmPassword: '',\n    }}\n    validationSchema={Yup.object().shape({\n      password: Yup.string()\n        .required('Password is required')\n        .max(100, 'Password is too long')\n        .min(6, 'Password too short'),\n      confirmPassword: Yup.string().when(\"password\", {\n        is: (val: string) => (val && val.length > 0 ? true : false),\n        then: Yup.string().oneOf(\n          [Yup.ref(\"password\")],\n          \"Password does not match!\"\n        )\n      })\n    })}\n    onSubmit={handleSubmit}>\n      {({ handleSubmit, handleChange, values, touched, errors, isSubmitting }) => (\n        <form onSubmit={handleSubmit} noValidate>\n          <Box mt={3}>\n            <Typography>Password</Typography>\n            <TextField\n              id=\"password\"\n              name=\"password\"\n              type=\"password\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              placeholder=\"Password\"\n              className={classes.fields}\n              helperText={touched.password ? errors.password : ''}\n              error={touched.password && Boolean(errors.password)}\n              value={values.password}\n              onChange={handleChange}\n            />\n          </Box>\n          <Box mt={3} mb={3}>\n            <Typography>Confirm Password</Typography>\n            <TextField\n              id=\"confirmPassword\"\n              name=\"confirmPassword\"\n              type=\"password\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              placeholder=\"Confirm Password\"\n              className={classes.fields}\n              helperText={touched.confirmPassword ? errors.confirmPassword : ''}\n              error={touched.confirmPassword && Boolean(errors.confirmPassword)}\n              value={values.confirmPassword}\n              onChange={handleChange}/>\n          </Box>\n          <Box mb={3}>\n            <Button type=\"submit\" size=\"large\" variant=\"contained\" color=\"primary\" className={classes.fields}>\n              {isSubmitting ? <CircularProgress style={{ color: 'white' }} /> : 'Update Password'}\n            </Button>\n          </Box>\n        </form>\n      )}\n    </Formik>\n  );\n};\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100vh'\n  },\n  form: {\n    padding: 10,\n    width: '25%',\n    minWidth: '20%',\n  },\n  linkContainer: {\n    display: 'flex',\n    justifyContent: 'space-around'\n  },\n  link: {\n    border: '1px solid black',\n    borderRadius: 5,\n    padding: 5,\n    textDecoration: 'none',\n    color: '#EEEEEE',\n    backgroundColor: '#111111',\n    '&:hover': {\n      backgroundColor: 'gray'\n    }\n  }\n}));\n\nexport default useStyles;\n","import { useState } from 'react';\nimport { Box, Typography, Paper } from '@material-ui/core';\nimport ResetPasswordForm from './ResetPasswordForm/ResetPasswordForm';\nimport { useParams, Link } from 'react-router-dom';\nimport { resetPassword } from '../../helpers/APICalls/password';\nimport useStyles from './useStyles';\n\nexport default function Reset(): JSX.Element {\n  const [hasSubmitted, setHasSubmitted] = useState<boolean>(false);\n  const [error, setError] = useState<string>();\n  const classes = useStyles();\n  const { token, id } = useParams<{ id: string, token: string }>();\n\n  const handleSubmit = (\n    { password } : { password: string }\n  ) => {\n    resetPassword(password, token, id)\n      .then((res) => {\n        if (res.error) {\n          setError(res.error.message);\n        } else {\n          setError('');\n        }\n      });\n    setHasSubmitted(prev => !prev);\n  };\n\n  return (\n    <Box className={classes.container}>\n      <Box>\n        <Typography align=\"center\" component=\"h1\" variant=\"h5\">\n          Reset Password\n        </Typography>\n      </Box>\n      <Box mt={3} mb={3} boxShadow={4} component={Paper} className={classes.form}>\n        {\n          hasSubmitted && !error\n          ? <Box>\n              <Typography align=\"center\">\n                Your password has be updated!\n              </Typography>\n              <Box mt={2} mb={2} className={classes.linkContainer}>\n                <Link to=\"/login\" className={classes.link}>Login</Link>\n                <Link to=\"/dashboard\" className={classes.link}>Home</Link>\n              </Box>\n            </Box>\n          : error\n          ? <Typography align=\"center\">{error}</Typography>\n          : <ResetPasswordForm handleSubmit={handleSubmit}/>\n        }\n      </Box>\n    </Box>\n  );\n};\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100vh',\n    margin: 0,\n    padding: 0,\n    width: '100%',\n  },\n  container: {\n    '& .MuiInput-underline:before': {\n      borderBottom: '1.2px solid rgba(0, 0, 0, 0.2)',\n    },\n    backgroundColor: '#FFFFFF',\n    flex: 9,\n    height: 'calc(100vh - 400px)',\n  },\n  drawerWrapper: {\n    maxHeight: '100%',\n  },\n  chatWrapper: {\n    height: '100%',\n    [theme.breakpoints.down('sm')]: {\n      height: 'calc(100% - 50px)',\n    },\n  },\n  paper: {\n    maxHeight: '100%',\n  },\n}));\n\nexport default useStyles;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  chatSideBanner: {\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%',\n    padding: '1rem 1rem',\n    [theme.breakpoints.up('md')]: {\n      padding: '2rem',\n    },\n  },\n  convosContainer: {\n    overflowY: 'scroll',\n    '&::-webkit-scrollbar': {\n      display: 'none',\n    },\n  },\n  userPanel: {\n    display: 'flex',\n    alignItems: 'center',\n    marginBottom: '2rem',\n  },\n  heading: {\n    marginLeft: 20,\n    fontWeight: 900,\n  },\n  chatTitle: {\n    fontWeight: 700,\n    fontSize: 20,\n    margin: '1rem 0',\n  },\n  chatSummaryContainer: { overflowY: 'auto', marginTop: '1rem' },\n  newChatBtn: {\n    margin: '1rem 0',\n  },\n  noChatToSelectText: {\n    margin: '1rem 0',\n  },\n}));\n\nexport default useStyles;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: '#E9EEF9',\n    marginLeft: 0,\n    height: '50px',\n    lineHeight: '18px',\n\n    width: `calc(${drawerWidth} - 2rem)`,\n  },\n  searchRoot: {\n    color: 'inherit',\n    width: '100%',\n    height: '100%',\n  },\n  searchInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    width: '100%',\n    fontWeight: 600,\n  },\n  searchIcon: {\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    marginLeft: '1rem',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n}));\n\nexport default useStyles;\n","import { FetchOptions } from '../../interface/FetchOptions';\nimport { SearchUsersApiData } from '../../interface/User';\n\ninterface Props {\n  search: string;\n}\n\nexport async function searchUsers({ search }: Props): Promise<SearchUsersApiData> {\n  const fetchOptions: FetchOptions = {\n    method: 'GET',\n    credentials: 'include',\n  };\n  return await fetch(`/api/users?search=${search}`, fetchOptions)\n    .then((res) => res.json())\n    .catch(() => ({\n      error: { message: 'Unable to connect to server. Please try again' },\n    }));\n}\n","import { FetchOptions } from '../../interface/FetchOptions';\nimport { AuthApiData } from '../../interface/AuthApiData';\nimport { Convo, Message } from '../../interface/User';\nimport { OtherUser } from '../../interface/Convo';\n\ninterface NewMessage {\n  to: string;\n  message: string;\n}\n\nexport const getAllConvos = async (): Promise<Convo[]> => {\n  const fetchData: FetchOptions = {\n    method: 'GET',\n    headers: { 'Content-Type': 'application/json' },\n    credentials: 'include',\n  };\n\n  return await fetch('/api/conversation', fetchData)\n    .then((data) => data.json())\n    .catch((err) => ({ error: { message: 'Can not connect to server' } }));\n};\n\nexport const getOneConvo = async (friendId: string): Promise<Message[] | OtherUser> => {\n  const fetchData: FetchOptions = {\n    method: 'GET',\n    headers: { 'Content-Type': 'application/json' },\n    credentials: 'include',\n  };\n\n  return await fetch(`/api/conversation/${friendId}`, fetchData)\n    .then((data) => data.json())\n    .catch((err) => ({ error: { message: 'Can not connect to server' } }));\n};\n\nexport const sendMessage = async (message: NewMessage): Promise<Message> => {\n  const fetchData: FetchOptions = {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    credentials: 'include',\n    body: JSON.stringify(message),\n  };\n\n  return await fetch(`/api/conversation`, fetchData)\n    .then((data) => data.json())\n    .catch((err) => ({ error: { message: 'Can not connect to server' } }));\n};\n","import { FunctionComponent, createContext, useState, useEffect, useContext } from 'react';\nimport { getOneConvo } from '../helpers/APICalls/conversations';\nimport { Message } from '../interface/User';\nimport { OtherUser } from '../interface/Convo';\n\ninterface ConvoContext {\n  convo?: Message[];\n  setFriendId: (id: string) => void;\n  recipient: OtherUser;\n  setConvo: (message: Message[]) => void;\n}\n\nexport const ConversationContext = createContext<ConvoContext>({\n  convo: [],\n  setFriendId: (id: string) => null,\n  recipient: {\n    _id: '',\n    profilePic: '',\n    username: '',\n  },\n  setConvo: () => undefined,\n});\n\nexport const ConversationProvider: FunctionComponent = ({ children }): JSX.Element => {\n  const [convo, setConvo] = useState<Message[]>();\n  const [recipient, setRecipient] = useState<OtherUser>({\n    _id: '',\n    profilePic: '',\n    username: '',\n  });\n  const [friendId, setFriendId] = useState<string>();\n\n  useEffect(() => {\n    if (friendId) {\n      setConvo([]);\n      setRecipient({\n        _id: '',\n        profilePic: '',\n        username: '',\n      });\n      getOneConvo(friendId)\n        .then((res) => {\n          if ('username' in res) {\n            setRecipient(res);\n          } else {\n            setConvo(res);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  }, [friendId]);\n\n  return (\n    <ConversationContext.Provider value={{ convo, setFriendId, recipient, setConvo }}>\n      {children}\n    </ConversationContext.Provider>\n  );\n};\n\nexport function useConvoContext(): ConvoContext {\n  return useContext(ConversationContext);\n}\n","import { ChangeEvent, useState, useEffect, SyntheticEvent } from 'react';\nimport useStyles from './useStyles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport InputBase from '@material-ui/core/InputBase';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { User } from '../../interface/User';\nimport { useDebounce } from 'use-debounce';\nimport { searchUsers } from '../../helpers/APICalls/searchUsers';\nimport { useConvoContext } from '../../context/conversationContext';\n\ninterface Props {\n  search: string;\n  handleChange: (event: ChangeEvent<HTMLInputElement>, newInputValue: string) => void;\n}\nconst Search = ({ search, handleChange }: Props): JSX.Element => {\n  const [open, setOpen] = useState(false);\n  const [options, setOptions] = useState<User[]>([]);\n  const [loading, setLoading] = useState(false);\n  // limit our call to the api with a debounced value at max of 1 per 0.5 seconds\n  const [debouncedSearch] = useDebounce(search, 500);\n  const { setFriendId } = useConvoContext();\n\n  const classes = useStyles();\n\n  const saveOptions = (users: User[]) => {\n    setOptions(users);\n  };\n\n  useEffect(() => {\n    let active = true;\n\n    async function searchAndSaveUsers() {\n      // send request to backend API to get users limited to 20.\n      setLoading(true);\n      const response = await searchUsers({\n        search: debouncedSearch,\n      });\n\n      if (active && response && response.users) {\n        console.log(response);\n        saveOptions(response.users);\n      }\n      setLoading(false);\n    }\n\n    searchAndSaveUsers();\n\n    return () => {\n      active = false;\n    };\n  }, [debouncedSearch]);\n\n  const handleFriendChange = (value: User) => {\n    if (value) {\n      setFriendId(value.id);\n    }\n  };\n\n  // creates a combobox search which is dynamically updated with call's to the API\n  return (\n    <form\n      onSubmit={(e: SyntheticEvent) => {\n        e.preventDefault();\n      }}\n      data-tour=\"search\"\n    >\n      <Autocomplete\n        id=\"asynchronous-search\"\n        open={open}\n        onOpen={() => {\n          setOpen(true);\n        }}\n        onClose={() => {\n          setOpen(false);\n        }}\n        getOptionSelected={(option, value) => option.username === value.username}\n        getOptionLabel={(option) => option.username}\n        options={options}\n        loading={loading}\n        onChange={(e, value) => handleFriendChange(value as User)}\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        onInputChange={handleChange}\n        inputValue={search}\n        noOptionsText=\"No Users Found\"\n        freeSolo\n        renderInput={(params) => (\n          <div className={classes.search}>\n            <InputBase\n              {...params.inputProps}\n              placeholder=\"Search\"\n              classes={{\n                root: classes.searchRoot,\n                input: classes.searchInput,\n              }}\n              inputProps={{\n                'aria-label': 'search',\n                ref: params.InputProps.ref,\n              }}\n              startAdornment={\n                <div className={classes.searchIcon}>\n                  <SearchIcon />\n                </div>\n              }\n            />\n          </div>\n        )}\n      />\n    </form>\n  );\n};\n\nexport default Search;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    borderRadius: 8,\n    borderTop: 'rgba(0, 0, 0, .1)',\n    borderBottom: 'rgba(0, 0, 0, .1)',\n    height: 80,\n    boxShadow: '0 2px 10px 0 rgba(88,133,196,0.05)',\n    marginBottom: 10,\n    display: 'flex',\n    alignItems: 'center',\n    '&:hover': {\n      cursor: 'pointer',\n    },\n  },\n  profilePic: {\n    height: 44,\n    width: 44,\n  },\n  badge: {\n    height: 13,\n    width: 13,\n    borderRadius: '50%',\n    border: '2px solid white',\n    backgroundColor: '#D0DAE9',\n  },\n  online: {\n    backgroundColor: '#1CED84',\n  },\n  sidebar: {\n    marginLeft: 17,\n  },\n  date: {\n    fontSize: 12,\n    color: '#9CADC8',\n    letterSpacing: -0.17,\n    marginRight: 15,\n  },\n}));\n\nexport default useStyles;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginLeft: 20,\n    flexGrow: 1,\n  },\n  username: {\n    textTransform: 'capitalize',\n    fontWeight: 900,\n  },\n  lastMessage: {\n    fontSize: 12,\n    color: '#9CADC8',\n    letterSpacing: -0.17,\n  },\n  notification: {\n    height: 20,\n    width: 20,\n    backgroundColor: '#3F92FF',\n    marginRight: 10,\n    color: 'white',\n    fontSize: 10,\n    letterSpacing: -0.5,\n    fontWeight: 'bold',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 10,\n  },\n  chip: {\n    margin: '1vw',\n  },\n}));\n\nexport default useStyles;\n","import { useState } from 'react';\nimport useStyles from './useStyles';\nimport Chip from '@material-ui/core/Chip';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\n\ninterface Props {\n  username: string;\n  lastMessage: string;\n}\n\nconst ConvoContent = ({ username, lastMessage }: Props): JSX.Element => {\n  const classes = useStyles();\n  const [unread, setUnread] = useState<number>(0);\n\n  return (\n    <Box className={classes.root} onClick={() => setUnread(0)}>\n      <Box>\n        <Typography className={classes.username}>\n          {username.slice(0, 15)}\n          {username.length > 40 ? '...' : ''}\n        </Typography>\n        <Typography className={classes.lastMessage}>\n          {lastMessage.slice(0, 40)}\n          {lastMessage.length > 40 ? '...' : ''}\n        </Typography>\n      </Box>\n      {unread ? <Chip color=\"primary\" label={unread} className={classes.chip} /> : null}\n    </Box>\n  );\n};\n\nexport default ConvoContent;\n","import { useState } from 'react';\nimport Box from '@material-ui/core/Box';\nimport Badge from '@material-ui/core/Badge';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport useStyles from './useStyles';\nimport ConvoContent from '../ConvoContent/ConvoContent';\nimport { useAuth } from '../../context/useAuthContext';\nimport { useConvoContext } from '../../context/conversationContext';\nimport { Convo } from '../../interface/User';\n\ninterface Props {\n  convo: Convo;\n  closeDrawer?: (arg0: boolean) => void;\n}\n\nconst ConvoCard = ({ convo, closeDrawer }: Props): JSX.Element => {\n  const [online, setOnline] = useState<boolean>(false);\n  const classes = useStyles();\n  const { setFriendId } = useConvoContext();\n  const { loggedInUser } = useAuth();\n  const [otherUser] = convo.recipients.filter((person) => loggedInUser && person._id !== loggedInUser.id);\n  const lastMessageDate = new Date(convo.updatedAt);\n\n  return otherUser ? (\n    <Box\n      className={classes.root}\n      onClick={() => {\n        setFriendId(otherUser._id);\n        closeDrawer && closeDrawer(false);\n      }}\n    >\n      <Badge\n        classes={{ badge: `${classes.badge} ${online && classes.online}` }}\n        variant=\"dot\"\n        anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\n        overlap=\"circular\"\n      >\n        <Avatar alt={otherUser.username} src={otherUser.profilePic} className={classes.profilePic}></Avatar>\n      </Badge>\n      <ConvoContent username={otherUser.username} lastMessage={convo.lastMessage} />\n      <Box>\n        <Typography className={classes.date}>{lastMessageDate.toString().slice(0, 10)}</Typography>\n      </Box>\n    </Box>\n  ) : (\n    <div></div>\n  );\n};\n\nexport default ConvoCard;\n","import { ChangeEvent, useState } from 'react';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport useStyles from './useStyles';\nimport { User } from '../../interface/User';\nimport Search from '../Search/Search';\nimport ConvoCard from '../ConvoCard/ConvoCard';\nimport { Convo } from '../../interface/User';\n\ninterface Props {\n  convos: Convo[];\n  closeDrawer?: (arg0: boolean) => void;\n}\n\nconst ChatSideBanner = ({ convos, closeDrawer }: Props): JSX.Element => {\n  const [search, setSearch] = useState<string>('test');\n  const [newChatUser, setNewChatUser] = useState<User | null>(null);\n  const classes = useStyles();\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement>, newInputValue: string) => {\n    setSearch(newInputValue);\n    if (newChatUser) {\n      setNewChatUser(null);\n    }\n  };\n\n  return (\n    <Grid className={classes.chatSideBanner}>\n      <Box className={classes.userPanel}>\n        <Typography variant=\"h5\" className={classes.heading}>\n          Inbox Messages\n        </Typography>\n      </Box>\n      <Box marginBottom={3}>\n        <Search search={search} handleChange={handleChange} />\n      </Box>\n      <Box className={classes.convosContainer}>\n        {convos && convos.map((convo) => <ConvoCard key={convo._id} convo={convo} closeDrawer={closeDrawer} />)}\n      </Box>\n    </Grid>\n  );\n};\n\nexport default ChatSideBanner;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%',\n  },\n  activeChat: {\n    height: '100%',\n  },\n  chatContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    padding: '0 20px',\n    '&::-webkit-scrollbar': {\n      display: 'none',\n    },\n    height: '100%',\n    overflowY: 'scroll',\n  },\n}));\n\nexport default useStyles;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    height: 89,\n    marginBottom: 34,\n    boxShadow: '0 2px 20px 0 rgba(88,133,196,0.10)',\n  },\n  content: {\n    display: 'flex',\n    alignItems: 'center',\n    marginLeft: 24,\n  },\n  username: {\n    textTransform: 'capitalize',\n    fontSize: 20,\n    letterSpacing: -0.29,\n    fontWeight: 'bold',\n    margin: '0 14px',\n  },\n  statusText: {\n    fontSize: 12,\n    color: '#BFC9DB',\n    letterSpacing: -0.17,\n  },\n  statusDot: {\n    height: 8,\n    width: 8,\n    borderRadius: '50%',\n    marginRight: 5,\n    backgroundColor: '#D0DAE9',\n  },\n  online: {\n    backgroundColor: '#1CED84',\n  },\n  offline: {\n    backgroundColor: '#D0DAE9',\n  },\n  ellipsis: {\n    color: '#95A7C4',\n    marginRight: 24,\n    opacity: 0.5,\n  },\n}));\n\nexport default useStyles;\n","import Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport Badge from '@material-ui/core/Badge';\nimport useStyles from './useStyles';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst StyledBadge = withStyles((theme) => ({\n  badge: {\n    backgroundColor: '#44b700',\n    color: '#44b700',\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\n    '&::after': {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      borderRadius: '50%',\n      animation: '$ripple 1.2s infinite ease-in-out',\n      border: '1px solid currentColor',\n      content: '\"\"',\n    },\n  },\n  '@keyframes ripple': {\n    '0%': {\n      transform: 'scale(.8)',\n      opacity: 1,\n    },\n    '100%': {\n      transform: 'scale(2.4)',\n      opacity: 0,\n    },\n  },\n}))(Badge);\n\ninterface Props {\n  online: boolean;\n  username: string;\n  profilePic: string;\n}\n\nconst MessageHeader = ({ online, username, profilePic }: Props): JSX.Element => {\n  const classes = useStyles();\n  return (\n    <Box className={classes.root}>\n      <Box className={classes.content}>\n        <StyledBadge\n          overlap=\"circular\"\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'right',\n          }}\n          variant=\"dot\"\n        >\n          <Avatar alt=\"Profile Image\" src={profilePic} />\n        </StyledBadge>\n        <Typography className={classes.username}>{username}</Typography>\n      </Box>\n      <MoreHorizIcon classes={{ root: classes.ellipsis }} />\n    </Box>\n  );\n};\n\nexport default MessageHeader;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: 15,\n    position: 'sticky',\n    bottom: 5,\n    width: '100%',\n  },\n  inputContainer: {\n    height: '100px',\n    [theme.breakpoints.down('md')]: {\n      padding: 0,\n    },\n  },\n  input: {\n    borderRadius: 5,\n    width: '100%',\n  },\n}));\n\nexport default useStyles;\n","import { FormEvent, useRef } from 'react';\nimport FormControl from '@material-ui/core/FormControl';\nimport { Grid, TextField } from '@material-ui/core';\nimport useStyles from './useStyles';\nimport { useAuth } from '../../context/useAuthContext';\nimport { useSocket } from '../../context/useSocketContext';\nimport { createNotification } from '../../helpers/APICalls/notification';\n\ninterface Props {\n  otherUserId: string;\n  otherUsername: string;\n  displayMessage: (\n    msg: string\n  ) => void;\n};\n\nconst MessageInput = ({ otherUserId, otherUsername, displayMessage }: Props): JSX.Element => {\n  const classes = useStyles();\n  const inputRef = useRef<HTMLInputElement>();\n  const { loggedInUser } = useAuth();\n  const { socket } = useSocket();\n\n  const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (loggedInUser) {\n      if (inputRef.current){\n        displayMessage(inputRef.current.value);\n        inputRef.current.value='';\n      }\n      const notificationBody = { to: otherUserId, notification: `${loggedInUser?.username} sent you a message`};\n      const notification = await createNotification(notificationBody);\n      //send notification to the socket server using emit action of sendnotification\n      socket?.emit('sendNotification', notification)\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} autoComplete=\"off\">\n      <FormControl fullWidth hiddenLabel>\n        <Grid container alignContent=\"center\" className={classes.inputContainer}>\n          <Grid item xs={12}>\n            <TextField\n              placeholder={`Reply to ${otherUsername}`}\n              className={classes.input}\n              name=\"text\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              fullWidth\n              inputProps={{\n                ref: inputRef,\n              }}\n            />\n          </Grid>\n        </Grid>\n      </FormControl>\n    </form>\n  );\n};\n\nexport default MessageInput;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-end',\n  },\n  date: {\n    fontSize: 11,\n    color: '#BECCE2',\n    fontWeight: 'bold',\n    marginBottom: 5,\n  },\n  text: {\n    fontSize: '1rem',\n    padding: 8,\n    fontWeight: 700,\n  },\n  bubble: {\n    background: '#F4F6FA',\n    borderRadius: '10px 10px 0 10px',\n    margin: '10px 2rem 10px 10px',\n    [theme.breakpoints.down('sm')]: {\n      margin: 10,\n    },\n    border: '1px solid rgba(0, 0, 0, .2)',\n    width: 'fit-content',\n  },\n  avatar: {\n    height: 25,\n    width: 25,\n    marginTop: 6,\n  },\n}));\n\nexport default useStyles;\n","import Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport useStyles from './useStyles';\n\ninterface Props {\n  time: string;\n  text: string;\n  latest: boolean;\n  image: string;\n  imageAlt: string;\n}\n\nconst SenderBubble = ({ time, text }: Props): JSX.Element => {\n  const classes = useStyles();\n  return (\n    <Box display=\"flex\" justifyContent=\"flex-end\">\n      <Box width=\"50%\" maxWidth=\"45%\" display=\"flex\" justifyContent=\"flex-end\">\n        <Box className={classes.bubble}>\n          <Typography className={classes.text}>{text}</Typography>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default SenderBubble;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  avatar: {\n    margin: '10px 2rem 10px 10px',\n  },\n  usernameDate: {\n    fontSize: 11,\n    color: '#BECCE2',\n    fontWeight: 'bold',\n    marginBottom: 5,\n  },\n  bubble: {\n    border: '1px solid rgba(0, 0, 0, .2)',\n    borderRadius: '0 10px 10px 10px',\n    minWidth: 'min-content',\n    margin: '10px 2rem 10px 10px',\n    [theme.breakpoints.down('sm')]: {\n      margin: 10,\n    },\n  },\n  text: {\n    fontSize: '1rem',\n    fontWeight: 700,\n    padding: 8,\n  },\n}));\n\nexport default useStyles;\n","import Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\nimport useStyles from './useStyles';\n\ninterface Props {\n  time: string;\n  text: string;\n  otherUsername: string;\n  otherPhoto: string;\n}\n\nconst OtherUserBubble = ({ time, text, otherUsername, otherPhoto }: Props): JSX.Element => {\n  const classes = useStyles();\n  return (\n    <Box display=\"flex\" flex-direction=\"column\" alignItems=\"flex-end\" maxWidth=\"90%\">\n      <Avatar alt={otherUsername} src={otherPhoto} className={classes.avatar}></Avatar>\n      <Box maxWidth=\"50%\">\n        <Box className={classes.bubble}>\n          <Typography className={classes.text}>{text}</Typography>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default OtherUserBubble;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    overflowY: 'scroll',\n    '&::-webkit-scrollbar': {\n      display: 'none',\n    },\n    paddingBottom: 20,\n  },\n}));\n\nexport default useStyles;\n","import { useEffect, useRef } from 'react';\nimport Box from '@material-ui/core/Box';\nimport SenderBubble from '../SenderBubble/SenderBubble';\nimport OtherUserBubble from '../OtherUserBubble/OtherUserBubble';\nimport useStyles from './useStyles';\nimport { Message } from '../../interface/User';\nimport { useAuth } from '../../context/useAuthContext';\nimport moment from 'moment';\n\ninterface Props {\n  convo: Message[] | undefined;\n}\n\nconst Messages = ({ convo }: Props): JSX.Element => {\n  const classes = useStyles();\n  const { loggedInUser } = useAuth();\n  const lastMessage = useRef<HTMLDivElement>(null);\n  \n  useEffect(() => {\n    if (lastMessage.current) {\n      lastMessage.current.scrollIntoView();\n    }\n  }, [convo]);\n  \n  return (\n    <Box className={classes.root}>\n      {convo &&\n        convo.map((item: Message) => {\n          const time = moment(item.createdAt).format('MMM Do h:mm');\n          return loggedInUser && item.senderId === loggedInUser.id ? (\n            <SenderBubble\n              key={item._id}\n              text={item.text}\n              time={time}\n              latest={false}\n              image={item.senderPic}\n              imageAlt={item.senderName}\n            />\n          ) : (\n            <OtherUserBubble\n              key={item._id}\n              text={item.text}\n              time={time}\n              otherUsername={item.senderName}\n              otherPhoto={item.senderPic}\n            />\n          );\n        })}\n      <div ref={lastMessage}></div>\n    </Box>\n  );\n};\n\nexport default Messages;\n","import { useState, useEffect } from 'react';\nimport Box from '@material-ui/core/Box';\nimport Paper from '@material-ui/core/Paper';\nimport useStyles from './useStyles';\nimport MessageHeader from '../MessageHeader/MessageHeader';\nimport MessageInput from '../MessageInput/MessageInput';\nimport Messages from '../Messages/Messages';\nimport { useConvoContext } from '../../context/conversationContext';\nimport { useAuth } from '../../context/useAuthContext';\nimport { useSocket } from '../../context/useSocketContext';\nimport { sendMessage } from '../../helpers/APICalls/conversations';\nimport { OtherUser } from '../../interface/Convo';\nimport { User } from '../../interface/User';\n\nexport default function Dashboard(): JSX.Element {\n  const classes = useStyles();\n  const { convo, recipient, setConvo } = useConvoContext();\n  const { loggedInUser } = useAuth();\n  const { socket, message } = useSocket();\n  const [otherUser, setOtherUser] = useState<OtherUser>();\n  const [messageCount, setMessageCount] = useState(0);\n\n  useEffect(() => {\n    const other =\n      loggedInUser && convo && convo.length && loggedInUser.id === convo[0].senderId\n        ? {\n            _id: convo[0].recipientId,\n            username: convo[0].recipientName,\n            profilePic: convo[0].recipientPic,\n          }\n        : convo && convo.length\n        ? {\n            _id: convo[0].senderId,\n            username: convo[0].senderName,\n            profilePic: convo[0].senderPic,\n          }\n        : recipient;\n    setOtherUser(other);\n  }, [convo, loggedInUser, recipient]);\n\n  useEffect(() => {\n    if (message) {\n      const updatedMessage = convo && convo.length ? [...convo, message] : [message];\n      setConvo(updatedMessage);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [messageCount]);\n\n  const displayMessage = (message: string) => {\n    if (loggedInUser && otherUser) {\n      const con = createMessage(loggedInUser, otherUser, message);\n      const updatedMessage = convo?.length ? [...convo, con] : [con];\n      setConvo(updatedMessage);\n      socket?.emit(\n        'send-message',\n        loggedInUser.id,\n        loggedInUser.profilePic,\n        otherUser._id,\n        otherUser.profilePic,\n        message,\n      );\n      sendMessage({ to: otherUser._id, message: message });\n    }\n  };\n\n  const createMessage = (user: User, receiver: OtherUser, message: string) => {\n      const newMessage = {\n        _id: messageCount.toString(),\n        conversationId: messageCount.toString(),\n        senderId: user.id,\n        senderName: user.username,\n        senderPic: user.profilePic,\n        recipientId: receiver._id,\n        recipientName: receiver.username,\n        recipientPic: receiver.profilePic,\n        text: message,\n        createdAt: new Date().toString(),\n      };\n      setMessageCount((prev) => prev + 1);\n      return newMessage;\n  };\n\n  return otherUser && otherUser.username ? (\n    <Paper className={classes.root}>\n      <MessageHeader online={false} username={otherUser.username} profilePic={otherUser.profilePic} />\n      <Box className={classes.chatContainer}>\n        <Messages convo={convo} />\n        <MessageInput otherUserId={otherUser._id} otherUsername={otherUser.username} displayMessage={displayMessage} />\n      </Box>\n    </Paper>\n  ) : (\n    <div></div>\n  );\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  expandBtn: {\n    '&:hover': {\n      backgroundColor: 'white',\n      color: 'black',\n      border: '1px solid black',\n    },\n    width: '90vw',\n    borderRadius: 0,\n    margin: '5px 0',\n    border: '1px solid white',\n  },\n  paper: {\n    maxWidth: '80%',\n  },\n}));\n\nexport default useStyles;\n","import { useState, Fragment } from 'react';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport ChatSideBanner from '../ChatSideBanner/ChatSideBanner';\nimport useStyles from './useStyles';\nimport { Convo } from '../../interface/User';\n\ninterface Props {\n  convos: Convo[];\n}\n\nconst ChatDrawer = ({ convos }: Props): JSX.Element => {\n  const [expanded, setExpanded] = useState<boolean>(false);\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Fragment>\n        <Box display=\"flex\" justifyContent=\"center\" width=\"100%\">\n          <Button\n            onClick={(): void => setExpanded(!expanded)}\n            color=\"primary\"\n            size=\"large\"\n            variant=\"contained\"\n            className={classes.expandBtn}\n          >\n            All Conversations\n          </Button>\n        </Box>\n        <Drawer\n          anchor={'left'}\n          classes={{ paper: classes.paper }}\n          open={expanded}\n          onClose={(): void => setExpanded(!expanded)}\n        >\n          <ChatSideBanner convos={convos} closeDrawer={setExpanded} />\n        </Drawer>\n      </Fragment>\n    </div>\n  );\n};\n\nexport default ChatDrawer;\n","import { useEffect, useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Container from '@material-ui/core/Container';\nimport Hidden from '@material-ui/core/Hidden';\nimport useStyles from './useStyles';\nimport TourContent from '../../components/TourContent/TourContent';\nimport { useAuth } from '../../context/useAuthContext';\nimport { useTourContext } from '../../context/tourContext';\nimport { useSocket } from '../../context/useSocketContext';\nimport { useHistory } from 'react-router-dom';\nimport ChatSideBanner from '../../components/ChatSideBanner/ChatSideBanner';\nimport AuthHeader from '../../components/AuthHeader/AuthHeader';\nimport ActiveChat from '../../components/ActiveChat/ActiveChat';\nimport ChatDrawer from '../../components/ChatDrawer/ChatDrawer';\nimport { getAllConvos } from '../../helpers/APICalls/conversations';\nimport { ConversationProvider } from '../../context/conversationContext';\nimport { Convo } from '../../interface/User';\n\nexport default function Dashboard(): JSX.Element {\n  const classes = useStyles();\n  const { loggedInUser } = useAuth();\n  const history = useHistory();\n  const { initSocket } = useSocket();\n  const [convos, setConvos] = useState<Convo[]>([]);\n  const { setOpen } = useTourContext();\n\n  const steps = [\n    {\n      selector: '[data-tour=\"search\"]',\n      content: {\n        words: 'Search for any user on our platform to start a conversation.',\n        theme: 'secondary',\n      },\n      style: {\n        padding: 20,\n        minWidth: '40%',\n        maxWidth: '80vw',\n        backgroundColor: 'black',\n      },\n    },\n    {\n      selector: '[data-tour=\"search\"]',\n      content: {\n        words: 'Search for any user on our platform to start a conversation.',\n        theme: 'secondary',\n      },\n      style: {\n        padding: 20,\n        minWidth: '40%',\n        maxWidth: '80vw',\n        backgroundColor: 'black',\n      },\n      action: () => {\n        setOpen(false);\n        history.push('/discovery');\n      },\n    },\n  ];\n\n  useEffect(() => {\n    getAllConvos().then((data: Convo[]) => {\n      if (data) {\n        setConvos(data);\n      }\n    });\n  }, []);\n\n  useEffect(() => {\n    initSocket();\n  }, [initSocket]);\n\n  if (loggedInUser === undefined) return <CircularProgress />;\n  if (!loggedInUser) {\n    history.push('/login');\n    // loading for a split seconds until history.push works\n    return <CircularProgress />;\n  }\n\n  return (\n    <ConversationProvider>\n      <Container classes={{ root: classes.root }} maxWidth={false}>\n        <AuthHeader btnText=\"create contest\" linkTo=\"/create-contest\" />\n        <Grid container component=\"main\" className={classes.container}>\n          <CssBaseline />\n          <Grid item xs={12} md={6} lg={4} className={classes.drawerWrapper}>\n            <Hidden smDown={true}>\n              <ChatSideBanner convos={convos} />\n            </Hidden>\n            <Hidden mdUp={true}>\n              <ChatDrawer convos={convos} />\n            </Hidden>\n          </Grid>\n          <Grid item xs={12} md={6} lg={8} className={classes.chatWrapper}>\n            <ActiveChat />\n          </Grid>\n        </Grid>\n      </Container>\n      <TourContent steps={steps} />\n    </ConversationProvider>\n  );\n}\n","import { MuiThemeProvider } from '@material-ui/core';\nimport { theme } from './themes/theme';\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\nimport Login from './pages/Login/Login';\nimport SubmitDesign from './pages/SubmitDesign/SubmitDesign';\nimport Signup from './pages/SignUp/SignUp';\nimport Profile from './pages/Profile/Profile';\nimport Discovery from './pages/Discovery/Discovery';\nimport CreateContest from './pages/CreateContest/CreateContest';\nimport AboutArtist from './pages/AboutArtist/AboutArtist';\nimport Settings from './pages/Settings/Settings';\nimport Contest from './pages/Contest/Contest';\nimport Notifications from './pages/Notifications/Notifications';\nimport ForgotPassword from './pages/ForgotPassword/ForgotPassword';\nimport ResetPassword from './pages/ResetPassword/ResetPassword';\nimport Dashboard from './pages/Dashboard/Dashboard';\nimport { AuthProvider } from './context/useAuthContext';\nimport { SocketProvider } from './context/useSocketContext';\nimport { SnackBarProvider } from './context/useSnackbarContext';\nimport { NotificationProvider } from './context/notificationContext';\nimport { TourProvider } from './context/tourContext';\nimport 'react-lazy-load-image-component/src/effects/opacity.css';\nimport './App.css';\n\nfunction App(): JSX.Element {\n  return (\n    <MuiThemeProvider theme={theme}>\n      <BrowserRouter>\n        <SnackBarProvider>\n          <AuthProvider>\n            <SocketProvider>\n              <NotificationProvider>\n                <TourProvider>\n                  <Switch>\n                    <Route exact path=\"/login\" component={Login} />\n                    <Route exact path=\"/signup\" component={Signup} />\n                    <Route exact path=\"/submit-design/:id\" component={SubmitDesign} />\n                    <Route exact path=\"/profile\" component={Profile} />\n                    <Route exact path=\"/messages\" component={Dashboard} />\n                    <Route exact path=\"/create-contest\" component={CreateContest} />\n                    <Route exact path=\"/settings\" component={Settings} />\n                    <Route exact path=\"/notifications\" component={Notifications} />\n                    <Route exact path=\"/contest/:id\" component={Contest} />\n                    <Route exact path=\"/forgot-password\" component={ForgotPassword} />\n                    <Route path=\"/reset-password/:token/:id\" component={ResetPassword} />\n                    <Route exact path=\"/artist\" component={AboutArtist} />\n                    <Route exact path=\"/dashboard\" component={Discovery} />\n                    <Route path=\"*\">\n                      <Redirect to=\"/dashboard\" />\n                    </Route>\n                  </Switch>\n                </TourProvider>\n              </NotificationProvider>\n            </SocketProvider>\n          </AuthProvider>\n        </SnackBarProvider>\n      </BrowserRouter>\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}